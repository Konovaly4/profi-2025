[{"C:\\Users\\Yulia\\Desktop\\dev\\profi-2025\\src\\index.js":"1","C:\\Users\\Yulia\\Desktop\\dev\\profi-2025\\src\\reportWebVitals.js":"2","C:\\Users\\Yulia\\Desktop\\dev\\profi-2025\\src\\components\\App.js":"3","C:\\Users\\Yulia\\Desktop\\dev\\profi-2025\\src\\components\\Footer\\Footer.jsx":"4","C:\\Users\\Yulia\\Desktop\\dev\\profi-2025\\src\\components\\About\\About.jsx":"5","C:\\Users\\Yulia\\Desktop\\dev\\profi-2025\\src\\components\\Poem\\Poem.jsx":"6","C:\\Users\\Yulia\\Desktop\\dev\\profi-2025\\src\\constants\\urlData.js":"7","C:\\Users\\Yulia\\Desktop\\dev\\profi-2025\\src\\components\\ProtectedRoute\\ProtectedRoute.jsx":"8","C:\\Users\\Yulia\\Desktop\\dev\\profi-2025\\src\\components\\Mytasks\\Mytasks.jsx":"9","C:\\Users\\Yulia\\Desktop\\dev\\profi-2025\\src\\components\\Main\\Main.jsx":"10","C:\\Users\\Yulia\\Desktop\\dev\\profi-2025\\src\\components\\Header\\Header.jsx":"11","C:\\Users\\Yulia\\Desktop\\dev\\profi-2025\\src\\components\\Reviews\\Reviews.jsx":"12","C:\\Users\\Yulia\\Desktop\\dev\\profi-2025\\src\\hooks\\useTaskFetch.js":"13","C:\\Users\\Yulia\\Desktop\\dev\\profi-2025\\src\\components\\TaskForm\\TaskForm.jsx":"14","C:\\Users\\Yulia\\Desktop\\dev\\profi-2025\\src\\constants\\tasksData.js":"15","C:\\Users\\Yulia\\Desktop\\dev\\profi-2025\\src\\constants\\mainButtonsData.js":"16","C:\\Users\\Yulia\\Desktop\\dev\\profi-2025\\src\\constants\\formData.js":"17","C:\\Users\\Yulia\\Desktop\\dev\\profi-2025\\src\\components\\Mytask\\Mytask.jsx":"18","C:\\Users\\Yulia\\Desktop\\dev\\profi-2025\\src\\components\\Button\\Button.jsx":"19","C:\\Users\\Yulia\\Desktop\\dev\\profi-2025\\src\\components\\Reviews\\Arrow\\Arrow.jsx":"20","C:\\Users\\Yulia\\Desktop\\dev\\profi-2025\\src\\components\\Reviews\\Review\\Review.jsx":"21","C:\\Users\\Yulia\\Desktop\\dev\\profi-2025\\src\\components\\UserPopup\\UserPopup.jsx":"22","C:\\Users\\Yulia\\Desktop\\dev\\profi-2025\\src\\components\\AlertPopup\\AlertPopup.jsx":"23","C:\\Users\\Yulia\\Desktop\\dev\\profi-2025\\src\\components\\TaskForm\\TaskFormSelect\\TaskFormSelect.jsx":"24","C:\\Users\\Yulia\\Desktop\\dev\\profi-2025\\src\\components\\CloseButton\\CloseButton.jsx":"25","C:\\Users\\Yulia\\Desktop\\dev\\profi-2025\\src\\components\\TaskCard\\TaskCard.jsx":"26","C:\\Users\\Yulia\\Desktop\\dev\\profi-2025\\src\\constants\\userPopupData.js":"27","C:\\Users\\Yulia\\Desktop\\dev\\profi-2025\\src\\hooks\\useUserFetch.js":"28","C:\\Users\\Yulia\\Desktop\\dev\\profi-2025\\src\\hooks\\useQuoteFetch.js":"29","C:\\Users\\Yulia\\Desktop\\dev\\profi-2025\\src\\constants\\ratingValue.js":"30"},{"size":624,"mtime":1609037702595,"results":"31","hashOfConfig":"32"},{"size":375,"mtime":1609037702596,"results":"33","hashOfConfig":"32"},{"size":3449,"mtime":1609037702574,"results":"34","hashOfConfig":"32"},{"size":260,"mtime":1609035546476,"results":"35","hashOfConfig":"32"},{"size":973,"mtime":1609032915912,"results":"36","hashOfConfig":"32"},{"size":803,"mtime":1609033251187,"results":"37","hashOfConfig":"32"},{"size":161,"mtime":1609080037108,"results":"38","hashOfConfig":"32"},{"size":296,"mtime":1609037702582,"results":"39","hashOfConfig":"32"},{"size":2010,"mtime":1609078791637,"results":"40","hashOfConfig":"32"},{"size":2279,"mtime":1609032917775,"results":"41","hashOfConfig":"32"},{"size":1779,"mtime":1609026585380,"results":"42","hashOfConfig":"32"},{"size":2007,"mtime":1609082747690,"results":"43","hashOfConfig":"32"},{"size":4219,"mtime":1609080037112,"results":"44","hashOfConfig":"32"},{"size":4399,"mtime":1609037702587,"results":"45","hashOfConfig":"32"},{"size":281,"mtime":1609037702590,"results":"46","hashOfConfig":"32"},{"size":157,"mtime":1609037702589,"results":"47","hashOfConfig":"32"},{"size":3192,"mtime":1609037702589,"results":"48","hashOfConfig":"32"},{"size":676,"mtime":1609078789600,"results":"49","hashOfConfig":"32"},{"size":218,"mtime":1609015486706,"results":"50","hashOfConfig":"32"},{"size":318,"mtime":1609037702583,"results":"51","hashOfConfig":"32"},{"size":1227,"mtime":1609091710404,"results":"52","hashOfConfig":"32"},{"size":3853,"mtime":1609037702589,"results":"53","hashOfConfig":"32"},{"size":694,"mtime":1609037702572,"results":"54","hashOfConfig":"32"},{"size":468,"mtime":1609037702588,"results":"55","hashOfConfig":"32"},{"size":179,"mtime":1609037702577,"results":"56","hashOfConfig":"32"},{"size":6435,"mtime":1609080037107,"results":"57","hashOfConfig":"32"},{"size":393,"mtime":1609037702590,"results":"58","hashOfConfig":"32"},{"size":3102,"mtime":1609037702591,"results":"59","hashOfConfig":"32"},{"size":744,"mtime":1609080037110,"results":"60","hashOfConfig":"32"},{"size":361,"mtime":1609080037107,"results":"61","hashOfConfig":"32"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},"v1h7zk",{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"64"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"64"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"64"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"64"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"64"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"64"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"64"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},"C:\\Users\\Yulia\\Desktop\\dev\\profi-2025\\src\\index.js",[],["130","131"],"C:\\Users\\Yulia\\Desktop\\dev\\profi-2025\\src\\reportWebVitals.js",[],"C:\\Users\\Yulia\\Desktop\\dev\\profi-2025\\src\\components\\App.js",["132","133","134","135","136","137","138","139","140","141"],"import {useState, useEffect} from 'react';\r\nimport { Route, Switch, Redirect } from 'react-router-dom';\r\n// hooks\r\nimport useTaskFetch from '../hooks/useTaskFetch';\r\n// components\r\nimport Header from './Header/Header';\r\nimport Main from './Main/Main';\r\nimport About from './About/About';\r\nimport Poem from './Poem/Poem';\r\nimport Reviews from './Reviews/Reviews';\r\nimport Footer from './Footer/Footer';\r\nimport TaskForm from './TaskForm/TaskForm';\r\n// import TaskCard from './TaskCard/TaskCard';\r\nimport Mytasks from './Mytasks/Mytasks';\r\nimport ProtectedRoute from './ProtectedRoute/ProtectedRoute';\r\n// constants\r\nimport {urlData} from '../constants/urlData';\r\n// css\r\nimport './App.css';\r\n\r\nfunction App() {\r\n  // select states\r\n  const [taskShow, setTaskShow] = useState(false);\r\n  // const [taskCardShow, setTaskCardShow] = useState(false);\r\n  const [user, setUser] = useState({\r\n    id: undefined,\r\n    username: undefined,\r\n    userphone: undefined,\r\n    email: undefined,\r\n  });\r\n  const [loggedIn, setLoggedIn] = useState(false);\r\n  const [currentTask, setCurrentTask] = useState(undefined);\r\n\r\n  // token\r\n  const token = JSON.parse(localStorage.getItem('jwt'));\r\n  const workData = undefined;\r\n  const worker = undefined;\r\n\r\n  // task fetch api\r\n  const {\r\n    tasksGet,\r\n    tasksGetByClient,\r\n    tasksGetByWorker,\r\n    taskCreate,\r\n    taskUpdate,\r\n    taskDelete\r\n  } = useTaskFetch (urlData.network, token, workData, user, worker);\r\n\r\n  // console.log('user - ' + user.userName)\r\n\r\n    // set task list\r\n    // useEffect(() => {\r\n    //   !token && !user.userName && setTaskList([]);\r\n    //   tasksGetByClient()\r\n    //   .then(res => {\r\n    //     setTaskList(res);\r\n    //   })\r\n    // }, [user, token])\r\n\r\n  // show task popup\r\n  const showTaskPopup = () => {\r\n    setTaskShow(true)\r\n  }\r\n\r\n  // hide task popup\r\n  const hideTaskPopup = () => {\r\n    setTaskShow(false)\r\n  }\r\n\r\n  // fetch user\r\n  const setCurrentUser = (res) => {\r\n    localStorage.setItem('jwt', JSON.stringify(res.jwt))\r\n    setUser({\r\n      id: res.user.id,\r\n      username: res.user.username,\r\n      userphone: res.user.userphone,\r\n      email: res.user.email,\r\n    });\r\n    setLoggedIn(true);\r\n  }\r\n\r\n  const logout = (res) => {\r\n    localStorage.removeItem('jwt')\r\n    setUser({\r\n      id: undefined,\r\n      username: undefined,\r\n      userphone: undefined,\r\n      email: undefined,\r\n    });\r\n    setLoggedIn(false);\r\n  }\r\n\r\n  console.log(localStorage.getItem('jwt'))\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Header setUser={setCurrentUser} user={user} loggedIn={loggedIn} logout={logout}/>\r\n      <Main showTaskForm={showTaskPopup} hideTaskForm={hideTaskPopup} user={user} loggedIn={loggedIn} />\r\n      <Switch>\r\n        <Route exact path='/'>\r\n          <About />\r\n          <Poem />\r\n          <Reviews />\r\n        </Route>\r\n        <ProtectedRoute path='/my-tasks' \r\n          loggedIn={loggedIn} \r\n          component={Mytasks} \r\n          // onTaskShow={showTaskCardPopup} \r\n          // tasks={taskList} \r\n          user={user} \r\n          token={token} />\r\n        {/* <Route path='/my-tasks'>\r\n          <Mytasks onTaskShow={showTaskCardPopup} tasks={taskList}/>\r\n        </Route> */}\r\n      </Switch>\r\n      <Footer />\r\n      <TaskForm visibility={taskShow} formClose={hideTaskPopup} user={user} token={token} />\r\n      {/* <TaskCard visibility={taskCardShow} formClose={hideTaskCardPopup} /> */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;","C:\\Users\\Yulia\\Desktop\\dev\\profi-2025\\src\\components\\Footer\\Footer.jsx",[],"C:\\Users\\Yulia\\Desktop\\dev\\profi-2025\\src\\components\\About\\About.jsx",[],"C:\\Users\\Yulia\\Desktop\\dev\\profi-2025\\src\\components\\Poem\\Poem.jsx",[],"C:\\Users\\Yulia\\Desktop\\dev\\profi-2025\\src\\constants\\urlData.js",[],"C:\\Users\\Yulia\\Desktop\\dev\\profi-2025\\src\\components\\ProtectedRoute\\ProtectedRoute.jsx",[],"C:\\Users\\Yulia\\Desktop\\dev\\profi-2025\\src\\components\\Mytasks\\Mytasks.jsx",["142","143","144","145","146","147"],"import {useState, useEffect} from 'react';\r\nimport Mytask from '../Mytask/Mytask';\r\nimport TaskCard from '../TaskCard/TaskCard';\r\nimport useTaskFetch from '../../hooks/useTaskFetch';\r\nimport {tasksData} from '../../constants/tasksData';\r\nimport {urlData} from '../../constants/urlData';\r\nimport './Mytasks.css';\r\n\r\nconst Mytasks = (props) => {\r\n  const [taskList, setTaskList] = useState([]);\r\n  const [taskCardShow, setTaskCardShow] = useState(false);\r\n  const [currentTask, setCurTask] = useState([]);\r\n  // get user token\r\n  // temp data\r\n  const workData = undefined;\r\n  const worker = undefined;\r\n\r\n  const {\r\n    tasksGet,\r\n    tasksGetByClient,\r\n    tasksGetByWorker,\r\n    taskCreate,\r\n    taskUpdate,\r\n    taskDelete\r\n  } = useTaskFetch(urlData.network, props.token, workData, props.user, worker);\r\n\r\n  useEffect(() => {\r\n    !props.token && !props.user.username && setTaskList([]);\r\n    tasksGetByClient()\r\n    .then(res => {\r\n      setTaskList(res);\r\n    })\r\n  }, [])\r\n\r\n  const showTaskCard = (e) => {\r\n    console.log(e.target.id);\r\n    setCurTask(taskList[e.target.id]);\r\n    setTaskCardShow(true);\r\n    // console.log('currentTask - ' + currentTask.client_name);\r\n  }\r\n\r\n  const hideTaskCard = () => {\r\n    setTaskCardShow(false);\r\n  }\r\n\r\n\r\n  return (\r\n    <section className='mytasks'>\r\n      <div className='mytasks__container'>\r\n        <h2 className='mytasks__title'>{tasksData.title}</h2>\r\n      </div>\r\n      <ul className='mytasks__list'>\r\n        {taskList.length === 0 ?\r\n          <p className='mytasks__empty-note'>{tasksData.emptyNote}</p> :\r\n          taskList.map((item, num) => {\r\n            return (\r\n              <Mytask key={num} number={num} onTaskShow={showTaskCard} task={item}/>\r\n            )\r\n          })\r\n        }\r\n        </ul>\r\n        {currentTask.length !== 0 &&\r\n          <TaskCard visibility={taskCardShow} currentTask={currentTask} onClose={hideTaskCard} token={props.token} user={props.user} />\r\n        }\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default Mytasks;\r\n","C:\\Users\\Yulia\\Desktop\\dev\\profi-2025\\src\\components\\Main\\Main.jsx",["148","149","150","151","152","153","154"],"import {useState, useEffect} from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport useTaskFetch from '../../hooks/useTaskFetch';\r\nimport Button from '../Button/Button';\r\nimport {mainButtonsData} from '../../constants/mainButtonsData';\r\nimport {urlData} from '../../constants/urlData';\r\nimport './Main.css';\r\nimport Main__img from '../../images/main__bgi.jpg';\r\n\r\nconst Buttons = (props) => {\r\n  const userName = props.user.userName;\r\n  const userPhone = props.user.userPhone;\r\n  const userEmail = props.user.userEmail;\r\n  const userToken = props.user.userToken;\r\n\r\n  const userData = {userName, userPhone, userEmail, userToken};\r\n\r\n  const {\r\n    tasksGet,\r\n    tasksGetByClient,\r\n    tasksGetByWorker,\r\n    taskCreate,\r\n    taskUpdate,\r\n    taskDelete\r\n  } = useTaskFetch(urlData.local, userData);\r\n\r\n  // state of link status and page appearance\r\n  const [pageMode, setPageMode] = useState('main');\r\n\r\n  // set page mode\r\n  // useEffect(() => {\r\n  //   props.loggedIn && setPageMode('main')\r\n  // }, [props.loggedIn])\r\n\r\n  // const getClientTasks = () => {\r\n  //   tasksGetByClient()\r\n  //   .then((res) => {\r\n  //     props.setTasks(res);\r\n  //   })\r\n  //   .catch(err => {\r\n  //     err.json()\r\n  //     .then(err => console.log(err));\r\n  //   })\r\n  // }\r\n\r\n  const showTasks = () => {\r\n    setPageMode('tasks');\r\n  }\r\n\r\n  const hideTasks = () => {\r\n    setPageMode('main');\r\n  }\r\n\r\n\r\n  return (\r\n    <section className='main'>\r\n        <h1 className='main__title'>Гражданин, найди мастера!</h1>\r\n        <img className='main__img' src={Main__img} alt='Найти мастера' />\r\n        <div className='main__buttons-container'>\r\n          {props.loggedIn && pageMode ==='main' && <Link className='main__navlink' to='/my-tasks' onClick={showTasks}>{mainButtonsData.showTasks}</Link>}\r\n          {props.loggedIn && pageMode ==='tasks' && <Link className='main__navlink' to='/' onClick={hideTasks}>{mainButtonsData.showMainPage}</Link>}\r\n          {props.loggedIn && <Button placeholder={mainButtonsData.createTask} onPress={props.showTaskForm}/>}\r\n          {!props.loggedIn && <p className='main__login-note'>Войдите или зарегистрируйтесь</p>}\r\n        </div>\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default Buttons;\r\n","C:\\Users\\Yulia\\Desktop\\dev\\profi-2025\\src\\components\\Header\\Header.jsx",["155","156","157","158","159"],"import {useState} from 'react';\r\nimport UserPopup from '../UserPopup/UserPopup';\r\nimport './Header.css';\r\nimport Header__img from '../../images/logo.svg';\r\n\r\nconst Header = (props) => {\r\n  // collecting states\r\n  const [userState, setUserState] = useState('');\r\n\r\n  // set reg state\r\n  const setRegState = (e) => {\r\n    e.preventDefault();\r\n    setUserState('registration');\r\n  }\r\n\r\n  // set reg state\r\n  const setLoginState = () => {\r\n    setUserState('login');\r\n  }\r\n\r\n  // clear reg state\r\n  const clearRegState = () => {\r\n    setUserState('');\r\n  }\r\n\r\n  return (\r\n    <header className='header'>\r\n      <div className='header__container'>\r\n        <a className='header__link' href='#'>\r\n        <img className='header__img' src={Header__img} alt='Логотип' />\r\n        Гражданин поэт\r\n        </a>\r\n        <ul className='header__user-navigation'>\r\n          { !props.loggedIn && <li className='header__user-navigation-item' onClick={setLoginState}><a className='header__login-link' href='#'>Вход</a></li>}\r\n          { !props.loggedIn && <li className='header__user-navigation-item' onClick={setRegState}><a className='header__signin-link' href='#'>Регистрация</a></li>}\r\n          { props.loggedIn && <p className='header__user-data'>{props.user.username}</p>}\r\n          { props.loggedIn && <li className='header__user-navigation-item'><a className='header__logout-link' onClick={props.logout} aria-label='Выход'></a></li>}\r\n        </ul>\r\n        {props.user.userToken && <p>Привет, {props.user.userName}</p>}\r\n        <UserPopup state={userState} setUserState={setUserState} setLoginState={setLoginState} clearRegState={clearRegState} setUser={props.setUser}/>\r\n      </div>\r\n    </header>\r\n  )\r\n}\r\n\r\nexport default Header;\r\n","C:\\Users\\Yulia\\Desktop\\dev\\profi-2025\\src\\components\\Reviews\\Reviews.jsx",["160","161","162","163","164","165"],"import {useState, useEffect} from 'react';\r\nimport Arrow from './Arrow/Arrow';\r\nimport Review from './Review/Review';\r\nimport useTaskFetch from '../../hooks/useTaskFetch';\r\nimport {urlData} from '../../constants/urlData';\r\nimport './Reviews.css';\r\n\r\nconst Reviews = (props) => {\r\n  const [dataList, setDataList] = useState([]);\r\n  const [dataSearcnValue, setDataSearchValue] = useState(0);\r\n\r\n  // constants\r\n  const userData = props.user;\r\n  const workData = undefined;\r\n  const workerData = undefined;\r\n\r\n  // hooks\r\n  const {\r\n    tasksGet,\r\n    tasksGetByClient,\r\n    tasksGetByWorker,\r\n    taskCreate,\r\n    taskUpdate,\r\n    taskDelete\r\n  } = useTaskFetch(urlData.network, props.token, workData, userData, workerData)\r\n\r\n  // collect reviews\r\n  useEffect(() => {\r\n    tasksGet()\r\n    .then(res => setDataList(res))\r\n    .catch(err => console.log(err));\r\n  }, [])\r\n\r\n  const searchRight = () => {\r\n    if (dataSearcnValue === (dataList.length - 2)) return;\r\n    setDataSearchValue(dataSearcnValue + 1);\r\n  }\r\n\r\n  const searchLeft = () => {\r\n    if (dataSearcnValue === 0) return;\r\n    setDataSearchValue(dataSearcnValue - 1);\r\n  }\r\n\r\n  return (\r\n    <section className='reviews'>\r\n      <h2 className='reviews__title'>Отзывы</h2>\r\n      <div className='reviews__container'>\r\n        {(!dataList || dataList.length === 0) && <p className='reviews__note'>Пока нет ревью</p>}\r\n        {dataList.length !== 0 && dataSearcnValue !== 0 && <Arrow direction= 'left' onArrowClick={searchLeft} />}\r\n        {dataList.length !== 0 &&\r\n          <ul className='reviews__list'>\r\n            {dataList.slice(dataSearcnValue, dataSearcnValue + 2).map((i, num) => {\r\n              return (\r\n                <Review key={num} data={i} />\r\n              )\r\n            } )}\r\n          </ul>\r\n        }\r\n        {dataList.length !== 0 && dataSearcnValue !== (dataList.length - 2) && <Arrow direction='right' onArrowClick={searchRight} />}\r\n      </div>\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default Reviews;\r\n","C:\\Users\\Yulia\\Desktop\\dev\\profi-2025\\src\\hooks\\useTaskFetch.js",[],"C:\\Users\\Yulia\\Desktop\\dev\\profi-2025\\src\\components\\TaskForm\\TaskForm.jsx",["166","167","168","169","170","171"],"import {useState, useEffect} from 'react';\r\nimport cn from 'classnames';\r\nimport TaskFormSelect from './TaskFormSelect/TaskFormSelect';\r\nimport CloseButton from '../CloseButton/CloseButton';\r\nimport AlertPopup from '../AlertPopup/AlertPopup';\r\nimport useTaskFetch from '../../hooks/useTaskFetch';\r\nimport {taskFormData, alertPopupData, taskFormPlaceholders,  taskFormLabels, taskFormTypeList, taskFormSubtypeList, buttonData} from '../../constants/formData';\r\nimport {urlData} from '../../constants/urlData';\r\n\r\nimport './TaskForm.css';\r\n\r\nconst TaskForm = (props) => {\r\n  // select states\r\n  const [alertVisibility, SetAlertVisibility] = useState(false);\r\n  const [type, setWorkType] = useState(0);\r\n  const [subtype, setWorkSubtype] = useState(0);\r\n  const [description, setWorkDescription] = useState(0);\r\n  // collect user data\r\n  const userData = props.user;\r\n  // create common data\r\n  const workData = {type, subtype, description};\r\n  const workerData = undefined;\r\n\r\n  // use fetch hooks\r\n  const {\r\n    tasksGet,\r\n    tasksGetByClient,\r\n    tasksGetByWorker,\r\n    taskCreate,\r\n    taskUpdate,\r\n    taskDelete\r\n  } = useTaskFetch(urlData.network, props.token, workData, userData, workerData)\r\n\r\n\r\n  // set work type\r\n  const setType = (e) => {\r\n    // console.log('e.target - ' + e.target.value)\r\n    setWorkType(e.target.value);\r\n    setWorkSubtype(0);\r\n  }\r\n\r\n  // set work subtype\r\n  const setSubtype = (e) => {\r\n    // console.log('e.subtarget - ' + e.target.value)\r\n    setWorkSubtype(e.target.value);\r\n  }\r\n\r\n  // set work description\r\n  const setDescription = (e) => {\r\n    setWorkDescription(e.target.value);\r\n  }\r\n\r\n  // open alert popup\r\n  const alertOpen = () => {\r\n    SetAlertVisibility(true);\r\n  }\r\n  \r\n  // close alert popup with yes option\r\n  const alertCloseYesOption = (e) => {\r\n    e.preventDefault();\r\n    SetAlertVisibility(false);\r\n      props.formClose();\r\n  }\r\n\r\n  // close alert popup with yes option\r\n  const alertCloseNoOption = (e) => {\r\n    e.preventDefault();\r\n    SetAlertVisibility(false);\r\n  }\r\n\r\n  // closing by clicking on wrapper\r\n  const closeByWrapper = (e) => {\r\n    !e.target.closest('.task-form') && alertOpen();\r\n  }\r\n\r\n    // create new task\r\n    const createTask = () => {\r\n      taskCreate()\r\n      .then(res => {\r\n        console.log(res);\r\n      })\r\n      .catch(err => {\r\n        err.json()\r\n        .then(err => console.log(err));\r\n      })\r\n    }\r\n\r\n    // click to send\r\n    const formSubmit = (e) => {\r\n      e.preventDefault();\r\n      // console.log('token - ' + props.token);\r\n      createTask();\r\n      props.formClose();\r\n    }\r\n\r\n\r\n  // console.log(selectedWorkType);\r\n  // console.log(selectedWorkSubtype);\r\n  // console.log('break');\r\n\r\n\r\n  return (\r\n    <div className={cn('task-form-wrapper', {'task-form-wrapper_visible': props.visibility})} onClick={closeByWrapper}>\r\n      <form className='task-form'>\r\n        <h2 className='task-form__title'>{taskFormData.title}</h2>\r\n        <ul className='task-form__list'>\r\n          <li className='task-form__list-item'>\r\n            <p className='task-form__field-note'>{taskFormData.workType}</p>\r\n            <TaskFormSelect name='work-type' label={taskFormLabels.workType} optionList={taskFormTypeList} selectOption={setType} />\r\n          </li>\r\n          <li className='task-form__list-item'>\r\n            <p className='task-form__field-note'>{taskFormData.workSubtype}</p>\r\n            <TaskFormSelect name='work-subtype' label={taskFormLabels.workSubtype} optionList={taskFormSubtypeList[type]} selectOption={setSubtype} />\r\n          </li>\r\n          <li className='task-form__list-item'>\r\n            <p className='task-form__field-note'>{taskFormData.workDescription}</p>\r\n            <textarea name='description' rows='4' className='task-form__field-item' placeholder={taskFormPlaceholders.workDescription} onChange={setDescription}></textarea>\r\n          </li>\r\n        </ul>\r\n        <p className='task-form__field-note'>Ваши имя, телефон и email будут указаны в заявке</p>\r\n        <button className='task-form__submit-button' onClick={formSubmit}>{buttonData.submit}</button>\r\n        <CloseButton onPress={alertOpen} />\r\n        <AlertPopup visibility={alertVisibility} title={alertPopupData.dataFormClose} onYesClick={alertCloseYesOption} onNoClick={alertCloseNoOption} />\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default TaskForm;","C:\\Users\\Yulia\\Desktop\\dev\\profi-2025\\src\\constants\\tasksData.js",[],"C:\\Users\\Yulia\\Desktop\\dev\\profi-2025\\src\\constants\\mainButtonsData.js",[],"C:\\Users\\Yulia\\Desktop\\dev\\profi-2025\\src\\constants\\formData.js",[],"C:\\Users\\Yulia\\Desktop\\dev\\profi-2025\\src\\components\\Mytask\\Mytask.jsx",[],"C:\\Users\\Yulia\\Desktop\\dev\\profi-2025\\src\\components\\Button\\Button.jsx",[],"C:\\Users\\Yulia\\Desktop\\dev\\profi-2025\\src\\components\\Reviews\\Arrow\\Arrow.jsx",[],"C:\\Users\\Yulia\\Desktop\\dev\\profi-2025\\src\\components\\Reviews\\Review\\Review.jsx",["172","173"],"C:\\Users\\Yulia\\Desktop\\dev\\profi-2025\\src\\components\\UserPopup\\UserPopup.jsx",[],"C:\\Users\\Yulia\\Desktop\\dev\\profi-2025\\src\\components\\AlertPopup\\AlertPopup.jsx",[],"C:\\Users\\Yulia\\Desktop\\dev\\profi-2025\\src\\components\\TaskForm\\TaskFormSelect\\TaskFormSelect.jsx",[],"C:\\Users\\Yulia\\Desktop\\dev\\profi-2025\\src\\components\\CloseButton\\CloseButton.jsx",[],"C:\\Users\\Yulia\\Desktop\\dev\\profi-2025\\src\\components\\TaskCard\\TaskCard.jsx",["174","175","176","177","178","179","180"],"import {useState, useEffect} from 'react';\r\nimport cn from 'classnames';\r\nimport CloseButton from '../CloseButton/CloseButton';\r\nimport AlertPopup from '../AlertPopup/AlertPopup';\r\nimport useTaskFetch from '../../hooks/useTaskFetch';\r\nimport useQuoteFetch from '../../hooks/useQuoteFetch';\r\nimport {urlData} from '../../constants/urlData';\r\nimport {ratingValue} from '../../constants/ratingValue';\r\nimport {taskFormPlaceholders, taskButtonPlaceholders, buttonData, alertPopupData, taskFormTypeList, taskFormSubtypeList} from '../../constants/formData';\r\nimport './TaskCard.css'\r\n\r\nconst TaskCard = (props) => {\r\n  // set work status\r\n  const [workConfirmation, setWorkConfirmation] = useState('not-confirmed');\r\n  const [alertVisibility, SetAlertVisibility] = useState(false);\r\n  const [feedbackValue, setFeedbackValue] = useState('');\r\n  const [rating, setRating] = useState(0);\r\n  const [quote, setQuote] = useState('');\r\n\r\n  // constants\r\n  const workSubTypeList = taskFormSubtypeList[props.currentTask.type];\r\n  const workData = props.currentTask;\r\n  const worker = undefined;\r\n\r\n  // hooks\r\n  // task hook\r\n  const {\r\n    taskUpdate,\r\n    taskDelete\r\n  } = useTaskFetch(urlData.network, props.token, workData, props.user, worker);\r\n\r\n  // qoute hook\r\n  const {quoteSearch} = useQuoteFetch(urlData.quoteUrl, feedbackValue);\r\n\r\n  // set initial rating\r\n  useEffect(() => {\r\n    setRating(props.currentTask.rating);\r\n  }, [props.currentTask])\r\n\r\n  //set feedback value\r\n  useEffect(() => {\r\n    const keywordList = ratingValue[rating];\r\n    const keyword = rating == 0 ? ratingValue[0] :  keywordList[Math.round(Math.random() * (keywordList.length - 1))];\r\n    setFeedbackValue(keyword);\r\n    console.log('feedbackval - ' + feedbackValue);\r\n  }, [rating])\r\n\r\n  // set quote\r\n  useEffect(() => {\r\n    if (rating == 0) {\r\n      setQuote(feedbackValue);\r\n    }\r\n    quoteSearch()\r\n    .then(data => {\r\n      console.log('data - ' + data);\r\n      if (!data) return;\r\n      setQuote(data);\r\n    })\r\n    console.log('quote - ' + quote);\r\n  }, [feedbackValue])\r\n\r\n  // work status setter\r\n  const setWorkStatus = () => {\r\n    setWorkConfirmation(workConfirmation === 'not-confirmed' ? 'confirmed' : workConfirmation === 'confirmed' ? 'done' : 'not-confirmed');\r\n  }\r\n\r\n  // closing by clicking on wrapper\r\n  const closeByWrapper = (e) => {\r\n    e.preventDefault();\r\n    !e.target.closest('.task-card') && props.onClose();\r\n  }\r\n\r\n  // open alert popup\r\n  const alertOpen = () => {\r\n    SetAlertVisibility(true);\r\n  }\r\n\r\n  // close alert popup\r\n  const alertClose = (e) => {\r\n    e.preventDefault();\r\n    SetAlertVisibility(false);\r\n  }\r\n\r\n  const setFeedback = (e) => {\r\n    setFeedbackValue(e.target.value);\r\n  }\r\n\r\n  const changeRating = (e) => {\r\n    if (e.target.id == rating) {\r\n      setRating(e.target.id - 1);\r\n    } else setRating(e.target.id);\r\n  }\r\n\r\n  // const selectQuote = (e) => {\r\n  //   e.preventDefault();\r\n  //   if (rating == 0) {\r\n  //     setQuote(feedbackValue);\r\n  //   }\r\n  //   quoteSearch()\r\n  //   .then(data => {\r\n  //     console.log('data - ' + data);\r\n  //     if (!data) return;\r\n  //     setQuote(data);\r\n  //   })\r\n  //   console.log('quote - ' + quote);\r\n  //   props.onClose();\r\n  // }\r\n\r\n  const updateTask = (e) => {\r\n    e.preventDefault();\r\n    workData.feedback = quote;\r\n    workData.rating = rating;\r\n    if (workConfirmation === 'not-confirmed') {\r\n      workData.accepted = false;\r\n      workData.completed = false;\r\n    } else if (workConfirmation === 'confirmed') {\r\n      workData.accepted = true;\r\n      workData.completed = false;\r\n    }else if (workConfirmation === 'done') {\r\n      workData.accepted = true;\r\n      workData.completed = true;\r\n    };\r\n    taskUpdate()\r\n    .then(res => console.log(res))\r\n    .catch(err => console.log(err));\r\n    props.onClose();\r\n  }\r\n\r\n  const deleteTask = (e) => {\r\n    e.preventDefault();\r\n    taskDelete()\r\n    .then(res => console.log(res))\r\n    .catch(err => console.log(err));\r\n    SetAlertVisibility(false);\r\n    props.onClose();\r\n  }\r\n\r\n  return (\r\n    <div className={cn('task-card__wrapper', {'task-card__wrapper_visible': props.visibility})} onClick={closeByWrapper}>\r\n      <section className='task-card'>\r\n        <h2 className='task-card__title'>{workSubTypeList[props.currentTask.subtype]  }</h2>\r\n        <p className='task-card__create-data'>{props.currentTask.createdAt}</p>\r\n        <p className='task-card__description' rows='4' placeholder={taskFormPlaceholders.workDescription}>{props.currentTask.description}</p>\r\n        <button className={cn('task-card__confirm-button', {\r\n          'task-card__confirm-button_not-confirmed': workConfirmation === 'not-confirmed',\r\n          'task-card__confirm-button_confirmed': workConfirmation === 'confirmed',\r\n          'task-card__confirm-button_done': workConfirmation === 'done'\r\n        })} onClick={setWorkStatus}>{\r\n          workConfirmation === 'not-confirmed' ? taskButtonPlaceholders.notConfirmed : \r\n          workConfirmation === 'confirmed' ? taskButtonPlaceholders.confirmed : taskButtonPlaceholders.finished\r\n          }</button>\r\n        <textarea className='task-card__feedback' rows='6' placeholder={taskFormPlaceholders.clientFeedback} onChange={setFeedback}></textarea>\r\n        <ul className='task-card__rating-container'>\r\n          <li id='1' className={cn('task-card__rating-item', {'task-card__rating-item_active': rating >= 1})} onClick={changeRating} />\r\n          <li id='2' className={cn('task-card__rating-item', {'task-card__rating-item_active': rating >= 2})} onClick={changeRating} />\r\n          <li id='3' className={cn('task-card__rating-item', {'task-card__rating-item_active': rating >= 3})} onClick={changeRating} />\r\n          <li id='4' className={cn('task-card__rating-item', {'task-card__rating-item_active': rating == 4})} onClick={changeRating} />\r\n        </ul>\r\n        <div className='task-card__button-wrapper'>\r\n          <button className='task-card__button task-card__button_save-button' onClick={updateTask}>{buttonData.save}</button>\r\n          <button className='task-card__button task-card__button_delete-button' onClick={alertOpen} >{buttonData.delete}</button>\r\n        </div>\r\n        <CloseButton onPress={props.onClose} />\r\n        <AlertPopup visibility={alertVisibility} title={alertPopupData.dataCardDelete} onYesClick={deleteTask} onNoClick={alertClose} />\r\n      </section>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default TaskCard;","C:\\Users\\Yulia\\Desktop\\dev\\profi-2025\\src\\constants\\userPopupData.js",[],"C:\\Users\\Yulia\\Desktop\\dev\\profi-2025\\src\\hooks\\useUserFetch.js",[],"C:\\Users\\Yulia\\Desktop\\dev\\profi-2025\\src\\hooks\\useQuoteFetch.js",[],"C:\\Users\\Yulia\\Desktop\\dev\\profi-2025\\src\\constants\\ratingValue.js",[],{"ruleId":"181","replacedBy":"182"},{"ruleId":"183","replacedBy":"184"},{"ruleId":"185","severity":1,"message":"186","line":1,"column":19,"nodeType":"187","messageId":"188","endLine":1,"endColumn":28},{"ruleId":"185","severity":1,"message":"189","line":2,"column":25,"nodeType":"187","messageId":"188","endLine":2,"endColumn":33},{"ruleId":"185","severity":1,"message":"190","line":32,"column":10,"nodeType":"187","messageId":"188","endLine":32,"endColumn":21},{"ruleId":"185","severity":1,"message":"191","line":32,"column":23,"nodeType":"187","messageId":"188","endLine":32,"endColumn":37},{"ruleId":"185","severity":1,"message":"192","line":41,"column":5,"nodeType":"187","messageId":"188","endLine":41,"endColumn":13},{"ruleId":"185","severity":1,"message":"193","line":42,"column":5,"nodeType":"187","messageId":"188","endLine":42,"endColumn":21},{"ruleId":"185","severity":1,"message":"194","line":43,"column":5,"nodeType":"187","messageId":"188","endLine":43,"endColumn":21},{"ruleId":"185","severity":1,"message":"195","line":44,"column":5,"nodeType":"187","messageId":"188","endLine":44,"endColumn":15},{"ruleId":"185","severity":1,"message":"196","line":45,"column":5,"nodeType":"187","messageId":"188","endLine":45,"endColumn":15},{"ruleId":"185","severity":1,"message":"197","line":46,"column":5,"nodeType":"187","messageId":"188","endLine":46,"endColumn":15},{"ruleId":"185","severity":1,"message":"192","line":19,"column":5,"nodeType":"187","messageId":"188","endLine":19,"endColumn":13},{"ruleId":"185","severity":1,"message":"194","line":21,"column":5,"nodeType":"187","messageId":"188","endLine":21,"endColumn":21},{"ruleId":"185","severity":1,"message":"195","line":22,"column":5,"nodeType":"187","messageId":"188","endLine":22,"endColumn":15},{"ruleId":"185","severity":1,"message":"196","line":23,"column":5,"nodeType":"187","messageId":"188","endLine":23,"endColumn":15},{"ruleId":"185","severity":1,"message":"197","line":24,"column":5,"nodeType":"187","messageId":"188","endLine":24,"endColumn":15},{"ruleId":"198","severity":1,"message":"199","line":33,"column":6,"nodeType":"200","endLine":33,"endColumn":8,"suggestions":"201"},{"ruleId":"185","severity":1,"message":"186","line":1,"column":19,"nodeType":"187","messageId":"188","endLine":1,"endColumn":28},{"ruleId":"185","severity":1,"message":"192","line":19,"column":5,"nodeType":"187","messageId":"188","endLine":19,"endColumn":13},{"ruleId":"185","severity":1,"message":"193","line":20,"column":5,"nodeType":"187","messageId":"188","endLine":20,"endColumn":21},{"ruleId":"185","severity":1,"message":"194","line":21,"column":5,"nodeType":"187","messageId":"188","endLine":21,"endColumn":21},{"ruleId":"185","severity":1,"message":"195","line":22,"column":5,"nodeType":"187","messageId":"188","endLine":22,"endColumn":15},{"ruleId":"185","severity":1,"message":"196","line":23,"column":5,"nodeType":"187","messageId":"188","endLine":23,"endColumn":15},{"ruleId":"185","severity":1,"message":"197","line":24,"column":5,"nodeType":"187","messageId":"188","endLine":24,"endColumn":15},{"ruleId":"202","severity":1,"message":"203","line":29,"column":9,"nodeType":"204","endLine":29,"endColumn":46},{"ruleId":"202","severity":1,"message":"203","line":34,"column":101,"nodeType":"204","endLine":34,"endColumn":144},{"ruleId":"202","severity":1,"message":"203","line":35,"column":99,"nodeType":"204","endLine":35,"endColumn":143},{"ruleId":"205","severity":1,"message":"206","line":37,"column":76,"nodeType":"204","endLine":37,"endColumn":153},{"ruleId":"202","severity":1,"message":"207","line":37,"column":76,"nodeType":"204","endLine":37,"endColumn":153},{"ruleId":"185","severity":1,"message":"193","line":20,"column":5,"nodeType":"187","messageId":"188","endLine":20,"endColumn":21},{"ruleId":"185","severity":1,"message":"194","line":21,"column":5,"nodeType":"187","messageId":"188","endLine":21,"endColumn":21},{"ruleId":"185","severity":1,"message":"195","line":22,"column":5,"nodeType":"187","messageId":"188","endLine":22,"endColumn":15},{"ruleId":"185","severity":1,"message":"196","line":23,"column":5,"nodeType":"187","messageId":"188","endLine":23,"endColumn":15},{"ruleId":"185","severity":1,"message":"197","line":24,"column":5,"nodeType":"187","messageId":"188","endLine":24,"endColumn":15},{"ruleId":"198","severity":1,"message":"208","line":32,"column":6,"nodeType":"200","endLine":32,"endColumn":8,"suggestions":"209"},{"ruleId":"185","severity":1,"message":"186","line":1,"column":19,"nodeType":"187","messageId":"188","endLine":1,"endColumn":28},{"ruleId":"185","severity":1,"message":"192","line":26,"column":5,"nodeType":"187","messageId":"188","endLine":26,"endColumn":13},{"ruleId":"185","severity":1,"message":"193","line":27,"column":5,"nodeType":"187","messageId":"188","endLine":27,"endColumn":21},{"ruleId":"185","severity":1,"message":"194","line":28,"column":5,"nodeType":"187","messageId":"188","endLine":28,"endColumn":21},{"ruleId":"185","severity":1,"message":"196","line":30,"column":5,"nodeType":"187","messageId":"188","endLine":30,"endColumn":15},{"ruleId":"185","severity":1,"message":"197","line":31,"column":5,"nodeType":"187","messageId":"188","endLine":31,"endColumn":15},{"ruleId":"185","severity":1,"message":"210","line":1,"column":9,"nodeType":"187","messageId":"188","endLine":1,"endColumn":17},{"ruleId":"211","severity":1,"message":"212","line":12,"column":7,"nodeType":"204","endLine":12,"endColumn":75},{"ruleId":"185","severity":1,"message":"213","line":9,"column":83,"nodeType":"187","messageId":"188","endLine":9,"endColumn":99},{"ruleId":"214","severity":1,"message":"215","line":43,"column":28,"nodeType":"216","messageId":"217","endLine":43,"endColumn":30},{"ruleId":"198","severity":1,"message":"218","line":46,"column":6,"nodeType":"200","endLine":46,"endColumn":14,"suggestions":"219"},{"ruleId":"214","severity":1,"message":"215","line":50,"column":16,"nodeType":"216","messageId":"217","endLine":50,"endColumn":18},{"ruleId":"198","severity":1,"message":"220","line":60,"column":6,"nodeType":"200","endLine":60,"endColumn":21,"suggestions":"221"},{"ruleId":"214","severity":1,"message":"215","line":89,"column":21,"nodeType":"216","messageId":"217","endLine":89,"endColumn":23},{"ruleId":"214","severity":1,"message":"215","line":157,"column":103,"nodeType":"216","messageId":"217","endLine":157,"endColumn":105},"no-native-reassign",["222"],"no-negated-in-lhs",["223"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'Redirect' is defined but never used.","'currentTask' is assigned a value but never used.","'setCurrentTask' is assigned a value but never used.","'tasksGet' is assigned a value but never used.","'tasksGetByClient' is assigned a value but never used.","'tasksGetByWorker' is assigned a value but never used.","'taskCreate' is assigned a value but never used.","'taskUpdate' is assigned a value but never used.","'taskDelete' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'props.token', 'props.user.username', and 'tasksGetByClient'. Either include them or remove the dependency array.","ArrayExpression",["224"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","jsx-a11y/anchor-has-content","Anchors must have content and the content must be accessible by a screen reader.","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","React Hook useEffect has a missing dependency: 'tasksGet'. Either include it or remove the dependency array.",["225"],"'useState' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'taskFormTypeList' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useEffect has a missing dependency: 'feedbackValue'. Either include it or remove the dependency array.",["226"],"React Hook useEffect has missing dependencies: 'quote', 'quoteSearch', and 'rating'. Either include them or remove the dependency array.",["227"],"no-global-assign","no-unsafe-negation",{"desc":"228","fix":"229"},{"desc":"230","fix":"231"},{"desc":"232","fix":"233"},{"desc":"234","fix":"235"},"Update the dependencies array to be: [props.token, props.user.username, tasksGetByClient]",{"range":"236","text":"237"},"Update the dependencies array to be: [tasksGet]",{"range":"238","text":"239"},"Update the dependencies array to be: [feedbackValue, rating]",{"range":"240","text":"241"},"Update the dependencies array to be: [feedbackValue, quote, quoteSearch, rating]",{"range":"242","text":"243"},[974,976],"[props.token, props.user.username, tasksGetByClient]",[863,865],"[tasksGet]",[1748,1756],"[feedbackValue, rating]",[2039,2054],"[feedbackValue, quote, quoteSearch, rating]"]