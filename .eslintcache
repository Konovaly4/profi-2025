[{"C:\\Users\\User\\Desktop\\profi-2025\\src\\index.js":"1","C:\\Users\\User\\Desktop\\profi-2025\\src\\reportWebVitals.js":"2","C:\\Users\\User\\Desktop\\profi-2025\\src\\components\\App.js":"3","C:\\Users\\User\\Desktop\\profi-2025\\src\\components\\Main\\Main.jsx":"4","C:\\Users\\User\\Desktop\\profi-2025\\src\\components\\Footer\\Footer.jsx":"5","C:\\Users\\User\\Desktop\\profi-2025\\src\\components\\Header\\Header.jsx":"6","C:\\Users\\User\\Desktop\\profi-2025\\src\\components\\About\\About.jsx":"7","C:\\Users\\User\\Desktop\\profi-2025\\src\\components\\Poem\\Poem.jsx":"8","C:\\Users\\User\\Desktop\\profi-2025\\src\\components\\Button\\Button.jsx":"9","C:\\Users\\User\\Desktop\\profi-2025\\src\\components\\TaskForm\\TaskForm.jsx":"10","C:\\Users\\User\\Desktop\\profi-2025\\src\\constants\\formData.js":"11","C:\\Users\\User\\Desktop\\profi-2025\\src\\components\\TaskForm\\TaskFormSelect\\TaskFormSelect.jsx":"12","C:\\Users\\User\\Desktop\\profi-2025\\src\\hooks\\useTaskFetch.js":"13","C:\\Users\\User\\Desktop\\profi-2025\\src\\constants\\mainButtonsData.js":"14","C:\\Users\\User\\Desktop\\profi-2025\\src\\components\\Reviews\\Reviews.jsx":"15","C:\\Users\\User\\Desktop\\profi-2025\\src\\components\\Mytasks\\Mytasks.jsx":"16","C:\\Users\\User\\Desktop\\profi-2025\\src\\components\\TaskCard\\TaskCard.jsx":"17","C:\\Users\\User\\Desktop\\profi-2025\\src\\components\\UserPopup\\UserPopup.jsx":"18","C:\\Users\\User\\Desktop\\profi-2025\\src\\components\\CloseButton\\CloseButton.jsx":"19","C:\\Users\\User\\Desktop\\profi-2025\\src\\components\\AlertPopup\\AlertPopup.jsx":"20","C:\\Users\\User\\Desktop\\profi-2025\\src\\components\\Mytask\\Mytask.jsx":"21","C:\\Users\\User\\Desktop\\profi-2025\\src\\constants\\userPopupData.js":"22","C:\\Users\\User\\Desktop\\profi-2025\\src\\constants\\urlData.js":"23","C:\\Users\\User\\Desktop\\profi-2025\\src\\hooks\\useUserFetch.js":"24","C:\\Users\\User\\Desktop\\profi-2025\\src\\constants\\tasksData.js":"25","C:\\Users\\User\\Desktop\\profi-2025\\src\\components\\ProtectedRoute\\ProtectedRoute.jsx":"26"},{"size":624,"mtime":1608715720304,"results":"27","hashOfConfig":"28"},{"size":362,"mtime":499162500000,"results":"29","hashOfConfig":"28"},{"size":2563,"mtime":1608723527657,"results":"30","hashOfConfig":"28"},{"size":1330,"mtime":1608557902870,"results":"31","hashOfConfig":"28"},{"size":420,"mtime":1608531366945,"results":"32","hashOfConfig":"28"},{"size":1323,"mtime":1608547944416,"results":"33","hashOfConfig":"28"},{"size":449,"mtime":1608531366939,"results":"34","hashOfConfig":"28"},{"size":303,"mtime":1608531366952,"results":"35","hashOfConfig":"28"},{"size":218,"mtime":1608303066883,"results":"36","hashOfConfig":"28"},{"size":5307,"mtime":1608557005323,"results":"37","hashOfConfig":"28"},{"size":3192,"mtime":1608558333236,"results":"38","hashOfConfig":"28"},{"size":468,"mtime":1608297710955,"results":"39","hashOfConfig":"28"},{"size":3911,"mtime":1608555217481,"results":"40","hashOfConfig":"28"},{"size":117,"mtime":1608302437782,"results":"41","hashOfConfig":"28"},{"size":746,"mtime":1608531366953,"results":"42","hashOfConfig":"28"},{"size":848,"mtime":1608560686378,"results":"43","hashOfConfig":"28"},{"size":2767,"mtime":1608531366955,"results":"44","hashOfConfig":"28"},{"size":3932,"mtime":1608549730190,"results":"45","hashOfConfig":"28"},{"size":179,"mtime":1608531366944,"results":"46","hashOfConfig":"28"},{"size":694,"mtime":1608531366940,"results":"47","hashOfConfig":"28"},{"size":658,"mtime":1608559240429,"results":"48","hashOfConfig":"28"},{"size":393,"mtime":1608531366959,"results":"49","hashOfConfig":"28"},{"size":78,"mtime":1608537790879,"results":"50","hashOfConfig":"28"},{"size":3131,"mtime":1608545792756,"results":"51","hashOfConfig":"28"},{"size":281,"mtime":1608559006927,"results":"52","hashOfConfig":"28"},{"size":296,"mtime":1608723480119,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"jue8nv",{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"58"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"58"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"58"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"58"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\User\\Desktop\\profi-2025\\src\\index.js",[],"C:\\Users\\User\\Desktop\\profi-2025\\src\\reportWebVitals.js",[],["111","112"],"C:\\Users\\User\\Desktop\\profi-2025\\src\\components\\App.js",["113","114","115","116"],"C:\\Users\\User\\Desktop\\profi-2025\\src\\components\\Main\\Main.jsx",["117","118","119","120","121"],"import React from 'react';\r\nimport useTaskFetch from '../../hooks/useTaskFetch';\r\nimport Button from '../Button/Button';\r\nimport {mainButtonsData} from '../../constants/mainButtonsData';\r\nimport {urlData} from '../../constants/urlData';\r\nimport './Main.css';\r\n\r\nconst Buttons = (props) => {\r\n  const userName = props.user.userName;\r\n  const userPhone = props.user.userPhone;\r\n  const userEmail = props.user.userEmail; \r\n  const userToken = props.user.userToken;\r\n\r\n  const userData = {userName, userPhone, userEmail, userToken}; \r\n\r\n  const {\r\n    tasksGet,\r\n    tasksGetByClient,\r\n    tasksGetByWorker,\r\n    taskCreate,\r\n    taskUpdate,\r\n    taskDelete\r\n  } = useTaskFetch(urlData.local, userData);\r\n\r\n  const getClientTasks = () => {\r\n    tasksGetByClient()\r\n    .then((res) => {\r\n      props.setTasks(res);\r\n    })\r\n    .catch(err => {\r\n      err.json()\r\n      .then(err => console.log(err));\r\n    })\r\n  }\r\n\r\n\r\n\r\n  return (\r\n    <section className='main'>\r\n        <h2 className='main__title'>Найди Мастера - 2025</h2>\r\n        <div className='main__buttons-container'>\r\n          <Button placeholder={mainButtonsData.showTasks} onPress={getClientTasks}/>\r\n          <Button placeholder={mainButtonsData.createTask} onPress={props.showTaskForm}/>\r\n        </div>\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default Buttons;\r\n","C:\\Users\\User\\Desktop\\profi-2025\\src\\components\\Footer\\Footer.jsx",[],"C:\\Users\\User\\Desktop\\profi-2025\\src\\components\\Header\\Header.jsx",["122","123","124"],"import {useState} from 'react';\r\nimport UserPopup from '../UserPopup/UserPopup';\r\nimport './Header.css';\r\n\r\nconst Header = (props) => {\r\n  // collecting states\r\n  const [userState, setUserState] = useState('');\r\n\r\n  // set reg state\r\n  const setRegState = (e) => {\r\n    e.preventDefault();\r\n    setUserState('registration');\r\n  }\r\n\r\n  // set reg state\r\n  const setLoginState = () => {\r\n    setUserState('login');\r\n  }\r\n\r\n  // clear reg state\r\n  const clearRegState = () => { \r\n    setUserState('');\r\n  }\r\n\r\n  return (\r\n    <header className='header'>\r\n      <div className='header__container'>\r\n        <a className='header__link' href='#'>\r\n        <img className='header__img' src='#' alt='logo' />\r\n        </a>\r\n        <ul className='user-navigation'>\r\n          <li className='user-navigation__item' onClick={setLoginState}><a class='login-link' href='#'>Вход</a></li>\r\n          <li className='user-navigation__item' onClick={setRegState}><a class='signin-link' href='#'>Регистрация</a></li>\r\n        </ul>\r\n        {props.user.userToken && <p>Привет, {props.user.userName}</p>}\r\n        <UserPopup state={userState} setUserState={setUserState} setLoginState={setLoginState} clearRegState={clearRegState} setUser={props.setUser}/>\r\n      </div>\r\n    </header>\r\n  )\r\n}\r\n\r\nexport default Header;\r\n","C:\\Users\\User\\Desktop\\profi-2025\\src\\components\\About\\About.jsx",[],"C:\\Users\\User\\Desktop\\profi-2025\\src\\components\\Poem\\Poem.jsx",[],"C:\\Users\\User\\Desktop\\profi-2025\\src\\components\\Button\\Button.jsx",[],"C:\\Users\\User\\Desktop\\profi-2025\\src\\components\\TaskForm\\TaskForm.jsx",["125","126","127","128","129","130"],"import {useState, useEffect} from 'react';\r\nimport cn from 'classnames';\r\nimport TaskFormSelect from './TaskFormSelect/TaskFormSelect';\r\nimport CloseButton from '../CloseButton/CloseButton';\r\nimport AlertPopup from '../AlertPopup/AlertPopup';\r\nimport useTaskFetch from '../../hooks/useTaskFetch';\r\nimport {taskFormData, alertPopupData, taskFormPlaceholders,  taskFormLabels, taskFormTypeList, taskFormSubtypeList, buttonData} from '../../constants/formData';\r\nimport {urlData} from '../../constants/urlData';\r\n\r\nimport './TaskForm.css';\r\n\r\nconst TaskForm = (props) => {\r\n  // select states\r\n  const [alertVisibility, SetAlertVisibility] = useState(false);\r\n  const [workType, setWorkType] = useState(0);\r\n  const [workSubtype, setWorkSubtype] = useState(0);\r\n  const [workDescription, setWorkDescription] = useState(0);\r\n  // collect user data\r\n  const userName = props.user.userName;\r\n  const userPhone = props.user.userPhone;\r\n  const userEmail = props.user.userEmail; \r\n  const userToken = props.user.userToken;\r\n  // create common data\r\n  const workData = {workType, workSubtype, workDescription, userName, userPhone, userEmail, userToken}\r\n\r\n  // use fetch hooks\r\n  const {\r\n    tasksGet,\r\n    tasksGetByClient,\r\n    tasksGetByWorker,\r\n    taskCreate,\r\n    taskUpdate,\r\n    taskDelete\r\n  } = useTaskFetch(urlData.local, workData)\r\n\r\n\r\n  // set work type\r\n  const setType = (e) => {\r\n    // console.log('e.target - ' + e.target.value)\r\n    setWorkType(e.target.value);\r\n    setWorkSubtype(0);\r\n  }\r\n\r\n  // set work subtype\r\n  const setSubtype = (e) => {\r\n    // console.log('e.subtarget - ' + e.target.value)\r\n    setWorkSubtype(e.target.value);\r\n  }\r\n\r\n  // set work description\r\n  const setDescription = (e) => {\r\n    setWorkDescription(e.target.value);\r\n  }\r\n\r\n  // open alert popup\r\n  const alertOpen = () => {\r\n    SetAlertVisibility(true);\r\n  }\r\n  \r\n  // close alert popup with yes option\r\n  const alertCloseYesOption = () => {\r\n    SetAlertVisibility(false);\r\n      props.formClose();\r\n  }\r\n\r\n  // close alert popup with yes option\r\n  const alertCloseNoOption = () => {\r\n    SetAlertVisibility(false);\r\n  }\r\n\r\n  // closing by clicking on wrapper\r\n  const closeByWrapper = (e) => {\r\n    !e.target.closest('.task-form') && alertOpen();\r\n  }\r\n\r\n    // create new task\r\n    const createTask = () => {\r\n      taskCreate()\r\n      .then(res => {\r\n        console.log(res);\r\n      })\r\n      .catch(err => {\r\n        err.json()\r\n        .then(err => console.log(err));\r\n      })\r\n    }\r\n\r\n    // click to send\r\n    const formSubmit = (e) => {\r\n      e.preventDefault();\r\n      createTask();\r\n      props.formClose();\r\n    }\r\n\r\n\r\n  // console.log(selectedWorkType);\r\n  // console.log(selectedWorkSubtype);\r\n  // console.log('break');\r\n\r\n\r\n  return (\r\n    <div className={cn('task-form-wrapper', {'task-form-wrapper_visible': props.visibility})} onClick={closeByWrapper}>\r\n      <section className='task-form'>\r\n        <h2 className='task-form__title'>{taskFormData.title}</h2>\r\n        <ul className='task-form__list'>\r\n          <li className='task-form__list-item'>\r\n            <p className='task-form__field-note'>{taskFormData.workType}</p>\r\n            <TaskFormSelect name='work-type' label={taskFormLabels.workType} optionList={taskFormTypeList} selectOption={setType} />\r\n          </li>\r\n          <li className='task-form__list-item'>\r\n            <p className='task-form__field-note'>{taskFormData.workSubtype}</p>\r\n            <TaskFormSelect name='work-subtype' label={taskFormLabels.workSubtype} optionList={taskFormSubtypeList[workType]} selectOption={setSubtype} />\r\n          </li>\r\n          <li className='task-form__list-item'>\r\n            <p className='task-form__field-note'>{taskFormData.workDescription}</p>\r\n            <textarea name='description' rows='4' className='task-form__field-item' placeholder={taskFormPlaceholders.workDescription} onChange={setDescription}></textarea>\r\n          </li>\r\n          {/* <li className='task-form__list-item'>\r\n            <p className='task-form__field-note'>{taskFormData.name}</p>\r\n            <input type='text' required minLength='2' className='task-form__field-item' placeholder={taskFormPlaceholders.clientName}></input>\r\n          </li>\r\n          <li className='task-form__list-item'>\r\n            <p className='task-form__field-note'>{taskFormData.phone}</p>\r\n            <input type='text' required minLength='2' className='task-form__field-item' placeholder={taskFormPlaceholders.clientPhone}></input>\r\n          </li>\r\n          <li className='task-form__list-item'>\r\n            <p className='task-form__field-note'>{taskFormData.email}</p>\r\n            <input type='text' required minLength='2' className='task-form__field-item' placeholder={taskFormPlaceholders.clientEmail}></input>\r\n          </li> */}\r\n        </ul>\r\n        <p className='task-form__field-note'>Ваши имя, телефон и email будут указаны в заявке</p>\r\n        <button className='task-form__submit-button' onClick={formSubmit}>{buttonData.submit}</button>\r\n        <CloseButton onPress={alertOpen} />\r\n        <AlertPopup visibility={alertVisibility} title={alertPopupData.dataFormClose} onYesClick={alertCloseYesOption} onNoClick={alertCloseNoOption} />\r\n      </section>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default TaskForm;","C:\\Users\\User\\Desktop\\profi-2025\\src\\constants\\formData.js",[],"C:\\Users\\User\\Desktop\\profi-2025\\src\\components\\TaskForm\\TaskFormSelect\\TaskFormSelect.jsx",[],"C:\\Users\\User\\Desktop\\profi-2025\\src\\hooks\\useTaskFetch.js",[],"C:\\Users\\User\\Desktop\\profi-2025\\src\\constants\\mainButtonsData.js",[],"C:\\Users\\User\\Desktop\\profi-2025\\src\\components\\Reviews\\Reviews.jsx",[],"C:\\Users\\User\\Desktop\\profi-2025\\src\\components\\Mytasks\\Mytasks.jsx",[],"C:\\Users\\User\\Desktop\\profi-2025\\src\\components\\TaskCard\\TaskCard.jsx",[],"C:\\Users\\User\\Desktop\\profi-2025\\src\\components\\UserPopup\\UserPopup.jsx",["131"],"import {useState, useEffect} from 'react';\r\nimport cn from 'classnames';\r\nimport useUserFetch from '../../hooks/useUserFetch';\r\nimport CloseButton from '../CloseButton/CloseButton';\r\nimport {regPopupData} from '../../constants/userPopupData';\r\nimport {urlData} from '../../constants/urlData';\r\nimport './UserPopup.css';\r\n\r\nconst UserPopup = (props) => {\r\n  const [visibility, setVisibility] = useState(false);\r\n  const [userId, setUserId] = useState(undefined);\r\n  const [userName,  setUserName] = useState(undefined);\r\n  const [userPhone,  setUserPhone] = useState(undefined);\r\n  const [userEmail,  setUserEmail] = useState(undefined);\r\n  const [userPassword,  setUserPassword] = useState(undefined);\r\n\r\n  const userData = {userId, userName, userPhone, userEmail, userPassword};\r\n  // console.log(userData);\r\n\r\n  const {\r\n    userAuth, \r\n    userLogin,\r\n  } = useUserFetch(urlData.local, userData);\r\n\r\n  // popup open\r\n  useEffect(() => {\r\n    props.state !== '' ? setVisibility(true) : setVisibility(false);\r\n  }, [props.state])\r\n\r\n  // popup close by click on wrapper\r\n  const closeByWrapper = (e) => {\r\n    !e.target.closest('.user-popup') && props.clearRegState();\r\n  }\r\n\r\n  // setting user name\r\n  const setName = (e) => {\r\n    setUserName(e.target.value);\r\n    // console.log(e.target.value);\r\n  }\r\n\r\n  // setting user phone\r\n  const setPhone = (e) => {\r\n    setUserPhone(e.target.value);\r\n    // console.log(e.target.value);\r\n  }\r\n\r\n  // setting user email\r\n  const setEmail = (e) => {\r\n    setUserEmail(e.target.value);\r\n    // console.log(e.target.value);\r\n  }\r\n\r\n  // setting user password\r\n  const setPassword = (e) => {\r\n    setUserPassword(e.target.value);\r\n    // console.log(e.target.value);\r\n  }\r\n\r\n  // create new user\r\n  const createUser = () => {\r\n    userAuth()\r\n    .then(res => {\r\n      // console.log(res);\r\n      props.setUser(res);\r\n    })\r\n    .catch(err => {\r\n      err.json()\r\n      .then(err => console.log(err));\r\n    })\r\n\r\n  }\r\n\r\n  // create new user\r\n  const loginUser = () => {\r\n    userLogin()\r\n    .then(res => {\r\n      // console.log(res);\r\n      props.setUser(res);\r\n    })\r\n    .catch(err => {\r\n      err.json()\r\n      .then(err => console.log(err));\r\n    })\r\n\r\n  }\r\n\r\n    // start registration\r\n    const registrate = (e) => {\r\n      e.preventDefault();\r\n      createUser(); \r\n      props.clearRegState();\r\n    }\r\n  \r\n    // start login\r\n    const login = (e) => {\r\n      e.preventDefault();\r\n      loginUser(); \r\n      props.clearRegState();\r\n    }\r\n\r\n\r\n\r\n  return (\r\n    <div className={cn('user-popup__wrapper', {'user-popup__wrapper_visible': visibility})} onClick={closeByWrapper }>\r\n      <form className='user-popup'>\r\n        <h2 className='user-popup__title'>{props.state === 'registration' ? regPopupData.regTitle :regPopupData.loginTitle}</h2>\r\n        {props.state === 'registration' && <input className='user-popup__input' type='text' name='name' placeholder={regPopupData.name} onChange={setName}></input>}\r\n        {props.state === 'registration' && <input className='user-popup__input' type='text' name='phone' placeholder={regPopupData.phone} onChange={setPhone}></input>}\r\n        <input className='user-popup__input' type='email' name='email' placeholder={regPopupData.email} onChange={setEmail}></input>\r\n        <input className='user-popup__input' type='text' name='password' placeholder={regPopupData.password} onChange={setPassword}></input>\r\n        <div className='user-popup__button-wrapper'>\r\n          {props.state === 'registration' && <button className='user-popup__reg-button' onClick={registrate}>{regPopupData.regButton}</button>}\r\n          <button className='user-popup__reg-button' onClick = {\r\n            props.state === 'registration' ? props.setLoginState : login\r\n          }>{regPopupData.loginButton}</button>\r\n        </div>\r\n        <CloseButton onPress={props.clearRegState} />\r\n      </form>\r\n    </div>\r\n\r\n  )\r\n}\r\n\r\nexport default UserPopup;\r\n","C:\\Users\\User\\Desktop\\profi-2025\\src\\components\\CloseButton\\CloseButton.jsx",[],"C:\\Users\\User\\Desktop\\profi-2025\\src\\components\\AlertPopup\\AlertPopup.jsx",[],"C:\\Users\\User\\Desktop\\profi-2025\\src\\components\\Mytask\\Mytask.jsx",[],"C:\\Users\\User\\Desktop\\profi-2025\\src\\constants\\userPopupData.js",[],"C:\\Users\\User\\Desktop\\profi-2025\\src\\constants\\urlData.js",[],"C:\\Users\\User\\Desktop\\profi-2025\\src\\hooks\\useUserFetch.js",[],"C:\\Users\\User\\Desktop\\profi-2025\\src\\constants\\tasksData.js",[],"C:\\Users\\User\\Desktop\\profi-2025\\src\\components\\ProtectedRoute\\ProtectedRoute.jsx",[],{"ruleId":"132","replacedBy":"133"},{"ruleId":"134","replacedBy":"135"},{"ruleId":"136","severity":1,"message":"137","line":1,"column":19,"nodeType":"138","messageId":"139","endLine":1,"endColumn":28},{"ruleId":"136","severity":1,"message":"140","line":2,"column":25,"nodeType":"138","messageId":"139","endLine":2,"endColumn":33},{"ruleId":"136","severity":1,"message":"141","line":26,"column":20,"nodeType":"138","messageId":"139","endLine":26,"endColumn":31},{"ruleId":"136","severity":1,"message":"142","line":28,"column":10,"nodeType":"138","messageId":"139","endLine":28,"endColumn":21},{"ruleId":"136","severity":1,"message":"143","line":17,"column":5,"nodeType":"138","messageId":"139","endLine":17,"endColumn":13},{"ruleId":"136","severity":1,"message":"144","line":19,"column":5,"nodeType":"138","messageId":"139","endLine":19,"endColumn":21},{"ruleId":"136","severity":1,"message":"145","line":20,"column":5,"nodeType":"138","messageId":"139","endLine":20,"endColumn":15},{"ruleId":"136","severity":1,"message":"146","line":21,"column":5,"nodeType":"138","messageId":"139","endLine":21,"endColumn":15},{"ruleId":"136","severity":1,"message":"147","line":22,"column":5,"nodeType":"138","messageId":"139","endLine":22,"endColumn":15},{"ruleId":"148","severity":1,"message":"149","line":28,"column":9,"nodeType":"150","endLine":28,"endColumn":46},{"ruleId":"148","severity":1,"message":"149","line":32,"column":73,"nodeType":"150","endLine":32,"endColumn":104},{"ruleId":"148","severity":1,"message":"149","line":33,"column":71,"nodeType":"150","endLine":33,"endColumn":103},{"ruleId":"136","severity":1,"message":"137","line":1,"column":19,"nodeType":"138","messageId":"139","endLine":1,"endColumn":28},{"ruleId":"136","severity":1,"message":"143","line":28,"column":5,"nodeType":"138","messageId":"139","endLine":28,"endColumn":13},{"ruleId":"136","severity":1,"message":"151","line":29,"column":5,"nodeType":"138","messageId":"139","endLine":29,"endColumn":21},{"ruleId":"136","severity":1,"message":"144","line":30,"column":5,"nodeType":"138","messageId":"139","endLine":30,"endColumn":21},{"ruleId":"136","severity":1,"message":"146","line":32,"column":5,"nodeType":"138","messageId":"139","endLine":32,"endColumn":15},{"ruleId":"136","severity":1,"message":"147","line":33,"column":5,"nodeType":"138","messageId":"139","endLine":33,"endColumn":15},{"ruleId":"136","severity":1,"message":"152","line":11,"column":18,"nodeType":"138","messageId":"139","endLine":11,"endColumn":27},"no-native-reassign",["153"],"no-negated-in-lhs",["154"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'Redirect' is defined but never used.","'setLoggedIn' is assigned a value but never used.","'currentTask' is assigned a value but never used.","'tasksGet' is assigned a value but never used.","'tasksGetByWorker' is assigned a value but never used.","'taskCreate' is assigned a value but never used.","'taskUpdate' is assigned a value but never used.","'taskDelete' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'tasksGetByClient' is assigned a value but never used.","'setUserId' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]