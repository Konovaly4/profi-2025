[{"C:\\Users\\Макс\\Desktop\\profi-2025\\src\\index.js":"1","C:\\Users\\Макс\\Desktop\\profi-2025\\src\\reportWebVitals.js":"2","C:\\Users\\Макс\\Desktop\\profi-2025\\src\\components\\App.js":"3","C:\\Users\\Макс\\Desktop\\profi-2025\\src\\components\\Header\\Header.jsx":"4","C:\\Users\\Макс\\Desktop\\profi-2025\\src\\components\\About\\About.jsx":"5","C:\\Users\\Макс\\Desktop\\profi-2025\\src\\components\\Poem\\Poem.jsx":"6","C:\\Users\\Макс\\Desktop\\profi-2025\\src\\components\\Footer\\Footer.jsx":"7","C:\\Users\\Макс\\Desktop\\profi-2025\\src\\components\\Main\\Main.jsx":"8","C:\\Users\\Макс\\Desktop\\profi-2025\\src\\components\\TaskForm\\TaskForm.jsx":"9","C:\\Users\\Макс\\Desktop\\profi-2025\\src\\constants\\mainButtonsData.js":"10","C:\\Users\\Макс\\Desktop\\profi-2025\\src\\constants\\formData.js":"11","C:\\Users\\Макс\\Desktop\\profi-2025\\src\\hooks\\useTaskFetch.js":"12","C:\\Users\\Макс\\Desktop\\profi-2025\\src\\components\\Button\\Button.jsx":"13","C:\\Users\\Макс\\Desktop\\profi-2025\\src\\components\\TaskForm\\TaskFormSelect\\TaskFormSelect.jsx":"14"},{"size":528,"mtime":1607963096798,"results":"15","hashOfConfig":"16"},{"size":375,"mtime":1607961310107,"results":"17","hashOfConfig":"16"},{"size":816,"mtime":1608314611722,"results":"18","hashOfConfig":"16"},{"size":352,"mtime":1608223684383,"results":"19","hashOfConfig":"16"},{"size":313,"mtime":1608318185630,"results":"20","hashOfConfig":"16"},{"size":231,"mtime":1608318848241,"results":"21","hashOfConfig":"16"},{"size":225,"mtime":1608319020648,"results":"22","hashOfConfig":"16"},{"size":565,"mtime":1608316391137,"results":"23","hashOfConfig":"16"},{"size":3781,"mtime":1608313621866,"results":"24","hashOfConfig":"16"},{"size":117,"mtime":1608313621870,"results":"25","hashOfConfig":"16"},{"size":2670,"mtime":1608313621869,"results":"26","hashOfConfig":"16"},{"size":3888,"mtime":1608313621871,"results":"27","hashOfConfig":"16"},{"size":218,"mtime":1608313621863,"results":"28","hashOfConfig":"16"},{"size":468,"mtime":1608313621868,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"m01eod",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"32"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"32"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"C:\\Users\\Макс\\Desktop\\profi-2025\\src\\index.js",[],["61","62"],"C:\\Users\\Макс\\Desktop\\profi-2025\\src\\reportWebVitals.js",[],"C:\\Users\\Макс\\Desktop\\profi-2025\\src\\components\\App.js",[],"C:\\Users\\Макс\\Desktop\\profi-2025\\src\\components\\Header\\Header.jsx",["63"],"import React from 'react';\r\nimport './Header.css';\r\n\r\nconst Header = () => {\r\n\r\n  return (\r\n    <header className='header'>\r\n      <div className='header__container'>\r\n        <a className='header__link' href='#'>\r\n        <img className='header__img' src='#' alt='logo' />\r\n        </a>\r\n      </div>\r\n    </header>\r\n  )\r\n}\r\n\r\nexport default Header;\r\n","C:\\Users\\Макс\\Desktop\\profi-2025\\src\\components\\About\\About.jsx",[],"C:\\Users\\Макс\\Desktop\\profi-2025\\src\\components\\Poem\\Poem.jsx",[],"C:\\Users\\Макс\\Desktop\\profi-2025\\src\\components\\Footer\\Footer.jsx",[],"C:\\Users\\Макс\\Desktop\\profi-2025\\src\\components\\Main\\Main.jsx",[],"C:\\Users\\Макс\\Desktop\\profi-2025\\src\\components\\TaskForm\\TaskForm.jsx",["64","65"],"import {useState, useEffect} from 'react';\r\nimport cn from 'classnames';\r\nimport TaskFormSelect from './TaskFormSelect/TaskFormSelect';\r\nimport useTaskFetch from '../../hooks/useTaskFetch';\r\nimport {taskFormData, taskFormPlaceholders, taskButtonPlaceholders, taskFormLabels, taskFormTypeList, taskFormSubtypeList} from '../../constants/formData';\r\n\r\nimport './TaskForm.css';\r\n\r\nconst TaskForm = (props) => {\r\n  // select states\r\n  const [workType, setWorkType] = useState(0);\r\n  const [workSubtype, setWorkSubtype] = useState(0);\r\n  const [workConfirmation, setWorkConfirmation] = useState(false);\r\n  const [workStatus, setWorkStatus] = useState(false);\r\n\r\n  // set work type\r\n  const setType = (e) => {\r\n    // console.log('e.target - ' + e.target.value)\r\n    setWorkType(e.target.value);\r\n    setWorkSubtype(0);\r\n  }\r\n\r\n  // set work subtype\r\n  const setSubtype = (e) => {\r\n    // console.log('e.subtarget - ' + e.target.value)\r\n    setWorkSubtype(e.target.value);\r\n  }\r\n\r\n  const setConfirmation = () => {\r\n    setWorkConfirmation(!workConfirmation);\r\n  }\r\n\r\n  const setStatus = () => {\r\n    setWorkStatus(!workStatus);\r\n  }\r\n\r\n  // collect data to fetch\r\n  let selectedWorkType = taskFormTypeList[workType];\r\n  let selectedWorkSubtype = taskFormSubtypeList[workType][workSubtype];\r\n\r\n\r\n  console.log(selectedWorkType);\r\n  console.log(selectedWorkSubtype);\r\n  console.log('break');\r\n\r\n\r\n  return (\r\n    <div className='task-form-wrapper'>\r\n      <section className='task-form'>\r\n        <h2 className='task-form__title'>{taskFormData.title}</h2>\r\n        <ul className='task-form__list'>\r\n          <li className='task-form__list-item'>\r\n            <p className='task-form__field-note'>{taskFormData.workType}</p>\r\n            <TaskFormSelect name='work-type' label={taskFormLabels.workType} optionList={taskFormTypeList} selectOption={setType} />\r\n          </li>\r\n          <li className='task-form__list-item'>\r\n            <p className='task-form__field-note'>{taskFormData.workSubtype}</p>\r\n            <TaskFormSelect name='work-subtype' label={taskFormLabels.workSubtype} optionList={taskFormSubtypeList[workType]} selectOption={setSubtype} />\r\n          </li>\r\n          <li className='task-form__list-item'>\r\n            <p className='task-form__field-note'>{taskFormData.name}</p>\r\n            <input type='text' required minLength='2' className='task-form__field-item' placeholder={taskFormPlaceholders.clientName}></input>\r\n          </li>\r\n          <li className='task-form__list-item'>\r\n            <p className='task-form__field-note'>{taskFormData.phone}</p>\r\n            <input type='text' required minLength='2' className='task-form__field-item' placeholder={taskFormPlaceholders.clientPhone}></input>\r\n          </li>\r\n          <li className='task-form__list-item'>\r\n            <p className='task-form__field-note'>{taskFormData.email}</p>\r\n            <input type='text' required minLength='2' className='task-form__field-item' placeholder={taskFormPlaceholders.clientEmail}></input>\r\n          </li>\r\n        </ul>\r\n        <button className={cn('task-form__confirm-button', {'task-form__confirm-button_confirmed': !!workConfirmation})} onClick={setConfirmation}>{\r\n          workConfirmation ? taskButtonPlaceholders.confirmed : taskButtonPlaceholders.notConfirmed\r\n        }</button>\r\n        <button className={cn('task-form__confirm-button', {'task-form__confirm-button_confirmed': !!workStatus})} onClick={setStatus}>{\r\n          workStatus ? taskButtonPlaceholders.finished : taskButtonPlaceholders.notFinished\r\n        }</button>\r\n        <textarea className='task-form__feedback' name='feedback' disabled={workStatus} rows='4' placeholder={taskFormPlaceholders.clientFeedback} />\r\n      </section>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default TaskForm;","C:\\Users\\Макс\\Desktop\\profi-2025\\src\\constants\\mainButtonsData.js",[],"C:\\Users\\Макс\\Desktop\\profi-2025\\src\\constants\\formData.js",[],"C:\\Users\\Макс\\Desktop\\profi-2025\\src\\hooks\\useTaskFetch.js",[],"C:\\Users\\Макс\\Desktop\\profi-2025\\src\\components\\Button\\Button.jsx",[],"C:\\Users\\Макс\\Desktop\\profi-2025\\src\\components\\TaskForm\\TaskFormSelect\\TaskFormSelect.jsx",[],{"ruleId":"66","replacedBy":"67"},{"ruleId":"68","replacedBy":"69"},{"ruleId":"70","severity":1,"message":"71","line":9,"column":9,"nodeType":"72","endLine":9,"endColumn":46},{"ruleId":"73","severity":1,"message":"74","line":1,"column":19,"nodeType":"75","messageId":"76","endLine":1,"endColumn":28},{"ruleId":"73","severity":1,"message":"77","line":4,"column":8,"nodeType":"75","messageId":"76","endLine":4,"endColumn":20},"no-native-reassign",["78"],"no-negated-in-lhs",["79"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'useTaskFetch' is defined but never used.","no-global-assign","no-unsafe-negation"]