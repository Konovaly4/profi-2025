{"version":3,"sources":["hooks/useUserFetch.js","components/CloseButton/CloseButton.jsx","constants/userPopupData.js","constants/urlData.js","components/UserPopup/UserPopup.jsx","images/logo.svg","components/Header/Header.jsx","hooks/useTaskFetch.js","components/Button/Button.jsx","constants/mainButtonsData.js","images/main__bgi.jpg","components/Main/Main.jsx","components/About/About.jsx","components/Poem/Poem.jsx","components/Reviews/Arrow/Arrow.jsx","images/review-avatar.jpg","components/Reviews/Review/Review.jsx","components/Reviews/Reviews.jsx","components/Footer/Footer.jsx","components/TaskForm/TaskFormSelect/TaskFormSelect.jsx","components/AlertPopup/AlertPopup.jsx","constants/formData.js","components/TaskForm/TaskForm.jsx","constants/tasksData.js","images/about_bgi.svg","components/Mytask/Mytask.jsx","hooks/useQuoteFetch.js","constants/ratingValue.js","images/popup-label.svg","components/TaskCard/TaskCard.jsx","components/Mytasks/Mytasks.jsx","components/ProtectedRoute/ProtectedRoute.jsx","components/App.js","reportWebVitals.js","index.js"],"names":["useUserFetch","url","data","loader","document","querySelector","userAuth","classList","add","fetch","redirect","method","headers","body","JSON","stringify","username","email","password","userphone","then","res","remove","ok","json","Promise","reject","userLogin","identifier","usersGet","userGet","userId","userUpdate","token","permission","userDelete","CloseButton","props","className","onClick","onPress","regPopupData","urlData","UserPopup","useState","visibility","setVisibility","undefined","setUserName","setUserPhone","setUserEmail","setUserPassword","useEffect","state","cn","e","target","closest","clearRegState","type","name","placeholder","onChange","value","pattern","preventDefault","setUser","catch","err","console","log","setLoginState","Header","userState","setUserState","href","src","Header__img","alt","loggedIn","user","logout","aria-label","userToken","userName","useTaskFetch","workData","userData","workerData","tasksGet","tasksGetByClient","tasksGetByWorker","worker_name","taskCreate","subtype","description","aссepted","completed","rating","feedback","client_name","client_phone","client_email","taskUpdate","id","accepted","taskDelete","Button","mainButtonsData","Buttons","userPhone","userEmail","pageMode","setPageMode","Main__img","to","showTaskForm","About","Poem","Arrow","direction","onArrowClick","Review","avatarPath","ali","Reviews","dataList","setDataList","dataSearcnValue","setDataSearchValue","length","slice","map","i","num","Footer","TaskFormSelect","label","optionList","selectOption","item","AlertPopup","title","onYesClick","onNoClick","taskFormData","taskFormPlaceholders","taskButtonPlaceholders","taskFormLabels","alertPopupData","taskFormTypeList","taskFormSubtypeList","buttonData","TaskForm","alertVisibility","SetAlertVisibility","setWorkType","setWorkSubtype","setWorkDescription","history","useHistory","alertOpen","rows","replace","formClose","tasksData","taskStatus","Mytask","status","task","taskSubtype","taskCreatedTime","created_at","number","onTaskShow","bgImg","useQuoteFetch","keyword","quoteSearch","fields","text","Math","round","random","ratingValue","TaskCard","workConfirmation","setWorkConfirmation","feedbackValue","setFeedbackValue","setRating","quote","setQuote","currentTask","workSubTypeList","keywordList","changeRating","onClose","popupLabel","Mytasks","taskList","setTaskList","taskCardShow","setTaskCardShow","setCurTask","showTaskCard","ProtectedRoute","Component","component","App","taskShow","setTaskShow","setLoggedIn","parse","localStorage","getItem","push","hideTaskPopup","setItem","jwt","removeItem","hideTaskForm","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.ae7fd25b.chunk.js","sourcesContent":["const useUserFetch = (url, data) => {\r\n  const loader = document.querySelector('.loader__wrapper');\r\n\r\n  // user authorization\r\n  const userAuth = () => {\r\n    loader.classList.add('loader__wrapper_visible');\r\n    return fetch(`${url}auth/local/register`, {\r\n      redirect: 'follow',\r\n      method: 'POST',\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify({\r\n        username: `${data.username}`,\r\n        email: `${data.email}`,\r\n        password: `${data.password}`,\r\n        userphone: `${data.userphone}`,\r\n        // permission: `${data.permission}`\r\n      })\r\n    })\r\n    .then((res) => {\r\n      loader.classList.remove('loader__wrapper_visible');\r\n      return (res.ok ? res.json() : Promise.reject(res));\r\n    })\r\n  }\r\n\r\n  // user login\r\n  const userLogin = () => {\r\n    loader.classList.add('loader__wrapper_visible');\r\n    return fetch(`${url}auth/local`, {\r\n      redirect: 'follow',\r\n      method: 'POST',\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify({\r\n        identifier: `${data.email}`,\r\n        password: `${data.password}`\r\n      }) \r\n    })\r\n    .then((res) => {\r\n      loader.classList.remove('loader__wrapper_visible');\r\n      return (res.ok ? res.json() : Promise.reject(res));\r\n     })\r\n  }\r\n\r\n  // getting all users\r\n  const usersGet = () => {\r\n    loader.classList.add('loader__wrapper_visible');\r\n    return fetch(`${url}users`, {\r\n      redirect: 'follow',\r\n      method: 'GET',\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json',\r\n    }})\r\n    .then((res) => {\r\n      loader.classList.remove('loader__wrapper_visible');\r\n      return (res.ok ? res.json() : Promise.reject(res));\r\n    })\r\n  }\r\n  \r\n  // get one user\r\n  const userGet = () => {\r\n    loader.classList.add('loader__wrapper_visible');\r\n    return fetch(`${url}users/${data.userId}`, {\r\n      redirect: 'follow',\r\n      method: 'GET',\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json',\r\n    }})\r\n    .then((res) => {\r\n      loader.classList.remove('loader__wrapper_visible');\r\n      return (res.ok ? res.json() : Promise.reject(res));\r\n    })\r\n  }\r\n\r\n    // user update\r\n    const userUpdate = () => {\r\n      loader.classList.add('loader__wrapper_visible');\r\n      return fetch(`${url}users/:id`, {\r\n        redirect: 'follow',\r\n        method: 'PUT',\r\n        headers: {\r\n          'Accept': 'application/json',\r\n          'Content-Type': 'application/json',\r\n          'Authorization': `Bearer ${data.token}`\r\n        },\r\n        body: JSON.stringify({\r\n          username: `${data.username}`,\r\n          email: `${data.email}`,\r\n          password: `${data.password}`,\r\n          userphone: `${data.userphone}`,\r\n          permission: `${data.permission}`\r\n        })\r\n      })\r\n      .then((res) => {\r\n        loader.classList.remove('loader__wrapper_visible');\r\n        return (res.ok ? res.json() : Promise.reject(res));\r\n      })\r\n    }\r\n\r\n    // delete user\r\n    const userDelete = () => {\r\n      loader.classList.add('loader__wrapper_visible');\r\n      return fetch(`${url}users/:id`, {\r\n        redirect: 'follow',\r\n        method: 'DELETE',\r\n        headers: {\r\n          'Accept': 'application/json',\r\n          'Content-Type': 'application/json',\r\n          'Authorization': `Bearer ${data.token}`\r\n      }})\r\n      .then((res) => {\r\n        loader.classList.remove('loader__wrapper_visible');\r\n        return (res.ok ? res.json() : Promise.reject(res));\r\n      })\r\n    }  \r\n\r\n  return {\r\n      userAuth, \r\n      userLogin,\r\n      usersGet,\r\n      userGet,\r\n      userUpdate,\r\n      userDelete\r\n  }\r\n}\r\n\r\nexport default useUserFetch;","import './CloseButton.css';\r\n\r\nconst CloseButton = (props) => {\r\n  return (\r\n    <button className='close-button' onClick={props.onPress} />\r\n  )\r\n}\r\n\r\nexport default CloseButton;","export const regPopupData = {\r\n  regTitle: 'Зарегистрироваться',\r\n  loginTitle: 'Войти',\r\n  name: 'Ваше имя',\r\n  phone: 'Телефон в формате +7-999-123-45-67',\r\n  email: 'Ваш email',\r\n  password: 'Ваш пароль',\r\n  regButton: 'Зарегистрироваться',\r\n  loginButton: 'Войти'\r\n}\r\n","export const urlData = {\r\n  local: 'http://localhost:1337/',\r\n  network: 'https://profi-2025-api.ew.r.appspot.com/',\r\n  quoteUrl: 'http://www.buymebuyme.xyz/'\r\n}","import {useState, useEffect} from 'react';\r\nimport cn from 'classnames';\r\nimport useUserFetch from '../../hooks/useUserFetch';\r\nimport CloseButton from '../CloseButton/CloseButton';\r\nimport {regPopupData} from '../../constants/userPopupData';\r\nimport {urlData} from '../../constants/urlData';\r\nimport './UserPopup.css';\r\n\r\nconst UserPopup = (props) => {\r\n  const [visibility, setVisibility] = useState(false);\r\n  const [username,  setUserName] = useState(undefined);\r\n  const [userphone,  setUserPhone] = useState(undefined);\r\n  const [email,  setUserEmail] = useState(undefined);\r\n  const [password,  setUserPassword] = useState(undefined);\r\n\r\n  const userData = {username, userphone, email, password};\r\n  // console.log(userData);\r\n\r\n  const {\r\n    userAuth, \r\n    userLogin,\r\n  } = useUserFetch(urlData.network, userData);\r\n\r\n  // popup open\r\n  useEffect(() => {\r\n    props.state !== '' ? setVisibility(true) : setVisibility(false);\r\n  }, [props.state])\r\n\r\n  // popup close by click on wrapper\r\n  const closeByWrapper = (e) => {\r\n    !e.target.closest('.user-popup') && props.clearRegState();\r\n  }\r\n\r\n  // setting user name\r\n  const setName = (e) => {\r\n    setUserName(e.target.value);\r\n    // console.log(e.target.value);\r\n  }\r\n\r\n  // setting user phone\r\n  const setPhone = (e) => {\r\n    setUserPhone(e.target.value);\r\n    // console.log(e.target.value);\r\n  }\r\n\r\n  // setting user email\r\n  const setEmail = (e) => {\r\n    setUserEmail(e.target.value);\r\n    // console.log(e.target.value);\r\n  }\r\n\r\n  // setting user password\r\n  const setPassword = (e) => {\r\n    setUserPassword(e.target.value);\r\n    // console.log(e.target.value);\r\n  }\r\n\r\n  // create new user\r\n  const createUser = () => {\r\n    userAuth()\r\n    .then(res => {\r\n      // console.log(res);\r\n      props.setUser(res);\r\n    })\r\n    .catch(err => {\r\n      err.json()\r\n      .then(err => console.log(err));\r\n    })\r\n\r\n  }\r\n\r\n  // create new user\r\n  const loginUser = () => {\r\n    userLogin()\r\n    .then(res => {\r\n      console.log(res);\r\n      props.setUser(res);\r\n    })\r\n    .catch(err => {\r\n      err.json()\r\n      .then(err => console.log(err));\r\n    })\r\n\r\n  }\r\n\r\n    // start registration\r\n    const registrate = (e) => {\r\n      e.preventDefault();\r\n      createUser(); \r\n      props.clearRegState();\r\n    }\r\n  \r\n    // start login\r\n    const login = (e) => {\r\n      e.preventDefault();\r\n      loginUser(); \r\n      props.clearRegState();\r\n    }\r\n\r\n\r\n  return (\r\n    <div className={cn('user-popup__wrapper', {'user-popup__wrapper_visible': visibility})} onClick={closeByWrapper }>\r\n      <form className='user-popup'>\r\n        <h2 className='user-popup__title'>{props.state === 'registration' ? regPopupData.regTitle :regPopupData.loginTitle}</h2>\r\n        {props.state === 'registration' && <input className='user-popup__input' type='text' name='name' placeholder={regPopupData.name} onChange={setName}></input>}\r\n        {props.state === 'registration' && <input className='user-popup__input' type='text' name='phone' pattern='^(\\+7|8)(\\(|\\s|-)?\\d{3}(\\)|\\s|-)?\\s?(\\d(\\s|-)?){6}\\d' placeholder={regPopupData.phone} onChange={setPhone}></input>}\r\n        <input className='user-popup__input' type='email' name='email' placeholder={regPopupData.email} onChange={setEmail}></input>\r\n        <input className='user-popup__input' type='text' name='password' placeholder={regPopupData.password} onChange={setPassword}></input>\r\n        <div className='user-popup__button-wrapper'>\r\n          {props.state === 'registration' && <button className='user-popup__reg-button' onClick={registrate}>{regPopupData.regButton}</button>}\r\n          <button className='user-popup__reg-button' onClick = {\r\n            props.state === 'registration' ? props.setLoginState : login\r\n          }>{regPopupData.loginButton}</button>\r\n        </div>\r\n        <CloseButton onPress={props.clearRegState} />\r\n      </form>\r\n    </div>\r\n\r\n  )\r\n}\r\n\r\nexport default UserPopup;\r\n","export default __webpack_public_path__ + \"static/media/logo.507c0c8a.svg\";","import {useState} from 'react';\r\nimport UserPopup from '../UserPopup/UserPopup';\r\nimport './Header.css';\r\nimport Header__img from '../../images/logo.svg';\r\n\r\nconst Header = (props) => {\r\n  // collecting states\r\n  const [userState, setUserState] = useState('');\r\n\r\n  // set reg state\r\n  const setRegState = (e) => {\r\n    e.preventDefault();\r\n    setUserState('registration');\r\n  }\r\n\r\n  // set reg state\r\n  const setLoginState = () => {\r\n    setUserState('login');\r\n  }\r\n\r\n  // clear reg state\r\n  const clearRegState = () => {\r\n    setUserState('');\r\n  }\r\n\r\n  return (\r\n    <header className='header'>\r\n      <div className='header__container'>\r\n        <a className='header__link' href='#'>\r\n        <img className='header__img' src={Header__img} alt='Логотип' />\r\n        Гражданин поэт\r\n        </a>\r\n        <ul className='header__user-navigation'>\r\n          { !props.loggedIn && <li className='header__user-navigation-item' onClick={setLoginState}><a className='header__login-link' href='#'>Вход</a></li>}\r\n          { !props.loggedIn && <li className='header__user-navigation-item' onClick={setRegState}><a className='header__signin-link' href='#'>Регистрация</a></li>}\r\n          { props.loggedIn && <p className='header__user-data'>{props.user.username}</p>}\r\n          { props.loggedIn && <li className='header__user-navigation-item'><a className='header__logout-link' onClick={props.logout} aria-label='Выход'></a></li>}\r\n        </ul>\r\n        {props.user.userToken && <p>Привет, {props.user.userName}</p>}\r\n        <UserPopup state={userState} setUserState={setUserState} setLoginState={setLoginState} clearRegState={clearRegState} setUser={props.setUser}/>\r\n      </div>\r\n    </header>\r\n  )\r\n}\r\n\r\nexport default Header;\r\n","const useTaskFetch = (url, token, workData, userData, workerData) => {\r\n  const loader = document.querySelector('.loader__wrapper');\r\n\r\n  // getting all tasks\r\n  const tasksGet = () => {\r\n    loader.classList.add('loader__wrapper_visible');\r\n    return fetch(`${url}tasks`, {\r\n      redirect: 'follow',\r\n      method: 'GET',\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json',\r\n        // 'Authorization': `Bearer ${token}`,\r\n    }})\r\n    .then((res) => {\r\n      loader.classList.remove('loader__wrapper_visible');\r\n      return (res.ok ? res.json() : Promise.reject(res));\r\n    })\r\n  }\r\n  \r\n  // get client's tasks\r\n  const tasksGetByClient = () => {\r\n    loader.classList.add('loader__wrapper_visible');\r\n    return fetch(`${url}tasks?client_name=${userData.username}`, {\r\n      redirect: 'follow',\r\n      method: 'GET',\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json',\r\n        'Authorization': `Bearer ${token}`,\r\n    }})\r\n    .then((res) => {\r\n      loader.classList.remove('loader__wrapper_visible');\r\n      return (res.ok ? res.json() : Promise.reject(res));\r\n    })\r\n  }\r\n\r\n    // get worker's tasks\r\n    const tasksGetByWorker = () => {\r\n      return fetch(`${url}tasks?client_name=${workerData.worker_name}`, {\r\n        redirect: 'follow',\r\n        method: 'GET',\r\n        headers: {\r\n          'Accept': 'application/json',\r\n          'Content-Type': 'application/json',\r\n          'Authorization': `Bearer ${token}`,\r\n      }})\r\n      .then((res) => {\r\n        return (res.ok ? res.json() : Promise.reject(res));\r\n      })\r\n    }\r\n\r\n    // task create\r\n    const taskCreate = () => {\r\n      loader.classList.add('loader__wrapper_visible');\r\n      return fetch(`${url}tasks`, {\r\n        redirect: 'follow',\r\n        method: 'POST',\r\n        headers: {\r\n          'Accept': 'application/json',\r\n          'Content-Type': 'application/json',\r\n          'Authorization': `Bearer ${token}`,\r\n        },\r\n        body: JSON.stringify({\r\n          type: `${workData.type}`,\r\n          subtype: `${workData.subtype}`,\r\n          description: `${workData.description}`,\r\n          aссepted: false,\r\n          completed: false,\r\n          rating: '0',\r\n          feedback: null,\r\n          // unlock to use worker data\r\n          // worker_name: null,\r\n          // worker_phone: null,\r\n          // worker_email: null,\r\n          client_name: `${userData.username}`,\r\n          client_phone: `${userData.userphone}`,\r\n          client_email: `${userData.email}`,\r\n        })\r\n      })\r\n      .then((res) => {\r\n        loader.classList.remove('loader__wrapper_visible');\r\n        return (res.ok ? res.json() : Promise.reject(res));\r\n      })\r\n    }\r\n\r\n        // task update\r\n        const taskUpdate = () => {\r\n          loader.classList.add('loader__wrapper_visible');\r\n          return fetch(`${url}tasks/${workData.id}`, {\r\n            redirect: 'follow',\r\n            method: 'PUT',\r\n            headers: {\r\n              'Accept': 'application/json',\r\n              'Content-Type': 'application/json',\r\n              'Authorization': `Bearer ${token}`,\r\n            },\r\n            body: JSON.stringify({\r\n              type: `${workData.type}`,\r\n              subtype: `${workData.subtype}`,\r\n              description: `${workData.description}`,\r\n              accepted: `${workData.accepted}`,\r\n              completed: `${workData.completed}`,\r\n              rating: `${workData.rating}`,\r\n              feedback: `${workData.feedback}`,\r\n              // worker_name: `${workerData.DataName}`,\r\n              // worker_phone: `${workerData.workDataerPhone}`,\r\n              // worker_email: `${workerData.workerEmDataail}`,\r\n              // client_name: `${userData.userName}`,\r\n              // client_phone: `${userData.userPhone}`,\r\n              // client_email: `${userData.userEmail}`,\r\n            })\r\n          })\r\n          .then((res) => {\r\n            loader.classList.remove('loader__wrapper_visible');\r\n            return (res.ok ? res.json() : Promise.reject(res));\r\n          })\r\n        }\r\n\r\n    // delete user\r\n    const taskDelete = () => {\r\n      loader.classList.add('loader__wrapper_visible');\r\n      return fetch(`${url}tasks/${workData.id}`, {\r\n        redirect: 'follow',\r\n        method: 'DELETE',\r\n        headers: {\r\n          'Accept': 'application/json',\r\n          'Content-Type': 'application/json',\r\n          'Authorization': `Bearer ${token}`,\r\n      }})\r\n      .then((res) => {\r\n        loader.classList.remove('loader__wrapper_visible');\r\n        return (res.ok ? res.json() : Promise.reject(res));\r\n      })\r\n    }  \r\n\r\n  return {\r\n    tasksGet,\r\n    tasksGetByClient,\r\n    tasksGetByWorker,\r\n    taskCreate,\r\n    taskUpdate,\r\n    taskDelete\r\n  }\r\n}\r\n\r\nexport default useTaskFetch;","import React from 'react';\r\nimport './Button.css';\r\n\r\n\r\nconst Button = (props) => {\r\n\r\n  return (\r\n    <button className='button' onClick={props.onPress}>{props.placeholder}</button>\r\n  )\r\n}\r\n\r\nexport default Button;\r\n","export const mainButtonsData = {\r\n  showTasks: 'Мои заявки',\r\n  showMainPage: 'На главную',\r\n  createTask: 'Создать заявку'\r\n}","export default __webpack_public_path__ + \"static/media/main__bgi.29824270.jpg\";","import {useState, useEffect} from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport useTaskFetch from '../../hooks/useTaskFetch';\r\nimport Button from '../Button/Button';\r\nimport {mainButtonsData} from '../../constants/mainButtonsData';\r\nimport {urlData} from '../../constants/urlData';\r\nimport './Main.css';\r\nimport Main__img from '../../images/main__bgi.jpg';\r\n\r\nconst Buttons = (props) => {\r\n  const userName = props.user.userName;\r\n  const userPhone = props.user.userPhone;\r\n  const userEmail = props.user.userEmail;\r\n  const userToken = props.user.userToken;\r\n\r\n  const userData = {userName, userPhone, userEmail, userToken};\r\n\r\n  const {\r\n    tasksGet,\r\n    tasksGetByClient,\r\n    tasksGetByWorker,\r\n    taskCreate,\r\n    taskUpdate,\r\n    taskDelete\r\n  } = useTaskFetch(urlData.local, userData);\r\n\r\n  // state of link status and page appearance\r\n  const [pageMode, setPageMode] = useState('main');\r\n\r\n  // set page mode\r\n  // useEffect(() => {\r\n  //   props.loggedIn && setPageMode('main')\r\n  // }, [props.loggedIn])\r\n\r\n  // const getClientTasks = () => {\r\n  //   tasksGetByClient()\r\n  //   .then((res) => {\r\n  //     props.setTasks(res);\r\n  //   })\r\n  //   .catch(err => {\r\n  //     err.json()\r\n  //     .then(err => console.log(err));\r\n  //   })\r\n  // }\r\n\r\n  const showTasks = () => {\r\n    setPageMode('tasks');\r\n  }\r\n\r\n  const hideTasks = () => {\r\n    setPageMode('main');\r\n  }\r\n\r\n\r\n  return (\r\n    <section className='main'>\r\n        <h1 className='main__title'>Гражданин, найди мастера!</h1>\r\n        <img className='main__img' src={Main__img} alt='Найти мастера' />\r\n        <div className='main__buttons-container'>\r\n          {props.loggedIn && pageMode ==='main' && <Link className='main__navlink' to='/my-tasks' onClick={showTasks}>{mainButtonsData.showTasks}</Link>}\r\n          {props.loggedIn && pageMode ==='tasks' && <Link className='main__navlink' to='/' onClick={hideTasks}>{mainButtonsData.showMainPage}</Link>}\r\n          {props.loggedIn && <Button placeholder={mainButtonsData.createTask} onPress={props.showTaskForm}/>}\r\n          {!props.loggedIn && <p className='main__login-note'>Войдите или зарегистрируйтесь</p>}\r\n        </div>\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default Buttons;\r\n","import React from 'react';\r\nimport './About.css';\r\n\r\nconst About = () => {\r\n\r\n  return (\r\n    <section className='about'>\r\n        <h2 className='about__title'>Как это работает</h2>\r\n        <ol className='about__info'>\r\n          <li className='about__item'>\r\n            <h3 className='about__item-title'>1</h3>\r\n            <p className='about__item-text'>Зарегистрируйтесь и оформите заявку на нужную работу</p>\r\n          </li>\r\n          <li className='about__item'>\r\n            <h3 className='about__item-title'>2</h3>\r\n            <p className='about__item-text'>Дождитесь связи с мастером</p>\r\n          </li>\r\n          <li className='about__item'>\r\n            <h3 className='about__item-title'>3</h3>\r\n            <p className='about__item-text'>Оцените выполненную мастером работу</p>\r\n          </li>\r\n        </ol>\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default About;\r\n","import {React} from 'react';\r\nimport './Poem.css';\r\n\r\nconst Poem = () => {\r\n\r\n  return (\r\n    <section className='poem'>\r\n      <h2 className='poem__title'>Стихи дня</h2>\r\n      <h3 className='poem__subtitle'>Владимир Маяковский</h3>\r\n      <blockquote className='poem__quote'><span className='poem__quote-quotes'>\r\n        <p className='poem__quote-text'>\r\n        Чувства в кулак, волю в узду!,<br />\r\n        Рабочий, работай!, —<br />\r\n        Не охай!,<br />\r\n        Не ахай!</p></span>\r\n      </blockquote>\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default Poem;\r\n","import cn from 'classnames';\r\nimport './Arrow.css';\r\n\r\nconst Arrow = (props) => {\r\n\r\n  return (\r\n    <button className={cn('arrow', {\r\n      'arrow_left': props.direction === 'left',\r\n      'arrow_right': props.direction === 'right',\r\n    })} \r\n    onClick={props.onArrowClick}\r\n    />\r\n  )\r\n}\r\n\r\nexport default Arrow;","export default __webpack_public_path__ + \"static/media/review-avatar.02c8b300.jpg\";","import {useState} from 'react';\r\nimport cn from 'classnames';\r\nimport './Review.css'\r\nimport avatarPath from '../../../images/review-avatar.jpg';\r\n\r\nconst Review = (props) => {\r\n  const rating = props.data.rating;\r\n\r\n\r\n  return (\r\n    <li className='review__container'>\r\n      <img className='review__image' src={avatarPath} ali='avatar-path' />\r\n      <h2 className='review__header'>{props.data.description}</h2>\r\n      <p className='review__text'>{props.data.feedback ? props.data.feedback : 'Пока нет отзыва, но скоро он точно появится, вот тогда мы и попляшем :-)'}</p>\r\n      <p className='review__text-writer'>{props.data.client_name}</p>\r\n      <ul className='review__rating-container'>\r\n        <li id='1' className={cn('review__rating-item', {'review__rating-item_active': rating >=1})} />\r\n        <li id='1' className={cn('review__rating-item', {'review__rating-item_active': rating >=2})} />\r\n        <li id='1' className={cn('review__rating-item', {'review__rating-item_active': rating >=3})} />\r\n        <li id='1' className={cn('review__rating-item', {'review__rating-item_active': rating >=4})} />\r\n      </ul>\r\n    </li>\r\n  )\r\n}\r\n\r\nexport default Review;\r\n","import {useState, useEffect} from 'react';\r\nimport Arrow from './Arrow/Arrow';\r\nimport Review from './Review/Review';\r\nimport useTaskFetch from '../../hooks/useTaskFetch';\r\nimport {urlData} from '../../constants/urlData';\r\nimport './Reviews.css';\r\n\r\nconst Reviews = (props) => {\r\n  const [dataList, setDataList] = useState([]);\r\n  const [dataSearcnValue, setDataSearchValue] = useState(0);\r\n\r\n  // constants\r\n  const userData = props.user;\r\n  const workData = undefined;\r\n  const workerData = undefined;\r\n\r\n  // hooks\r\n  const {\r\n    tasksGet,\r\n  } = useTaskFetch(urlData.network, props.token, workData, userData, workerData)\r\n\r\n  // collect reviews\r\n  useEffect(() => {\r\n    tasksGet()\r\n    .then(res => setDataList(res))\r\n    .catch(err => console.log(err));\r\n  }, [])\r\n\r\n  const searchRight = () => {\r\n    if (dataSearcnValue === (dataList.length - 2)) return;\r\n    setDataSearchValue(dataSearcnValue + 1);\r\n  }\r\n\r\n  const searchLeft = () => {\r\n    if (dataSearcnValue === 0) return;\r\n    setDataSearchValue(dataSearcnValue - 1);\r\n  }\r\n\r\n  return (\r\n    <section className='reviews'>\r\n      <h2 className='reviews__title'>Отзывы</h2>\r\n      <div className='reviews__container'>\r\n        {(!dataList || dataList.length === 0) && <p className='reviews__note'>Пока нет ревью</p>}\r\n        {dataList.length !== 0 && dataSearcnValue !== 0 && <Arrow direction= 'left' onArrowClick={searchLeft} />}\r\n        {dataList.length !== 0 &&\r\n          <ul className='reviews__list'>\r\n            {dataList.slice(dataSearcnValue, dataSearcnValue + 2).map((i, num) => {\r\n              return (\r\n                <Review key={num} data={i} />\r\n              )\r\n            } )}\r\n          </ul>\r\n        }\r\n        {dataList.length !== 0 && dataSearcnValue !== (dataList.length - 2) && <Arrow direction='right' onArrowClick={searchRight} />}\r\n      </div>\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default Reviews;\r\n","import React from 'react';\r\nimport './Footer.css';\r\n\r\nconst Footer = () => {\r\n\r\n  return (\r\n    <footer className='footer'>\r\n      <p className='footer__title'>ООО “Гражданин Поэт” 2025</p>\r\n    </footer>\r\n  )\r\n}\r\n\r\nexport default Footer;\r\n","import './TaskFormSelect.css'\r\n\r\nconst TaskFormSelect = ({name, label, optionList, selectOption}) => {\r\n\r\n  // console.log('optionlist - '+optionList)\r\n\r\n  return (\r\n    <select className='select' name={name} label={label} onChange={selectOption}>\r\n      {optionList.map((item, num) => {\r\n        return (\r\n          <option key={num} className='select__option' value={num}>{item}</option>\r\n        )\r\n      })}\r\n    </select>\r\n  )\r\n}\r\n\r\nexport default TaskFormSelect;","import cn from 'classnames';\r\nimport './AlertPopup.css';\r\n\r\nconst AlertPopup = (props) => {\r\n\r\n  return (\r\n    <div className={cn('alert-popup__wrapper', {'alert-popup__wrapper_visible': props.visibility})}>\r\n      <section className='alert-popup'>\r\n        <p className='alert-popup__title'>{props.title}</p>\r\n        <div className='alert-popup__button-wrapper'>\r\n          <button className='alert-popup__button alert-popup__button_yes-button' onClick={props.onYesClick}>Да</button>\r\n          <button className='alert-popup__button alert-popup__button_no-button' onClick={props.onNoClick}>Нет</button>\r\n        </div>\r\n      </section>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AlertPopup;","export const taskFormData = {\r\n  title: 'Заявка на ремонт',\r\n  workType: 'Мне нужно',\r\n  workSubtype: 'Подробнее, что нужно',\r\n  workDescription: 'В нескольких словах, что именно нужно',\r\n  name: 'Имя заявителя',\r\n  phone: 'Телефон заявителя',\r\n  email: 'e-mail заявителя'\r\n}\r\n\r\nexport const taskFormPlaceholders = {\r\n  workDescription: 'Опишите работу',\r\n  clientName: 'Ваше имя',\r\n  clientPhone: 'Телефон в формате +7-999-123-45-67',\r\n  clientEmail: 'Ваш email',\r\n  clientFeedback: 'Оставьте отзыв после выполнения работы'\r\n}\r\n\r\nexport const taskButtonPlaceholders = {\r\n  confirmed: 'В работе',\r\n  notConfirmed: 'Ожидает мастера',\r\n  finished: 'Выполнена',\r\n  notFinished: 'Не выполнена'\r\n}\r\n\r\nexport const taskFormLabels = {\r\n  workType: 'Услуга',\r\n  workSubtype: 'Подкатегория услуги',\r\n}\r\n\r\nexport const alertPopupData = {\r\n  dataCardDelete: 'Вы действительно хотите удалить заявку?',\r\n  dataFormClose: 'Вы действительно хотите отменить оформление заявки?'\r\n}\r\n\r\nexport const taskFormTypeList = [\r\n  'Электрика',\r\n  'Сантехника',\r\n  'Отделочные работы',\r\n  'Мебель, двери, окна',\r\n  'Компьютерная помощь',\r\n  'Уборка',\r\n]\r\n\r\nexport const taskFormSubtypeList = [\r\n  [\r\n    'Установка или замена розеток',\r\n    'Ремонт электропроводки',\r\n    'Замена оборудования',\r\n    'Ремонт электроприборов'\r\n  ],\r\n  [\r\n    'Ремонт сантехнических приборов',\r\n    'Установка или замена сантехнических приборов',\r\n    'Устранение засоров и прочистка фильтров',\r\n    'Ремонт или замена трубопроводов и арматуры',\r\n    'Ремонт или замена отопительных приборов'\r\n  ],\r\n  [\r\n    'Поклейка обоев',\r\n    'Покраска стен и потолка',\r\n    'Укладка плитки',\r\n    'Комплексная подготовка и отделка помещений'\r\n  ],\r\n  [\r\n    'Сборка мебели',\r\n    'Установка дверей',\r\n    'Установка окон',\r\n    'Остекление балконов',\r\n    'Навешивание полок и фурнитуры'\r\n  ],\r\n  [\r\n    'Помощь в покупке компьютера',\r\n    'Установка и удаление программ',\r\n    'Ремонт и замена оборудования',\r\n    'Подключение и настройка интернета'\r\n  ],\r\n  [\r\n    'Комплексная уборка помещения',\r\n    'Мытье окон',\r\n    'Прачечная'\r\n  ],\r\n]\r\n\r\nexport const buttonData = {\r\n  save: 'Сохранить',\r\n  delete: 'Удалить',\r\n  submit: 'Отправить'\r\n}\r\n","import {useState} from 'react';\r\nimport {useHistory} from 'react-router-dom';\r\nimport cn from 'classnames';\r\nimport TaskFormSelect from './TaskFormSelect/TaskFormSelect';\r\nimport CloseButton from '../CloseButton/CloseButton';\r\nimport AlertPopup from '../AlertPopup/AlertPopup';\r\nimport useTaskFetch from '../../hooks/useTaskFetch';\r\nimport {taskFormData, alertPopupData, taskFormPlaceholders,  taskFormLabels, taskFormTypeList, taskFormSubtypeList, buttonData} from '../../constants/formData';\r\nimport {urlData} from '../../constants/urlData';\r\n\r\nimport './TaskForm.css';\r\n\r\nconst TaskForm = (props) => {\r\n  // select states\r\n  const [alertVisibility, SetAlertVisibility] = useState(false);\r\n  const [type, setWorkType] = useState(0);\r\n  const [subtype, setWorkSubtype] = useState(0);\r\n  const [description, setWorkDescription] = useState(0);\r\n  // collect user data\r\n  const userData = props.user;\r\n  // create common data\r\n  const workData = {type, subtype, description};\r\n  const workerData = undefined;\r\n\r\n  // history\r\n  const history = useHistory();\r\n\r\n  // use fetch hooks\r\n  const {\r\n    taskCreate,\r\n  } = useTaskFetch(urlData.network, props.token, workData, userData, workerData)\r\n\r\n\r\n  // set work type\r\n  const setType = (e) => {\r\n    setWorkType(e.target.value);\r\n    setWorkSubtype(0);\r\n  }\r\n\r\n  // set work subtype\r\n  const setSubtype = (e) => {\r\n    setWorkSubtype(e.target.value);\r\n  }\r\n\r\n  // set work description\r\n  const setDescription = (e) => {\r\n    setWorkDescription(e.target.value);\r\n  }\r\n\r\n  // open alert popup\r\n  const alertOpen = (e) => {\r\n    e && e.preventDefault();\r\n    SetAlertVisibility(true);\r\n  }\r\n  \r\n  // close alert popup with yes option\r\n  const alertCloseYesOption = (e) => {\r\n    e.preventDefault();\r\n    SetAlertVisibility(false);\r\n    props.formClose();\r\n  }\r\n\r\n  // close alert popup with yes option\r\n  const alertCloseNoOption = (e) => {\r\n    e.preventDefault();\r\n    SetAlertVisibility(false);\r\n  }\r\n\r\n  // closing by clicking on wrapper\r\n  const closeByWrapper = (e) => {\r\n    !e.target.closest('.task-form') && alertOpen();\r\n  }\r\n\r\n    // create new task\r\n    const createTask = () => {\r\n      taskCreate()\r\n      .then(res => {\r\n        console.log(res);\r\n      })\r\n      .catch(err => {\r\n        err.json()\r\n        .then(err => console.log(err));\r\n      })\r\n    }\r\n\r\n    // click to send\r\n    const formSubmit = (e) => {\r\n      e.preventDefault();\r\n      // console.log('token - ' + props.token);\r\n      createTask();\r\n      history.replace('/my-tasks');\r\n      props.formClose();\r\n    }\r\n\r\n\r\n  // console.log(selectedWorkType);\r\n  // console.log(selectedWorkSubtype);\r\n  // console.log('break');\r\n\r\n\r\n  return (\r\n    <div className={cn('task-form-wrapper', {'task-form-wrapper_visible': props.visibility})} onClick={closeByWrapper}>\r\n      <form className='task-form'>\r\n        <h2 className='task-form__title'>{taskFormData.title}</h2>\r\n        <ul className='task-form__list'>\r\n          <li className='task-form__list-item'>\r\n            <p className='task-form__field-note'>{taskFormData.workType}</p>\r\n            <TaskFormSelect name='work-type' label={taskFormLabels.workType} optionList={taskFormTypeList} selectOption={setType} />\r\n          </li>\r\n          <li className='task-form__list-item'>\r\n            <p className='task-form__field-note'>{taskFormData.workSubtype}</p>\r\n            <TaskFormSelect name='work-subtype' label={taskFormLabels.workSubtype} optionList={taskFormSubtypeList[type]} selectOption={setSubtype} />\r\n          </li>\r\n          <li className='task-form__list-item'>\r\n            <p className='task-form__field-note'>{taskFormData.workDescription}</p>\r\n            <textarea name='description' rows='4' className='task-form__field-item' placeholder={taskFormPlaceholders.workDescription} onChange={setDescription}></textarea>\r\n          </li>\r\n        </ul>\r\n        <p className='task-form__field-note'>Ваши имя, телефон и email будут указаны в заявке</p>\r\n        <button className='task-form__submit-button' onClick={formSubmit}>{buttonData.submit}</button>\r\n        <CloseButton onPress={alertOpen} />\r\n        <AlertPopup visibility={alertVisibility} title={alertPopupData.dataFormClose} onYesClick={alertCloseYesOption} onNoClick={alertCloseNoOption} />\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default TaskForm;","export const tasksData = {\r\n  title: 'Мои заявки',\r\n  buttonName: 'Фильтр',\r\n  emptyNote: 'У вас пока нет заявок',\r\n}\r\n\r\nexport const taskStatus = {\r\n  send: 'Размещена',\r\n  confirmed: 'Принята',\r\n  finished: 'Выполнена',\r\n}","export default __webpack_public_path__ + \"static/media/about_bgi.6cb1ec04.svg\";","import React from 'react';\r\nimport {taskFormSubtypeList} from '../../constants/formData';\r\nimport {taskStatus} from '../../constants/tasksData';\r\nimport bgImg from '../../images/about_bgi.svg';\r\nimport './Mytask.css';\r\n\r\n\r\nconst Mytask = (props) => {\r\n  const status = props.task.accepted && props.task.completed ? \r\n  taskStatus.finished : \r\n  props.task.accepted ? taskStatus.confirmed : \r\n  taskStatus.send;\r\n\r\n  const taskSubtypeList = taskFormSubtypeList[props.task.type];\r\n  const taskSubtype = taskSubtypeList[props.task.subtype];\r\n  const taskCreatedTime = props.task.created_at.slice(0, 10);\r\n\r\n  return (\r\n    <li className='mytasks__item' id={props.number} onClick={props.onTaskShow}>\r\n      <p className='mytasks__item-worktitle'>Вид работы</p>\r\n      <h3 className='mytasks__name'>{taskSubtype}</h3>\r\n      <p className='mytasks__item-title'>Дата создания</p>\r\n      <time className='mytasks__date'>{taskCreatedTime}</time>\r\n      <p className='mytasks__item-title'>Описание работы</p>\r\n      <time className='mytasks__description'>{props.task.description}</time>\r\n      <div className='mytasks__status-wrapper'>\r\n        <p className='mytasks__status'>Статус</p>\r\n        <p className='mytasks__status mytasks__status_type'>{status}</p>\r\n      </div>\r\n      <img className='mytasks__label' src={bgImg} alt='label' />\r\n    </li>\r\n  )\r\n}\r\n\r\nexport default Mytask;\r\n","const useQuoteFetch = (url, keyword) => {\r\n  const loader = document.querySelector('.loader__wrapper');\r\n\r\n  const quoteSearch = () => {\r\n    loader.classList.add('loader__wrapper_visible');\r\n    return fetch (`${url}?q=${keyword}&onlyLines=50`, {\r\n      redirect: 'follow',\r\n      method: 'GET',\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json',\r\n    }})\r\n    .then(res => {\r\n      loader.classList.remove('loader__wrapper_visible');\r\n      return( res.ok ? res.json() : Promise.reject(res));\r\n    })\r\n    .then(data => {\r\n      if (!data || data.length === 0) return;\r\n      if (data.length === 1) return (data[0].fields.text);\r\n      return data[Math.round(Math.random() * (data.length - 1))].fields.text;\r\n    })\r\n    .catch(err => console.log(err));\r\n  }\r\n\r\n  return {quoteSearch};\r\n}\r\n\r\nexport default useQuoteFetch;","export const ratingValue = [\r\n  'Пока нет отзывов о работе',\r\n  [\r\n    'Ужасно',\r\n    'Кошмарно',\r\n    'Плохо'\r\n  ],\r\n  [\r\n    'Хорошо',\r\n    'Прилежно',\r\n    'Неплохо'\r\n  ],\r\n  [\r\n    'Здорово',\r\n    'Отлично'\r\n  ],\r\n  [\r\n    'Прекрасно',\r\n    'Великолепно'\r\n  ]\r\n]","export default __webpack_public_path__ + \"static/media/popup-label.3ec26d83.svg\";","import {useState, useEffect} from 'react';\r\nimport cn from 'classnames';\r\nimport CloseButton from '../CloseButton/CloseButton';\r\nimport AlertPopup from '../AlertPopup/AlertPopup';\r\nimport useTaskFetch from '../../hooks/useTaskFetch';\r\nimport useQuoteFetch from '../../hooks/useQuoteFetch';\r\nimport {urlData} from '../../constants/urlData';\r\nimport {ratingValue} from '../../constants/ratingValue';\r\nimport {taskButtonPlaceholders, buttonData, alertPopupData, taskFormSubtypeList} from '../../constants/formData';\r\nimport popupLabel from '../../images/popup-label.svg';\r\nimport './TaskCard.css'\r\n\r\nconst TaskCard = (props) => {\r\n  // set work status\r\n  const [workConfirmation, setWorkConfirmation] = useState('not-confirmed');\r\n  const [alertVisibility, SetAlertVisibility] = useState(false);\r\n  const [feedbackValue, setFeedbackValue] = useState('');\r\n  const [rating, setRating] = useState(0);\r\n  const [quote, setQuote] = useState('');\r\n\r\n  // constants\r\n  const taskCreatedTime = props.currentTask.created_at.slice(0, 10);\r\n  const workSubTypeList = taskFormSubtypeList[props.currentTask.type];\r\n  const workData = props.currentTask;\r\n  const worker = undefined;\r\n\r\n  // hooks\r\n  // task hook\r\n  const {\r\n    taskUpdate,\r\n    taskDelete\r\n  } = useTaskFetch(urlData.network, props.token, workData, props.user, worker);\r\n\r\n  // qoute hook\r\n  const {quoteSearch} = useQuoteFetch(urlData.quoteUrl, feedbackValue);\r\n\r\n  // set initial rating\r\n  useEffect(() => {\r\n    setRating(props.currentTask.rating);\r\n  }, [props.currentTask])\r\n\r\n  //set feedback value\r\n  useEffect(() => {\r\n    const keywordList = ratingValue[rating];\r\n    const keyword = rating == 0 ? ratingValue[0] :  keywordList[Math.round(Math.random() * (keywordList.length - 1))];\r\n    setFeedbackValue(keyword);\r\n    console.log('feedbackval - ' + feedbackValue);\r\n  }, [rating])\r\n\r\n  // set quote\r\n  useEffect(() => {\r\n    if (rating == 0) {\r\n      setQuote(feedbackValue);\r\n    }\r\n    quoteSearch()\r\n    .then(data => {\r\n      console.log('data - ' + data);\r\n      if (!data) return;\r\n      setQuote(data);\r\n    })\r\n    console.log('quote - ' + quote);\r\n  }, [feedbackValue])\r\n\r\n  // work status setter\r\n  const setWorkStatus = () => {\r\n    setWorkConfirmation(workConfirmation === 'not-confirmed' ? 'confirmed' : workConfirmation === 'confirmed' ? 'done' : 'not-confirmed');\r\n  }\r\n\r\n  // closing by clicking on wrapper\r\n  const closeByWrapper = (e) => {\r\n    e.preventDefault();\r\n    !e.target.closest('.task-card') && props.onClose();\r\n  }\r\n\r\n  // open alert popup\r\n  const alertOpen = () => {\r\n    SetAlertVisibility(true);\r\n  }\r\n\r\n  // close alert popup\r\n  const alertClose = (e) => {\r\n    e.preventDefault();\r\n    SetAlertVisibility(false);\r\n  }\r\n\r\n  const setFeedback = (e) => {\r\n    setFeedbackValue(e.target.value);\r\n  }\r\n\r\n  const changeRating = (e) => {\r\n    if (e.target.id == rating) {\r\n      setRating(e.target.id - 1);\r\n    } else setRating(e.target.id);\r\n  }\r\n\r\n  const updateTask = (e) => {\r\n    e.preventDefault();\r\n    workData.feedback = quote;\r\n    workData.rating = rating;\r\n    if (workConfirmation === 'not-confirmed') {\r\n      workData.accepted = false;\r\n      workData.completed = false;\r\n    } else if (workConfirmation === 'confirmed') {\r\n      workData.accepted = true;\r\n      workData.completed = false;\r\n    }else if (workConfirmation === 'done') {\r\n      workData.accepted = true;\r\n      workData.completed = true;\r\n    };\r\n    taskUpdate()\r\n    .then(res => console.log(res))\r\n    .catch(err => console.log(err));\r\n    props.onClose();\r\n  }\r\n\r\n  const deleteTask = (e) => {\r\n    e.preventDefault();\r\n    taskDelete()\r\n    .then(res => console.log(res))\r\n    .catch(err => console.log(err));\r\n    SetAlertVisibility(false);\r\n    props.onClose();\r\n  }\r\n\r\n  return (\r\n    <div className={cn('task-card__wrapper', {'task-card__wrapper_visible': props.visibility})} onClick={closeByWrapper}>\r\n      <section className='task-card'>\r\n        <h2 className='task-card__title'>{workSubTypeList[props.currentTask.subtype]  }</h2>\r\n        <p className='task-card__create-data'>{taskCreatedTime}</p>\r\n        <p className='task-card__description'>{props.currentTask.description}</p>\r\n        <button className='task-card__confirm-button' onClick={setWorkStatus}>{\r\n          workConfirmation === 'not-confirmed' ? taskButtonPlaceholders.notConfirmed : \r\n          workConfirmation === 'confirmed' ? taskButtonPlaceholders.confirmed : taskButtonPlaceholders.finished\r\n          }</button>\r\n        <ul className='task-card__rating-container'>\r\n          <li id='1' className={cn('task-card__rating-item', {'task-card__rating-item_active': rating >= 1})} onClick={changeRating} />\r\n          <li id='2' className={cn('task-card__rating-item', {'task-card__rating-item_active': rating >= 2})} onClick={changeRating} />\r\n          <li id='3' className={cn('task-card__rating-item', {'task-card__rating-item_active': rating >= 3})} onClick={changeRating} />\r\n          <li id='4' className={cn('task-card__rating-item', {'task-card__rating-item_active': rating == 4})} onClick={changeRating} />\r\n        </ul>\r\n        <div className='task-card__button-wrapper'>\r\n          <button className='task-card__button task-card__button_save-button' onClick={updateTask}>{buttonData.save}</button>\r\n          <button className='task-card__button task-card__button_delete-button' onClick={alertOpen} >{buttonData.delete}</button>\r\n        </div>\r\n        <CloseButton onPress={props.onClose} />\r\n        <AlertPopup visibility={alertVisibility} title={alertPopupData.dataCardDelete} onYesClick={deleteTask} onNoClick={alertClose} />\r\n        <img className='task-card__label' src={popupLabel} alt='task-card-label' />\r\n      </section>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default TaskCard;","import {useState, useEffect} from 'react';\r\nimport Mytask from '../Mytask/Mytask';\r\nimport TaskCard from '../TaskCard/TaskCard';\r\nimport useTaskFetch from '../../hooks/useTaskFetch';\r\nimport {tasksData} from '../../constants/tasksData';\r\nimport {urlData} from '../../constants/urlData';\r\nimport './Mytasks.css';\r\n\r\nconst Mytasks = (props) => {\r\n  const [taskList, setTaskList] = useState([]);\r\n  const [taskCardShow, setTaskCardShow] = useState(false);\r\n  const [currentTask, setCurTask] = useState([]);\r\n  // get user token\r\n  // temp data\r\n  const workData = undefined;\r\n  const worker = undefined;\r\n\r\n  const {tasksGetByClient} = useTaskFetch(urlData.network, props.token, workData, props.user, worker);\r\n\r\n  useEffect(() => {\r\n    !props.token && !props.user.username && setTaskList([]);\r\n    tasksGetByClient()\r\n    .then(res => {\r\n      setTaskList(res);\r\n    })\r\n    console.log('upd')\r\n  }, [])\r\n\r\n  const showTaskCard = (e) => {\r\n    console.log(e.target.id);\r\n    setCurTask(taskList[e.target.id]);\r\n    setTaskCardShow(true);\r\n    // console.log('currentTask - ' + currentTask.client_name);\r\n  }\r\n\r\n  const hideTaskCard = () => {\r\n    setTaskCardShow(false);\r\n  }\r\n\r\n\r\n  return (\r\n    <section className='mytasks'>\r\n      <div className='mytasks__container'>\r\n        <h2 className='mytasks__title'>{tasksData.title}</h2>\r\n      </div>\r\n      <ul className='mytasks__list'>\r\n        {taskList.length === 0 ?\r\n          <p className='mytasks__empty-note'>{tasksData.emptyNote}</p> :\r\n          taskList.map((item, num) => {\r\n            return (\r\n              <Mytask key={num} number={num} onTaskShow={showTaskCard} task={item}/>\r\n            )\r\n          })\r\n        }\r\n      </ul>\r\n      {currentTask.length !== 0 &&\r\n        <TaskCard visibility={taskCardShow} currentTask={currentTask} onClose={hideTaskCard} token={props.token} user={props.user} />\r\n      }\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default Mytasks;\r\n","import { Route, Redirect } from 'react-router-dom';\r\n\r\nconst ProtectedRoute = ({component: Component, ...props}) => {\r\n  return (\r\n    <Route>\r\n      {\r\n        () => props.loggedIn ? <Component {...props} /> : <Redirect to='./' />\r\n      }\r\n    </Route>\r\n  )\r\n}\r\n\r\nexport default ProtectedRoute;","import {useState, useEffect} from 'react';\r\nimport {useHistory} from 'react-router-dom';\r\nimport { Route, Switch } from 'react-router-dom';\r\n// components\r\nimport Header from './Header/Header';\r\nimport Main from './Main/Main';\r\nimport About from './About/About';\r\nimport Poem from './Poem/Poem';\r\nimport Reviews from './Reviews/Reviews';\r\nimport Footer from './Footer/Footer';\r\nimport TaskForm from './TaskForm/TaskForm';\r\nimport Mytasks from './Mytasks/Mytasks';\r\nimport ProtectedRoute from './ProtectedRoute/ProtectedRoute';\r\n// css\r\nimport './App.css';\r\n\r\nfunction App() {\r\n  // select states\r\n  const [taskShow, setTaskShow] = useState(false);\r\n  const [user, setUser] = useState({\r\n    id: undefined,\r\n    username: undefined,\r\n    userphone: undefined,\r\n    email: undefined,\r\n  });\r\n  const [loggedIn, setLoggedIn] = useState(false);\r\n  const history = useHistory();\r\n\r\n  // token\r\n  const token = JSON.parse(localStorage.getItem('jwt'));\r\n\r\n  useEffect(() => {\r\n    history.push('/');\r\n  }, [])\r\n\r\n  // show task popup\r\n  const showTaskPopup = () => {\r\n    setTaskShow(true)\r\n  }\r\n\r\n  // hide task popup\r\n  const hideTaskPopup = () => {\r\n    setTaskShow(false)\r\n  }\r\n\r\n  // fetch user\r\n  const setCurrentUser = (res) => {\r\n    localStorage.setItem('jwt', JSON.stringify(res.jwt))\r\n    setUser({\r\n      id: res.user.id,\r\n      username: res.user.username,\r\n      userphone: res.user.userphone,\r\n      email: res.user.email,\r\n    });\r\n    setLoggedIn(true);\r\n  }\r\n\r\n  const logout = (res) => {\r\n    localStorage.removeItem('jwt')\r\n    setUser({\r\n      id: undefined,\r\n      username: undefined,\r\n      userphone: undefined,\r\n      email: undefined,\r\n    });\r\n    setLoggedIn(false);\r\n  }\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Header setUser={setCurrentUser} user={user} loggedIn={loggedIn} logout={logout}/>\r\n      <Main showTaskForm={showTaskPopup} hideTaskForm={hideTaskPopup} user={user} loggedIn={loggedIn} />\r\n      <Switch>\r\n        <Route exact path='/'>\r\n          <About />\r\n          <Poem />\r\n          <Reviews />\r\n        </Route>\r\n        <ProtectedRoute path='/my-tasks' \r\n          loggedIn={loggedIn} \r\n          component={Mytasks} \r\n          user={user} \r\n          token={token} />\r\n      </Switch>\r\n      <Footer />\r\n      <TaskForm visibility={taskShow} formClose={hideTaskPopup} user={user} token={token} />\r\n      <div className='loader__wrapper'>\r\n        <div className=\"loader\"></div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport './index.css';\r\nimport App from './components/App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <BrowserRouter>\r\n      <App />\r\n    </BrowserRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}