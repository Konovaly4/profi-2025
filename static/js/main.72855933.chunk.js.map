{"version":3,"sources":["hooks/useTaskFetch.js","hooks/useUserFetch.js","components/CloseButton/CloseButton.jsx","constants/userPopupData.js","constants/urlData.js","components/UserPopup/UserPopup.jsx","images/logo.svg","components/Header/Header.jsx","components/Button/Button.jsx","constants/mainButtonsData.js","images/main__bgi.jpg","components/Main/Main.jsx","components/About/About.jsx","components/Poem/Poem.jsx","components/Reviews/Arrow/Arrow.jsx","images/review-avatar.jpg","components/Reviews/Review/Review.jsx","components/Reviews/Reviews.jsx","components/Footer/Footer.jsx","components/TaskForm/TaskFormSelect/TaskFormSelect.jsx","components/AlertPopup/AlertPopup.jsx","constants/formData.js","components/TaskForm/TaskForm.jsx","constants/tasksData.js","images/about_bgi.svg","components/Mytask/Mytask.jsx","hooks/useQuoteFetch.js","constants/ratingValue.js","images/popup-label.svg","components/TaskCard/TaskCard.jsx","components/Mytasks/Mytasks.jsx","components/ProtectedRoute/ProtectedRoute.jsx","components/App.js","reportWebVitals.js","index.js"],"names":["useTaskFetch","url","token","workData","userData","workerData","tasksGet","fetch","redirect","method","headers","then","res","ok","json","Promise","reject","tasksGetByClient","username","tasksGetByWorker","worker_name","taskCreate","body","JSON","stringify","type","subtype","description","aссepted","completed","rating","feedback","client_name","client_phone","userphone","client_email","email","taskUpdate","id","accepted","taskDelete","useUserFetch","data","userAuth","password","userLogin","identifier","usersGet","userGet","userId","userUpdate","permission","userDelete","CloseButton","props","className","onClick","onPress","regPopupData","urlData","UserPopup","useState","visibility","setVisibility","undefined","setUserName","setUserPhone","setUserEmail","setUserPassword","useEffect","state","cn","e","target","closest","clearRegState","name","placeholder","onChange","value","preventDefault","setUser","catch","err","console","log","setLoginState","Header","userState","setUserState","href","src","Header__img","alt","loggedIn","user","logout","aria-label","userToken","userName","Button","mainButtonsData","Buttons","userPhone","userEmail","pageMode","setPageMode","Main__img","to","showTaskForm","About","Poem","Arrow","direction","onArrowClick","Review","avatarPath","ali","Reviews","dataList","setDataList","dataSearcnValue","setDataSearchValue","length","slice","map","i","num","Footer","TaskFormSelect","label","optionList","selectOption","item","AlertPopup","title","onYesClick","onNoClick","taskFormData","taskFormPlaceholders","taskButtonPlaceholders","taskFormLabels","alertPopupData","taskFormTypeList","taskFormSubtypeList","buttonData","TaskForm","alertVisibility","SetAlertVisibility","setWorkType","setWorkSubtype","setWorkDescription","history","useHistory","alertOpen","rows","replace","formClose","tasksData","taskStatus","Mytask","status","task","taskSubtype","taskCreatedTime","created_at","number","onTaskShow","bgImg","useQuoteFetch","keyword","quoteSearch","fields","text","Math","round","random","ratingValue","TaskCard","workConfirmation","setWorkConfirmation","feedbackValue","setFeedbackValue","setRating","quote","setQuote","currentTask","workSubTypeList","keywordList","changeRating","onClose","popupLabel","Mytasks","taskList","setTaskList","taskCardShow","setTaskCardShow","setCurTask","showTaskCard","ProtectedRoute","Component","component","App","taskShow","setTaskShow","setLoggedIn","parse","localStorage","getItem","hideTaskPopup","setItem","jwt","removeItem","hideTaskForm","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wiBAwIeA,EAtIM,SAACC,EAAKC,EAAOC,EAAUC,EAAUC,GA4HpD,MAAO,CACLC,SA3He,WACf,OAAOC,MAAM,GAAD,OAAIN,EAAJ,SAAgB,CAC1BO,SAAU,SACVC,OAAQ,MACRC,QAAS,CACP,OAAU,mBACV,eAAgB,sBAGnBC,MAAK,SAACC,GACL,OAAQA,EAAIC,GAAKD,EAAIE,OAASC,QAAQC,OAAOJ,OAkH/CK,iBA7GuB,WACvB,OAAOV,MAAM,GAAD,OAAIN,EAAJ,6BAA4BG,EAASc,UAAY,CAC3DV,SAAU,SACVC,OAAQ,MACRC,QAAS,CACP,OAAU,mBACV,eAAgB,mBAChB,cAAgB,UAAhB,OAA2BR,MAE9BS,MAAK,SAACC,GACL,OAAQA,EAAIC,GAAKD,EAAIE,OAASC,QAAQC,OAAOJ,OAoG/CO,iBA/FyB,WACvB,OAAOZ,MAAM,GAAD,OAAIN,EAAJ,6BAA4BI,EAAWe,aAAe,CAChEZ,SAAU,SACVC,OAAQ,MACRC,QAAS,CACP,OAAU,mBACV,eAAgB,mBAChB,cAAgB,UAAhB,OAA2BR,MAE9BS,MAAK,SAACC,GACL,OAAQA,EAAIC,GAAKD,EAAIE,OAASC,QAAQC,OAAOJ,OAsFjDS,WAjFmB,WACjB,OAAOd,MAAM,GAAD,OAAIN,EAAJ,SAAgB,CAC1BO,SAAU,SACVC,OAAQ,OACRC,QAAS,CACP,OAAU,mBACV,eAAgB,mBAChB,cAAgB,UAAhB,OAA2BR,IAE7BoB,KAAMC,KAAKC,UAAU,CACnBC,KAAK,GAAD,OAAKtB,EAASsB,MAClBC,QAAQ,GAAD,OAAKvB,EAASuB,SACrBC,YAAY,GAAD,OAAKxB,EAASwB,aACzBC,sBAAU,EACVC,WAAW,EACXC,OAAQ,IACRC,SAAU,KAKVC,YAAY,GAAD,OAAK5B,EAASc,UACzBe,aAAa,GAAD,OAAK7B,EAAS8B,WAC1BC,aAAa,GAAD,OAAK/B,EAASgC,WAG7BzB,MAAK,SAACC,GACN,OAAQA,EAAIC,GAAKD,EAAIE,OAASC,QAAQC,OAAOJ,OAuDhDyB,WAlDuB,WACjB,OAAO9B,MAAM,GAAD,OAAIN,EAAJ,iBAAgBE,EAASmC,IAAM,CACzC9B,SAAU,SACVC,OAAQ,MACRC,QAAS,CACP,OAAU,mBACV,eAAgB,mBAChB,cAAgB,UAAhB,OAA2BR,IAE7BoB,KAAMC,KAAKC,UAAU,CACnBC,KAAK,GAAD,OAAKtB,EAASsB,MAClBC,QAAQ,GAAD,OAAKvB,EAASuB,SACrBC,YAAY,GAAD,OAAKxB,EAASwB,aACzBY,SAAS,GAAD,OAAKpC,EAASoC,UACtBV,UAAU,GAAD,OAAK1B,EAAS0B,WACvBC,OAAO,GAAD,OAAK3B,EAAS2B,QACpBC,SAAS,GAAD,OAAK5B,EAAS4B,cASzBpB,MAAK,SAACC,GACN,OAAQA,EAAIC,GAAKD,EAAIE,OAASC,QAAQC,OAAOJ,OAyBpD4B,WApBmB,WACjB,OAAOjC,MAAM,GAAD,OAAIN,EAAJ,iBAAgBE,EAASmC,IAAM,CACzC9B,SAAU,SACVC,OAAQ,SACRC,QAAS,CACP,OAAU,mBACV,eAAgB,mBAChB,cAAgB,UAAhB,OAA2BR,MAE9BS,MAAK,SAACC,GACL,OAAQA,EAAIC,GAAKD,EAAIE,OAASC,QAAQC,OAAOJ,S,gBCFtC6B,EAtHM,SAACxC,EAAKyC,GA4GzB,MAAO,CACHC,SA3Ga,WACf,OAAOpC,MAAM,GAAD,OAAIN,EAAJ,uBAA8B,CACxCO,SAAU,SACVC,OAAQ,OACRC,QAAS,CACP,OAAU,mBACV,eAAgB,oBAElBY,KAAMC,KAAKC,UAAU,CACnBN,SAAS,GAAD,OAAKwB,EAAKxB,UAClBkB,MAAM,GAAD,OAAKM,EAAKN,OACfQ,SAAS,GAAD,OAAKF,EAAKE,UAClBV,UAAU,GAAD,OAAKQ,EAAKR,eAItBvB,MAAK,SAACC,GACN,OAAQA,EAAIC,GAAKD,EAAIE,OAASC,QAAQC,OAAOJ,OA2F5CiC,UAtFc,WAChB,OAAOtC,MAAM,GAAD,OAAIN,EAAJ,cAAqB,CAC/BO,SAAU,SACVC,OAAQ,OACRC,QAAS,CACP,OAAU,mBACV,eAAgB,oBAElBY,KAAMC,KAAKC,UAAU,CACnBsB,WAAW,GAAD,OAAKJ,EAAKN,OACpBQ,SAAS,GAAD,OAAKF,EAAKE,cAGrBjC,MAAK,SAACC,GACL,OAAQA,EAAIC,GAAKD,EAAIE,OAASC,QAAQC,OAAOJ,OAyE7CmC,SApEa,WACf,OAAOxC,MAAM,GAAD,OAAIN,EAAJ,SAAgB,CAC1BO,SAAU,SACVC,OAAQ,MACRC,QAAS,CACP,OAAU,mBACV,eAAgB,sBAEnBC,MAAK,SAACC,GACL,OAAQA,EAAIC,GAAKD,EAAIE,OAASC,QAAQC,OAAOJ,OA4D7CoC,QAvDY,WACd,OAAOzC,MAAM,GAAD,OAAIN,EAAJ,iBAAgByC,EAAKO,QAAU,CACzCzC,SAAU,SACVC,OAAQ,MACRC,QAAS,CACP,OAAU,mBACV,eAAgB,sBAEnBC,MAAK,SAACC,GACL,OAAQA,EAAIC,GAAKD,EAAIE,OAASC,QAAQC,OAAOJ,OA+C7CsC,WA1CiB,WACjB,OAAO3C,MAAM,GAAD,OAAIN,EAAJ,aAAoB,CAC9BO,SAAU,SACVC,OAAQ,MACRC,QAAS,CACP,OAAU,mBACV,eAAgB,mBAChB,cAAgB,UAAhB,OAA2BgC,EAAKxC,QAElCoB,KAAMC,KAAKC,UAAU,CACnBN,SAAS,GAAD,OAAKwB,EAAKxB,UAClBkB,MAAM,GAAD,OAAKM,EAAKN,OACfQ,SAAS,GAAD,OAAKF,EAAKE,UAClBV,UAAU,GAAD,OAAKQ,EAAKR,WACnBiB,WAAW,GAAD,OAAKT,EAAKS,gBAGvBxC,MAAK,SAACC,GACN,OAAQA,EAAIC,GAAKD,EAAIE,OAASC,QAAQC,OAAOJ,OAyB9CwC,WApBiB,WACjB,OAAO7C,MAAM,GAAD,OAAIN,EAAJ,aAAoB,CAC9BO,SAAU,SACVC,OAAQ,SACRC,QAAS,CACP,OAAU,mBACV,eAAgB,mBAChB,cAAgB,UAAhB,OAA2BgC,EAAKxC,UAEnCS,MAAK,SAACC,GACL,OAAQA,EAAIC,GAAKD,EAAIE,OAASC,QAAQC,OAAOJ,SClGtCyC,G,MANK,SAACC,GACnB,OACE,wBAAQC,UAAU,eAAeC,QAASF,EAAMG,YCJvCC,EACD,+GADCA,EAEC,iCAFDA,EAGL,yFAHKA,EAIJ,uHAJIA,EAKJ,wFALIA,EAMD,oGANCA,EAOA,+GAPAA,EAQE,iCCRFC,EACJ,yBADIA,EAEF,2CAFEA,EAGD,6BCsHGC,G,MAjHG,SAACN,GAAW,IAAD,EACSO,oBAAS,GADlB,mBACpBC,EADoB,KACRC,EADQ,OAEMF,wBAASG,GAFf,mBAEpB9C,EAFoB,KAET+C,EAFS,OAGQJ,wBAASG,GAHjB,mBAGpB9B,EAHoB,KAGRgC,EAHQ,OAIIL,wBAASG,GAJb,mBAIpB5B,EAJoB,KAIZ+B,EAJY,OAKUN,wBAASG,GALnB,mBAKpBpB,EALoB,KAKTwB,EALS,OAavB3B,EAAakB,EANA,CAACzC,WAAUgB,YAAWE,QAAOQ,aAI5CD,EAXyB,EAWzBA,SACAE,EAZyB,EAYzBA,UAIFwB,qBAAU,WACQ,KAAhBf,EAAMgB,MAAeP,GAAc,GAAQA,GAAc,KACxD,CAACT,EAAMgB,QA0EV,OACE,qBAAKf,UAAWgB,IAAG,sBAAuB,CAAC,8BAA+BT,IAAcN,QAxEnE,SAACgB,IACrBA,EAAEC,OAAOC,QAAQ,gBAAkBpB,EAAMqB,iBAuE1C,SACE,uBAAMpB,UAAU,aAAhB,UACE,oBAAIA,UAAU,oBAAd,SAAmD,iBAAhBD,EAAMgB,MAA2BZ,EAAuBA,IAC1E,iBAAhBJ,EAAMgB,OAA4B,uBAAOf,UAAU,oBAAoB9B,KAAK,OAAOmD,KAAK,OAAOC,YAAanB,EAAmBoB,SAtEtH,SAACN,GACfP,EAAYO,EAAEC,OAAOM,UAsEA,iBAAhBzB,EAAMgB,OAA4B,uBAAOf,UAAU,oBAAoB9B,KAAK,OAAOmD,KAAK,QAAQC,YAAanB,EAAoBoB,SAjEvH,SAACN,GAChBN,EAAaM,EAAEC,OAAOM,UAiElB,uBAAOxB,UAAU,oBAAoB9B,KAAK,QAAQmD,KAAK,QAAQC,YAAanB,EAAoBoB,SA5DrF,SAACN,GAChBL,EAAaK,EAAEC,OAAOM,UA4DlB,uBAAOxB,UAAU,oBAAoB9B,KAAK,OAAOmD,KAAK,WAAWC,YAAanB,EAAuBoB,SAvDvF,SAACN,GACnBJ,EAAgBI,EAAEC,OAAOM,UAuDrB,sBAAKxB,UAAU,6BAAf,UACmB,iBAAhBD,EAAMgB,OAA4B,wBAAQf,UAAU,yBAAyBC,QAvBjE,SAACgB,GAClBA,EAAEQ,iBA5BJrC,IACChC,MAAK,SAAAC,GAEJ0C,EAAM2B,QAAQrE,MAEfsE,OAAM,SAAAC,GACLA,EAAIrE,OACHH,MAAK,SAAAwE,GAAG,OAAIC,QAAQC,IAAIF,SAuBzB7B,EAAMqB,iBAoBiC,SAAiEjB,IACpG,wBAAQH,UAAU,yBAAyBC,QACzB,iBAAhBF,EAAMgB,MAA2BhB,EAAMgC,cAlBjC,SAACd,GACbA,EAAEQ,iBArBJnC,IACClC,MAAK,SAAAC,GACJwE,QAAQC,IAAIzE,GACZ0C,EAAM2B,QAAQrE,MAEfsE,OAAM,SAAAC,GACLA,EAAIrE,OACHH,MAAK,SAAAwE,GAAG,OAAIC,QAAQC,IAAIF,SAgBzB7B,EAAMqB,iBAcF,SAEGjB,OAEL,cAAC,EAAD,CAAaD,QAASH,EAAMqB,uBClHrB,G,MAAA,IAA0B,kCC6C1BY,EAxCA,SAACjC,GAAU,MAEUO,mBAAS,IAFnB,mBAEjB2B,EAFiB,KAENC,EAFM,KAWlBH,EAAgB,WACpBG,EAAa,UAQf,OACE,wBAAQlC,UAAU,SAAlB,SACE,sBAAKA,UAAU,oBAAf,UACE,oBAAGA,UAAU,eAAemC,KAAK,IAAjC,UACA,qBAAKnC,UAAU,cAAcoC,IAAKC,EAAaC,IAAI,+CADnD,qFAIA,qBAAItC,UAAU,0BAAd,WACKD,EAAMwC,UAAY,oBAAIvC,UAAU,+BAA+BC,QAAS8B,EAAtD,SAAqE,mBAAG/B,UAAU,qBAAqBmC,KAAK,IAAvC,yCACvFpC,EAAMwC,UAAY,oBAAIvC,UAAU,+BAA+BC,QAxBtD,SAACgB,GACnBA,EAAEQ,iBACFS,EAAa,iBAsBc,SAAmE,mBAAGlC,UAAU,sBAAsBmC,KAAK,IAAxC,kFACtFpC,EAAMwC,UAAY,mBAAGvC,UAAU,oBAAb,SAAkCD,EAAMyC,KAAK7E,WAC/DoC,EAAMwC,UAAY,oBAAIvC,UAAU,+BAAd,SAA6C,mBAAGA,UAAU,sBAAsBC,QAASF,EAAM0C,OAAQC,aAAW,wCAEvI3C,EAAMyC,KAAKG,WAAa,uEAAY5C,EAAMyC,KAAKI,YAChD,cAAC,EAAD,CAAW7B,MAAOkB,EAAWC,aAAcA,EAAcH,cAAeA,EAAeX,cAlBvE,WACpBc,EAAa,KAiB4GR,QAAS3B,EAAM2B,gBC5B7HmB,G,MAPA,SAAC9C,GAEd,OACE,wBAAQC,UAAU,SAASC,QAASF,EAAMG,QAA1C,SAAoDH,EAAMuB,gBCPjDwB,EACA,0DADAA,EAEG,0DAFHA,EAGC,kFCHC,G,MAAA,IAA0B,uCCoE1BC,EA3DC,SAAChD,GACf,IAAM6C,EAAW7C,EAAMyC,KAAKI,SACtBI,EAAYjD,EAAMyC,KAAKQ,UACvBC,EAAYlD,EAAMyC,KAAKS,UACvBN,EAAY5C,EAAMyC,KAAKG,UAJJ,EAerBlG,EAAa2D,EATA,CAACwC,WAAUI,YAAWC,YAAWN,cANzB,KASvB5F,SATuB,EAUvBW,iBAVuB,EAWvBE,iBAXuB,EAYvBE,WAZuB,EAavBgB,WAbuB,EAcvBG,WAI8BqB,mBAAS,SAlBhB,mBAkBlB4C,EAlBkB,KAkBRC,EAlBQ,KA6CzB,OACE,0BAASnD,UAAU,OAAnB,UACI,oBAAIA,UAAU,cAAd,gJACA,qBAAKA,UAAU,YAAYoC,IAAKgB,EAAWd,IAAI,8EAC/C,sBAAKtC,UAAU,0BAAf,UACGD,EAAMwC,UAAwB,SAAZW,GAAsB,cAAC,IAAD,CAAMlD,UAAU,gBAAgBqD,GAAG,YAAYpD,QAd9E,WAChBkD,EAAY,UAamC,SAAoEL,IAC5G/C,EAAMwC,UAAwB,UAAZW,GAAuB,cAAC,IAAD,CAAMlD,UAAU,gBAAgBqD,GAAG,IAAIpD,QAXvE,WAChBkD,EAAY,SAUoC,SAA4DL,IACrG/C,EAAMwC,UAAY,cAAC,EAAD,CAAQjB,YAAawB,EAA4B5C,QAASH,EAAMuD,gBACjFvD,EAAMwC,UAAY,mBAAGvC,UAAU,mBAAb,yLCpCfuD,G,MAvBD,WAEZ,OACE,0BAASvD,UAAU,QAAnB,UACI,oBAAIA,UAAU,eAAd,oGACA,qBAAIA,UAAU,cAAd,UACE,qBAAIA,UAAU,cAAd,UACE,oBAAIA,UAAU,oBAAd,eACA,mBAAGA,UAAU,mBAAb,2SAEF,qBAAIA,UAAU,cAAd,UACE,oBAAIA,UAAU,oBAAd,eACA,mBAAGA,UAAU,mBAAb,8JAEF,qBAAIA,UAAU,cAAd,UACE,oBAAIA,UAAU,oBAAd,eACA,mBAAGA,UAAU,mBAAb,4NCCGwD,G,MAjBF,WAEX,OACE,0BAASxD,UAAU,OAAnB,UACE,oBAAIA,UAAU,cAAd,+DACA,oBAAIA,UAAU,iBAAd,2HACA,4BAAYA,UAAU,cAAtB,SAAoC,sBAAMA,UAAU,qBAAhB,SAClC,oBAAGA,UAAU,mBAAb,yJAC8B,uBAD9B,kGAEoB,uBAFpB,0CAGS,uBAHT,qDCKOyD,G,MAZD,SAAC1D,GAEb,OACE,wBAAQC,UAAWgB,IAAG,QAAS,CAC7B,WAAkC,SAApBjB,EAAM2D,UACpB,YAAmC,UAApB3D,EAAM2D,YAEvBzD,QAASF,EAAM4D,iBCVJ,G,MAAA,IAA0B,2CCyB1BC,EApBA,SAAC7D,GACd,IAAMxB,EAASwB,EAAMZ,KAAKZ,OAG1B,OACE,qBAAIyB,UAAU,oBAAd,UACE,qBAAKA,UAAU,gBAAgBoC,IAAKyB,EAAYC,IAAI,gBACpD,oBAAI9D,UAAU,iBAAd,SAAgCD,EAAMZ,KAAKf,cAC3C,mBAAG4B,UAAU,eAAb,SAA6BD,EAAMZ,KAAKX,SAAWuB,EAAMZ,KAAKX,SAAW,2VACzE,mBAAGwB,UAAU,sBAAb,SAAoCD,EAAMZ,KAAKV,cAC/C,qBAAIuB,UAAU,2BAAd,UACE,oBAAIjB,GAAG,IAAIiB,UAAWgB,IAAG,sBAAuB,CAAC,6BAA8BzC,GAAS,MACxF,oBAAIQ,GAAG,IAAIiB,UAAWgB,IAAG,sBAAuB,CAAC,6BAA8BzC,GAAS,MACxF,oBAAIQ,GAAG,IAAIiB,UAAWgB,IAAG,sBAAuB,CAAC,6BAA8BzC,GAAS,MACxF,oBAAIQ,GAAG,IAAIiB,UAAWgB,IAAG,sBAAuB,CAAC,6BAA8BzC,GAAS,aC6CjFwF,G,MAzDC,SAAChE,GAAW,IAAD,EACOO,mBAAS,IADhB,mBAClB0D,EADkB,KACRC,EADQ,OAEqB3D,mBAAS,GAF9B,mBAElB4D,EAFkB,KAEDC,EAFC,KAKnBtH,EAAWkD,EAAMyC,KALE,EAiBrB/F,EAAa2D,EAAiBL,EAAMpD,MAXvB8D,UAWwC5D,EAVtC4D,WAIjB1D,EAXuB,EAWvBA,SAXuB,EAYvBW,iBAZuB,EAavBE,iBAbuB,EAcvBE,WAduB,EAevBgB,WAfuB,EAgBvBG,WAIF6B,qBAAU,WACR/D,IACCK,MAAK,SAAAC,GAAG,OAAI4G,EAAY5G,MACxBsE,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,QACzB,IAYH,OACE,0BAAS5B,UAAU,UAAnB,UACE,oBAAIA,UAAU,iBAAd,kDACA,sBAAKA,UAAU,qBAAf,YACKgE,GAAgC,IAApBA,EAASI,SAAiB,mBAAGpE,UAAU,gBAAb,wFACpB,IAApBgE,EAASI,QAAoC,IAApBF,GAAyB,cAAC,EAAD,CAAOR,UAAW,OAAOC,aAV/D,WACO,IAApBO,GACJC,EAAmBD,EAAkB,MASZ,IAApBF,EAASI,QACR,oBAAIpE,UAAU,gBAAd,SACGgE,EAASK,MAAMH,EAAiBA,EAAkB,GAAGI,KAAI,SAACC,EAAGC,GAC5D,OACE,cAAC,EAAD,CAAkBrF,KAAMoF,GAAXC,QAKA,IAApBR,EAASI,QAAgBF,IAAqBF,EAASI,OAAS,GAAM,cAAC,EAAD,CAAOV,UAAU,QAAQC,aAzBlF,WACdO,IAAqBF,EAASI,OAAS,GAC3CD,EAAmBD,EAAkB,cCvB1BO,G,MATA,WAEb,OACE,wBAAQzE,UAAU,SAAlB,SACE,mBAAGA,UAAU,gBAAb,qICUS0E,G,MAfQ,SAAC,GAA6C,IAA5CrD,EAA2C,EAA3CA,KAAMsD,EAAqC,EAArCA,MAAOC,EAA8B,EAA9BA,WAAYC,EAAkB,EAAlBA,aAIhD,OACE,wBAAQ7E,UAAU,SAASqB,KAAMA,EAAMsD,MAAOA,EAAOpD,SAAUsD,EAA/D,SACGD,EAAWN,KAAI,SAACQ,EAAMN,GACrB,OACE,wBAAkBxE,UAAU,iBAAiBwB,MAAOgD,EAApD,SAA0DM,GAA7CN,UCQRO,G,MAfI,SAAChF,GAElB,OACE,qBAAKC,UAAWgB,IAAG,uBAAwB,CAAC,+BAAgCjB,EAAMQ,aAAlF,SACE,0BAASP,UAAU,cAAnB,UACE,mBAAGA,UAAU,qBAAb,SAAmCD,EAAMiF,QACzC,sBAAKhF,UAAU,8BAAf,UACE,wBAAQA,UAAU,qDAAqDC,QAASF,EAAMkF,WAAtF,0BACA,wBAAQjF,UAAU,oDAAoDC,QAASF,EAAMmF,UAArF,0CCXGC,EACJ,yFADIA,EAED,oDAFCA,EAGE,4GAHFA,EAIM,mMAMNC,EACM,kFAONC,EACA,8CADAA,EAEG,wFAFHA,EAGD,yDAICC,EACD,uCADCA,GAEE,gHAGFC,GACK,oNADLA,GAEI,uRAGJC,GAAmB,CAC9B,yDACA,+DACA,oGACA,iGACA,gHACA,wCAGWC,GAAsB,CACjC,CACE,4JACA,kIACA,gHACA,mIAEF,CACE,6KACA,uPACA,yNACA,sOACA,0NAEF,CACE,kFACA,8HACA,kFACA,4OAEF,CACE,4EACA,8FACA,kFACA,gHACA,mKAEF,CACE,sJACA,kKACA,4JACA,2LAEF,CACE,iKACA,0DACA,2DAISC,GACL,yDADKA,GAEH,6CAFGA,GAGH,yDC8CKC,I,MAzHE,SAAC5F,GAAU,MAEoBO,oBAAS,GAF7B,mBAEnBsF,EAFmB,KAEFC,EAFE,OAGEvF,mBAAS,GAHX,mBAGnBpC,EAHmB,KAGb4H,EAHa,OAIQxF,mBAAS,GAJjB,mBAInBnC,EAJmB,KAIV4H,EAJU,OAKgBzF,mBAAS,GALzB,mBAKnBlC,EALmB,KAKN4H,EALM,KAOpBnJ,EAAWkD,EAAMyC,KAEjB5F,EAAW,CAACsB,OAAMC,UAASC,eAI3B6H,EAAUC,cAbU,EAuBtBzJ,EAAa2D,EAAiBL,EAAMpD,MAAOC,EAAUC,EAbtC4D,WAUjB3C,GApBwB,EAiBxBf,SAjBwB,EAkBxBW,iBAlBwB,EAmBxBE,iBAnBwB,EAoBxBE,YAyBIqI,GA7CoB,EAqBxBrH,WArBwB,EAsBxBG,WAuBgB,WAChB4G,GAAmB,KAgDrB,OACE,qBAAK7F,UAAWgB,IAAG,oBAAqB,CAAC,4BAA6BjB,EAAMQ,aAAcN,QAhCrE,SAACgB,IACrBA,EAAEC,OAAOC,QAAQ,eAAiBgF,KA+BnC,SACE,uBAAMnG,UAAU,YAAhB,UACE,oBAAIA,UAAU,mBAAd,SAAkCmF,IAClC,qBAAInF,UAAU,kBAAd,UACE,qBAAIA,UAAU,uBAAd,UACE,mBAAGA,UAAU,wBAAb,SAAsCmF,IACtC,cAAC,EAAD,CAAgB9D,KAAK,YAAYsD,MAAOW,EAAyBV,WAAYY,GAAkBX,aA1EzF,SAAC5D,GAEf6E,EAAY7E,EAAEC,OAAOM,OACrBuE,EAAe,SAyET,qBAAI/F,UAAU,uBAAd,UACE,mBAAGA,UAAU,wBAAb,SAAsCmF,IACtC,cAAC,EAAD,CAAgB9D,KAAK,eAAesD,MAAOW,GAA4BV,WAAYa,GAAoBvH,GAAO2G,aAvErG,SAAC5D,GAElB8E,EAAe9E,EAAEC,OAAOM,aAuElB,qBAAIxB,UAAU,uBAAd,UACE,mBAAGA,UAAU,wBAAb,SAAsCmF,IACtC,0BAAU9D,KAAK,cAAc+E,KAAK,IAAIpG,UAAU,wBAAwBsB,YAAa8D,EAAsC7D,SArE9G,SAACN,GACtB+E,EAAmB/E,EAAEC,OAAOM,gBAuExB,mBAAGxB,UAAU,wBAAb,wOACA,wBAAQA,UAAU,2BAA2BC,QAjC9B,SAACgB,GAClBA,EAAEQ,iBAZF3D,IACCV,MAAK,SAAAC,GACJwE,QAAQC,IAAIzE,MAEbsE,OAAM,SAAAC,GACLA,EAAIrE,OACHH,MAAK,SAAAwE,GAAG,OAAIC,QAAQC,IAAIF,SAS3BqE,EAAQI,QAAQ,aAChBtG,EAAMuG,aA4BJ,SAAmEZ,KACnE,cAAC,EAAD,CAAaxF,QAASiG,IACtB,cAAC,EAAD,CAAY5F,WAAYqF,EAAiBZ,MAAOO,GAA8BN,WAjExD,SAAChE,GAC3BA,EAAEQ,iBACFoE,GAAmB,GACjB9F,EAAMuG,aA8D2GpB,UA1D1F,SAACjE,GAC1BA,EAAEQ,iBACFoE,GAAmB,aCvEVU,GACJ,0DADIA,GAGA,6GAGAC,GACL,yDADKA,GAEA,6CAFAA,GAGD,yDCTG,OAA0B,sCCkC1BC,I,MA3BA,SAAC1G,GACd,IAAM2G,EAAS3G,EAAM4G,KAAK3H,UAAYe,EAAM4G,KAAKrI,UACjDkI,GACAzG,EAAM4G,KAAK3H,SAAWwH,GACtBA,GAGMI,EADkBnB,GAAoB1F,EAAM4G,KAAKzI,MACnB6B,EAAM4G,KAAKxI,SACzC0I,EAAkB9G,EAAM4G,KAAKG,WAAWzC,MAAM,EAAG,IAEvD,OACE,qBAAIrE,UAAU,gBAAgBjB,GAAIgB,EAAMgH,OAAQ9G,QAASF,EAAMiH,WAA/D,UACE,mBAAGhH,UAAU,0BAAb,qEACA,oBAAIA,UAAU,gBAAd,SAA+B4G,IAC/B,mBAAG5G,UAAU,sBAAb,uFACA,sBAAMA,UAAU,gBAAhB,SAAiC6G,IACjC,mBAAG7G,UAAU,sBAAb,mGACA,sBAAMA,UAAU,uBAAhB,SAAwCD,EAAM4G,KAAKvI,cACnD,sBAAK4B,UAAU,0BAAf,UACE,mBAAGA,UAAU,kBAAb,kDACA,mBAAGA,UAAU,uCAAb,SAAqD0G,OAEvD,qBAAK1G,UAAU,iBAAiBoC,IAAK6E,GAAO3E,IAAI,eCLvC4E,GAxBO,SAACxK,EAAKyK,GAqB1B,MAAO,CAACC,YAnBY,WAClB,OAAOpK,MAAK,UAAKN,EAAL,cAAcyK,EAAd,iBAAsC,CAChDlK,SAAU,SACVC,OAAQ,MACRC,QAAS,CACP,OAAU,mBACV,eAAgB,sBAEnBC,MAAK,SAAAC,GACJ,OAAQA,EAAIC,GAAKD,EAAIE,OAASC,QAAQC,OAAOJ,MAE9CD,MAAK,SAAA+B,GACJ,GAAKA,GAAwB,IAAhBA,EAAKiF,OAClB,OAAoB,IAAhBjF,EAAKiF,OAAsBjF,EAAK,GAAGkI,OAAOC,KACvCnI,EAAKoI,KAAKC,MAAMD,KAAKE,UAAYtI,EAAKiF,OAAS,KAAKiD,OAAOC,QAEnE3F,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,SClBjB8F,GAAc,CACzB,qIACA,CACE,uCACA,mDACA,kCAEF,CACE,uCACA,mDACA,8CAEF,CACE,6CACA,8CAEF,CACE,yDACA,uEClBW,OAA0B,wCCwJ1BC,I,MA5IE,SAAC5H,GAAU,MAEsBO,mBAAS,iBAF/B,mBAEnBsH,EAFmB,KAEDC,EAFC,OAGoBvH,oBAAS,GAH7B,mBAGnBsF,EAHmB,KAGFC,EAHE,OAIgBvF,mBAAS,IAJzB,mBAInBwH,EAJmB,KAIJC,EAJI,OAKEzH,mBAAS,GALX,mBAKnB/B,EALmB,KAKXyJ,EALW,OAMA1H,mBAAS,IANT,mBAMnB2H,EANmB,KAMZC,EANY,KASpBrB,EAAkB9G,EAAMoI,YAAYrB,WAAWzC,MAAM,EAAG,IACxD+D,EAAkB3C,GAAoB1F,EAAMoI,YAAYjK,MACxDtB,EAAWmD,EAAMoI,YAXG,EAmBtB1L,EAAa2D,EAAiBL,EAAMpD,MAAOC,EAAUmD,EAAMyC,KAPhD/B,WAKb3B,EAjBwB,EAiBxBA,WACAG,EAlBwB,EAkBxBA,WAIKmI,EAAeF,GAAc9G,EAAkB0H,GAA/CV,YAGPtG,qBAAU,WACRkH,EAAUjI,EAAMoI,YAAY5J,UAC3B,CAACwB,EAAMoI,cAGVrH,qBAAU,WACR,IAAMuH,EAAcX,GAAYnJ,GAC1B4I,EAAoB,GAAV5I,EAAcmJ,GAAY,GAAMW,EAAYd,KAAKC,MAAMD,KAAKE,UAAYY,EAAYjE,OAAS,KAC7G2D,EAAiBZ,GACjBtF,QAAQC,IAAI,iBAAmBgG,KAC9B,CAACvJ,IAGJuC,qBAAU,WACM,GAAVvC,GACF2J,EAASJ,GAEXV,IACChK,MAAK,SAAA+B,GACJ0C,QAAQC,IAAI,UAAY3C,GACnBA,GACL+I,EAAS/I,MAEX0C,QAAQC,IAAI,WAAamG,KACxB,CAACH,IAGJ,IAyBMQ,EAAe,SAACrH,GAChBA,EAAEC,OAAOnC,IAAMR,EACjByJ,EAAU/G,EAAEC,OAAOnC,GAAK,GACnBiJ,EAAU/G,EAAEC,OAAOnC,KAgC5B,OACE,qBAAKiB,UAAWgB,IAAG,qBAAsB,CAAC,6BAA8BjB,EAAMQ,aAAcN,QAxDvE,SAACgB,GACtBA,EAAEQ,kBACDR,EAAEC,OAAOC,QAAQ,eAAiBpB,EAAMwI,WAsDzC,SACE,0BAASvI,UAAU,YAAnB,UACE,oBAAIA,UAAU,mBAAd,SAAkCoI,EAAgBrI,EAAMoI,YAAYhK,WACpE,mBAAG6B,UAAU,yBAAb,SAAuC6G,IACvC,mBAAG7G,UAAU,yBAAb,SAAuCD,EAAMoI,YAAY/J,cACzD,wBAAQ4B,UAAU,4BAA4BC,QAlE9B,WACpB4H,EAAyC,kBAArBD,EAAuC,YAAmC,cAArBA,EAAmC,OAAS,kBAiEjH,SACuB,kBAArBA,EAAuCvC,EAClB,cAArBuC,EAAmCvC,EAAmCA,IAExE,qBAAIrF,UAAU,8BAAd,UACE,oBAAIjB,GAAG,IAAIiB,UAAWgB,IAAG,yBAA0B,CAAC,gCAAiCzC,GAAU,IAAK0B,QAASqI,IAC7G,oBAAIvJ,GAAG,IAAIiB,UAAWgB,IAAG,yBAA0B,CAAC,gCAAiCzC,GAAU,IAAK0B,QAASqI,IAC7G,oBAAIvJ,GAAG,IAAIiB,UAAWgB,IAAG,yBAA0B,CAAC,gCAAiCzC,GAAU,IAAK0B,QAASqI,IAC7G,oBAAIvJ,GAAG,IAAIiB,UAAWgB,IAAG,yBAA0B,CAAC,gCAA2C,GAAVzC,IAAe0B,QAASqI,OAE/G,sBAAKtI,UAAU,4BAAf,UACE,wBAAQA,UAAU,kDAAkDC,QA9CzD,SAACgB,GAClBA,EAAEQ,iBACF7E,EAAS4B,SAAWyJ,EACpBrL,EAAS2B,OAASA,EACO,kBAArBqJ,GACFhL,EAASoC,UAAW,EACpBpC,EAAS0B,WAAY,GACS,cAArBsJ,GACThL,EAASoC,UAAW,EACpBpC,EAAS0B,WAAY,GACQ,SAArBsJ,IACRhL,EAASoC,UAAW,EACpBpC,EAAS0B,WAAY,GAEvBQ,IACC1B,MAAK,SAAAC,GAAG,OAAIwE,QAAQC,IAAIzE,MACxBsE,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,MAC1B7B,EAAMwI,WA6BA,SAA0F7C,KAC1F,wBAAQ1F,UAAU,oDAAoDC,QAnE5D,WAChB4F,GAAmB,IAkEb,SAA4FH,QAE9F,cAAC,EAAD,CAAaxF,QAASH,EAAMwI,UAC5B,cAAC,EAAD,CAAYhI,WAAYqF,EAAiBZ,MAAOO,GAA+BN,WA9BlE,SAAChE,GAClBA,EAAEQ,iBACFxC,IACC7B,MAAK,SAAAC,GAAG,OAAIwE,QAAQC,IAAIzE,MACxBsE,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,MAC1BiE,GAAmB,GACnB9F,EAAMwI,WAwBqGrD,UAjE1F,SAACjE,GAClBA,EAAEQ,iBACFoE,GAAmB,MAgEf,qBAAK7F,UAAU,mBAAmBoC,IAAKoG,GAAYlG,IAAI,2BCpFhDmG,I,MAtDC,SAAC1I,GAAW,IAAD,EACOO,mBAAS,IADhB,mBAClBoI,EADkB,KACRC,EADQ,OAEerI,oBAAS,GAFxB,mBAElBsI,EAFkB,KAEJC,EAFI,OAGSvI,mBAAS,IAHlB,mBAGlB6H,EAHkB,KAGLW,EAHK,KASlBpL,EAAoBjB,EAAa2D,EAAiBL,EAAMpD,MAH9C8D,UAG+DV,EAAMyC,KAFvE/B,WAER/C,iBAEPoD,qBAAU,YACPf,EAAMpD,QAAUoD,EAAMyC,KAAK7E,UAAYgL,EAAY,IACpDjL,IACCN,MAAK,SAAAC,GACJsL,EAAYtL,MAEdwE,QAAQC,IAAI,SACX,IAEH,IAAMiH,EAAe,SAAC9H,GACpBY,QAAQC,IAAIb,EAAEC,OAAOnC,IACrB+J,EAAWJ,EAASzH,EAAEC,OAAOnC,KAC7B8J,GAAgB,IASlB,OACE,0BAAS7I,UAAU,UAAnB,UACE,qBAAKA,UAAU,qBAAf,SACE,oBAAIA,UAAU,iBAAd,SAAgCuG,OAElC,oBAAIvG,UAAU,gBAAd,SACuB,IAApB0I,EAAStE,OACR,mBAAGpE,UAAU,sBAAb,SAAoCuG,KACpCmC,EAASpE,KAAI,SAACQ,EAAMN,GAClB,OACE,cAAC,GAAD,CAAkBuC,OAAQvC,EAAKwC,WAAY+B,EAAcpC,KAAM7B,GAAlDN,QAKG,IAAvB2D,EAAY/D,QACX,cAAC,GAAD,CAAU7D,WAAYqI,EAAcT,YAAaA,EAAaI,QArB/C,WACnBM,GAAgB,IAoByElM,MAAOoD,EAAMpD,MAAO6F,KAAMzC,EAAMyC,Y,kBC5C9GwG,GAVQ,SAAC,GAAsC,IAA1BC,EAAyB,EAApCC,UAAyBnJ,EAAW,8BAC3D,OACE,cAAC,IAAD,UAEI,kBAAMA,EAAMwC,SAAW,cAAC0G,EAAD,gBAAelJ,IAAY,cAAC,IAAD,CAAUsD,GAAG,W,MCoHxD8F,OAtGf,WAAe,MAEmB7I,oBAAS,GAF5B,mBAEN8I,EAFM,KAEIC,EAFJ,OAIW/I,mBAAS,CAC/BvB,QAAI0B,EACJ9C,cAAU8C,EACV9B,eAAW8B,EACX5B,WAAO4B,IARI,mBAIN+B,EAJM,KAIAd,EAJA,OAUmBpB,oBAAS,GAV5B,mBAUNiC,EAVM,KAUI+G,EAVJ,OAWyBhJ,wBAASG,GAXlC,mBAcP9D,GAdO,UAcCqB,KAAKuL,MAAMC,aAAaC,QAAQ,SAdjC,EA0BThN,EAAc2D,EAAiBzD,EAXlB8D,UAWmC+B,EAVrC/B,WA6BTiJ,GA7CO,EAoBX3M,SApBW,EAqBXW,iBArBW,EAsBXE,iBAtBW,EAuBXE,WAvBW,EAwBXgB,WAxBW,EAyBXG,WAoBoB,WACpBoK,GAAY,KA4Bd,OAFAxH,QAAQC,IAAI0H,aAAaC,QAAQ,QAG/B,sBAAKzJ,UAAU,MAAf,UACE,cAAC,EAAD,CAAQ0B,QA1BW,SAACrE,GACtBmM,aAAaG,QAAQ,MAAO3L,KAAKC,UAAUZ,EAAIuM,MAC/ClI,EAAQ,CACN3C,GAAI1B,EAAImF,KAAKzD,GACbpB,SAAUN,EAAImF,KAAK7E,SACnBgB,UAAWtB,EAAImF,KAAK7D,UACpBE,MAAOxB,EAAImF,KAAK3D,QAElByK,GAAY,IAkBuB9G,KAAMA,EAAMD,SAAUA,EAAUE,OAftD,SAACpF,GACdmM,aAAaK,WAAW,OACxBnI,EAAQ,CACN3C,QAAI0B,EACJ9C,cAAU8C,EACV9B,eAAW8B,EACX5B,WAAO4B,IAET6I,GAAY,MAQV,cAAC,EAAD,CAAMhG,aArCY,WACpB+F,GAAY,IAoCyBS,aAAcJ,EAAelH,KAAMA,EAAMD,SAAUA,IACtF,eAAC,IAAD,WACE,eAAC,IAAD,CAAOwH,OAAK,EAACC,KAAK,IAAlB,UACE,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,OAEF,cAAC,GAAD,CAAgBA,KAAK,YACnBzH,SAAUA,EACV2G,UAAWT,GAGXjG,KAAMA,EACN7F,MAAOA,OAKX,cAAC,EAAD,IACA,cAAC,GAAD,CAAU4D,WAAY6I,EAAU9C,UAAWoD,EAAelH,KAAMA,EAAM7F,MAAOA,QCxGpEsN,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB/M,MAAK,YAAkD,IAA/CgN,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,UACE,cAAC,GAAD,QAGJC,SAASC,eAAe,SAM1BZ,Q","file":"static/js/main.72855933.chunk.js","sourcesContent":["// import React from 'react';\r\n\r\nconst useTaskFetch = (url, token, workData, userData, workerData) => {\r\n  // getting all tasks\r\n  const tasksGet = () => {\r\n    return fetch(`${url}tasks`, {\r\n      redirect: 'follow',\r\n      method: 'GET',\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json',\r\n        // 'Authorization': `Bearer ${token}`,\r\n    }})\r\n    .then((res) => {\r\n      return (res.ok ? res.json() : Promise.reject(res));\r\n    })\r\n  }\r\n  \r\n  // get client's tasks\r\n  const tasksGetByClient = () => {\r\n    return fetch(`${url}tasks?client_name=${userData.username}`, {\r\n      redirect: 'follow',\r\n      method: 'GET',\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json',\r\n        'Authorization': `Bearer ${token}`,\r\n    }})\r\n    .then((res) => {\r\n      return (res.ok ? res.json() : Promise.reject(res));\r\n    })\r\n  }\r\n\r\n    // get worker's tasks\r\n    const tasksGetByWorker = () => {\r\n      return fetch(`${url}tasks?client_name=${workerData.worker_name}`, {\r\n        redirect: 'follow',\r\n        method: 'GET',\r\n        headers: {\r\n          'Accept': 'application/json',\r\n          'Content-Type': 'application/json',\r\n          'Authorization': `Bearer ${token}`,\r\n      }})\r\n      .then((res) => {\r\n        return (res.ok ? res.json() : Promise.reject(res));\r\n      })\r\n    }\r\n\r\n    // task create\r\n    const taskCreate = () => {\r\n      return fetch(`${url}tasks`, {\r\n        redirect: 'follow',\r\n        method: 'POST',\r\n        headers: {\r\n          'Accept': 'application/json',\r\n          'Content-Type': 'application/json',\r\n          'Authorization': `Bearer ${token}`,\r\n        },\r\n        body: JSON.stringify({\r\n          type: `${workData.type}`,\r\n          subtype: `${workData.subtype}`,\r\n          description: `${workData.description}`,\r\n          aссepted: false,\r\n          completed: false,\r\n          rating: '0',\r\n          feedback: null,\r\n          // unlock to use worker data\r\n          // worker_name: null,\r\n          // worker_phone: null,\r\n          // worker_email: null,\r\n          client_name: `${userData.username}`,\r\n          client_phone: `${userData.userphone}`,\r\n          client_email: `${userData.email}`,\r\n        })\r\n      })\r\n      .then((res) => {\r\n       return (res.ok ? res.json() : Promise.reject(res));\r\n      })\r\n    }\r\n\r\n        // task update\r\n        const taskUpdate = () => {\r\n          return fetch(`${url}tasks/${workData.id}`, {\r\n            redirect: 'follow',\r\n            method: 'PUT',\r\n            headers: {\r\n              'Accept': 'application/json',\r\n              'Content-Type': 'application/json',\r\n              'Authorization': `Bearer ${token}`,\r\n            },\r\n            body: JSON.stringify({\r\n              type: `${workData.type}`,\r\n              subtype: `${workData.subtype}`,\r\n              description: `${workData.description}`,\r\n              accepted: `${workData.accepted}`,\r\n              completed: `${workData.completed}`,\r\n              rating: `${workData.rating}`,\r\n              feedback: `${workData.feedback}`,\r\n              // worker_name: `${workerData.DataName}`,\r\n              // worker_phone: `${workerData.workDataerPhone}`,\r\n              // worker_email: `${workerData.workerEmDataail}`,\r\n              // client_name: `${userData.userName}`,\r\n              // client_phone: `${userData.userPhone}`,\r\n              // client_email: `${userData.userEmail}`,\r\n            })\r\n          })\r\n          .then((res) => {\r\n           return (res.ok ? res.json() : Promise.reject(res));\r\n          })\r\n        }\r\n\r\n    // delete user\r\n    const taskDelete = () => {\r\n      return fetch(`${url}tasks/${workData.id}`, {\r\n        redirect: 'follow',\r\n        method: 'DELETE',\r\n        headers: {\r\n          'Accept': 'application/json',\r\n          'Content-Type': 'application/json',\r\n          'Authorization': `Bearer ${token}`,\r\n      }})\r\n      .then((res) => {\r\n        return (res.ok ? res.json() : Promise.reject(res));\r\n      })\r\n    }  \r\n\r\n  return {\r\n    tasksGet,\r\n    tasksGetByClient,\r\n    tasksGetByWorker,\r\n    taskCreate,\r\n    taskUpdate,\r\n    taskDelete\r\n  }\r\n}\r\n\r\nexport default useTaskFetch;","// import React from 'react';\r\n\r\nconst useUserFetch = (url, data) => {\r\n  // user authorization\r\n  const userAuth = () => {\r\n    return fetch(`${url}auth/local/register`, {\r\n      redirect: 'follow',\r\n      method: 'POST',\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify({\r\n        username: `${data.username}`,\r\n        email: `${data.email}`,\r\n        password: `${data.password}`,\r\n        userphone: `${data.userphone}`,\r\n        // permission: `${data.permission}`\r\n      })\r\n    })\r\n    .then((res) => {\r\n     return (res.ok ? res.json() : Promise.reject(res));\r\n    })\r\n  }\r\n\r\n  // user login\r\n  const userLogin = () => {\r\n    return fetch(`${url}auth/local`, {\r\n      redirect: 'follow',\r\n      method: 'POST',\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify({\r\n        identifier: `${data.email}`,\r\n        password: `${data.password}`\r\n      }) \r\n    })\r\n    .then((res) => {\r\n      return (res.ok ? res.json() : Promise.reject(res));\r\n     })\r\n  }\r\n\r\n  // getting all users\r\n  const usersGet = () => {\r\n    return fetch(`${url}users`, {\r\n      redirect: 'follow',\r\n      method: 'GET',\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json',\r\n    }})\r\n    .then((res) => {\r\n      return (res.ok ? res.json() : Promise.reject(res));\r\n    })\r\n  }\r\n  \r\n  // get one user\r\n  const userGet = () => {\r\n    return fetch(`${url}users/${data.userId}`, {\r\n      redirect: 'follow',\r\n      method: 'GET',\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json',\r\n    }})\r\n    .then((res) => {\r\n      return (res.ok ? res.json() : Promise.reject(res));\r\n    })\r\n  }\r\n\r\n    // user update\r\n    const userUpdate = () => {\r\n      return fetch(`${url}users/:id`, {\r\n        redirect: 'follow',\r\n        method: 'PUT',\r\n        headers: {\r\n          'Accept': 'application/json',\r\n          'Content-Type': 'application/json',\r\n          'Authorization': `Bearer ${data.token}`\r\n        },\r\n        body: JSON.stringify({\r\n          username: `${data.username}`,\r\n          email: `${data.email}`,\r\n          password: `${data.password}`,\r\n          userphone: `${data.userphone}`,\r\n          permission: `${data.permission}`\r\n        })\r\n      })\r\n      .then((res) => {\r\n       return (res.ok ? res.json() : Promise.reject(res));\r\n      })\r\n    }\r\n\r\n    // delete user\r\n    const userDelete = () => {\r\n      return fetch(`${url}users/:id`, {\r\n        redirect: 'follow',\r\n        method: 'DELETE',\r\n        headers: {\r\n          'Accept': 'application/json',\r\n          'Content-Type': 'application/json',\r\n          'Authorization': `Bearer ${data.token}`\r\n      }})\r\n      .then((res) => {\r\n        return (res.ok ? res.json() : Promise.reject(res));\r\n      })\r\n    }  \r\n\r\n  return {\r\n      userAuth, \r\n      userLogin,\r\n      usersGet,\r\n      userGet,\r\n      userUpdate,\r\n      userDelete\r\n  }\r\n}\r\n\r\nexport default useUserFetch;","import './CloseButton.css';\r\n\r\nconst CloseButton = (props) => {\r\n  return (\r\n    <button className='close-button' onClick={props.onPress} />\r\n  )\r\n}\r\n\r\nexport default CloseButton;","export const regPopupData = {\r\n  regTitle: 'Зарегистрироваться',\r\n  loginTitle: 'Войти',\r\n  name: 'Введите свое имя',\r\n  phone: 'Запишите свой телефон',\r\n  email: 'Вспомните свой email',\r\n  password: 'Придумайте пароль',\r\n  regButton: 'Зарегистрироваться',\r\n  loginButton: 'Войти'\r\n}\r\n","export const urlData = {\r\n  local: 'http://localhost:1337/',\r\n  network: 'https://profi-2025-api.ew.r.appspot.com/',\r\n  quoteUrl: 'http://www.buymebuyme.xyz/'\r\n}","import {useState, useEffect} from 'react';\r\nimport cn from 'classnames';\r\nimport useUserFetch from '../../hooks/useUserFetch';\r\nimport CloseButton from '../CloseButton/CloseButton';\r\nimport {regPopupData} from '../../constants/userPopupData';\r\nimport {urlData} from '../../constants/urlData';\r\nimport './UserPopup.css';\r\n\r\nconst UserPopup = (props) => {\r\n  const [visibility, setVisibility] = useState(false);\r\n  const [username,  setUserName] = useState(undefined);\r\n  const [userphone,  setUserPhone] = useState(undefined);\r\n  const [email,  setUserEmail] = useState(undefined);\r\n  const [password,  setUserPassword] = useState(undefined);\r\n\r\n  const userData = {username, userphone, email, password};\r\n  // console.log(userData);\r\n\r\n  const {\r\n    userAuth, \r\n    userLogin,\r\n  } = useUserFetch(urlData.network, userData);\r\n\r\n  // popup open\r\n  useEffect(() => {\r\n    props.state !== '' ? setVisibility(true) : setVisibility(false);\r\n  }, [props.state])\r\n\r\n  // popup close by click on wrapper\r\n  const closeByWrapper = (e) => {\r\n    !e.target.closest('.user-popup') && props.clearRegState();\r\n  }\r\n\r\n  // setting user name\r\n  const setName = (e) => {\r\n    setUserName(e.target.value);\r\n    // console.log(e.target.value);\r\n  }\r\n\r\n  // setting user phone\r\n  const setPhone = (e) => {\r\n    setUserPhone(e.target.value);\r\n    // console.log(e.target.value);\r\n  }\r\n\r\n  // setting user email\r\n  const setEmail = (e) => {\r\n    setUserEmail(e.target.value);\r\n    // console.log(e.target.value);\r\n  }\r\n\r\n  // setting user password\r\n  const setPassword = (e) => {\r\n    setUserPassword(e.target.value);\r\n    // console.log(e.target.value);\r\n  }\r\n\r\n  // create new user\r\n  const createUser = () => {\r\n    userAuth()\r\n    .then(res => {\r\n      // console.log(res);\r\n      props.setUser(res);\r\n    })\r\n    .catch(err => {\r\n      err.json()\r\n      .then(err => console.log(err));\r\n    })\r\n\r\n  }\r\n\r\n  // create new user\r\n  const loginUser = () => {\r\n    userLogin()\r\n    .then(res => {\r\n      console.log(res);\r\n      props.setUser(res);\r\n    })\r\n    .catch(err => {\r\n      err.json()\r\n      .then(err => console.log(err));\r\n    })\r\n\r\n  }\r\n\r\n    // start registration\r\n    const registrate = (e) => {\r\n      e.preventDefault();\r\n      createUser(); \r\n      props.clearRegState();\r\n    }\r\n  \r\n    // start login\r\n    const login = (e) => {\r\n      e.preventDefault();\r\n      loginUser(); \r\n      props.clearRegState();\r\n    }\r\n\r\n\r\n  return (\r\n    <div className={cn('user-popup__wrapper', {'user-popup__wrapper_visible': visibility})} onClick={closeByWrapper }>\r\n      <form className='user-popup'>\r\n        <h2 className='user-popup__title'>{props.state === 'registration' ? regPopupData.regTitle :regPopupData.loginTitle}</h2>\r\n        {props.state === 'registration' && <input className='user-popup__input' type='text' name='name' placeholder={regPopupData.name} onChange={setName}></input>}\r\n        {props.state === 'registration' && <input className='user-popup__input' type='text' name='phone' placeholder={regPopupData.phone} onChange={setPhone}></input>}\r\n        <input className='user-popup__input' type='email' name='email' placeholder={regPopupData.email} onChange={setEmail}></input>\r\n        <input className='user-popup__input' type='text' name='password' placeholder={regPopupData.password} onChange={setPassword}></input>\r\n        <div className='user-popup__button-wrapper'>\r\n          {props.state === 'registration' && <button className='user-popup__reg-button' onClick={registrate}>{regPopupData.regButton}</button>}\r\n          <button className='user-popup__reg-button' onClick = {\r\n            props.state === 'registration' ? props.setLoginState : login\r\n          }>{regPopupData.loginButton}</button>\r\n        </div>\r\n        <CloseButton onPress={props.clearRegState} />\r\n      </form>\r\n    </div>\r\n\r\n  )\r\n}\r\n\r\nexport default UserPopup;\r\n","export default __webpack_public_path__ + \"static/media/logo.507c0c8a.svg\";","import {useState} from 'react';\r\nimport UserPopup from '../UserPopup/UserPopup';\r\nimport './Header.css';\r\nimport Header__img from '../../images/logo.svg';\r\n\r\nconst Header = (props) => {\r\n  // collecting states\r\n  const [userState, setUserState] = useState('');\r\n\r\n  // set reg state\r\n  const setRegState = (e) => {\r\n    e.preventDefault();\r\n    setUserState('registration');\r\n  }\r\n\r\n  // set reg state\r\n  const setLoginState = () => {\r\n    setUserState('login');\r\n  }\r\n\r\n  // clear reg state\r\n  const clearRegState = () => {\r\n    setUserState('');\r\n  }\r\n\r\n  return (\r\n    <header className='header'>\r\n      <div className='header__container'>\r\n        <a className='header__link' href='#'>\r\n        <img className='header__img' src={Header__img} alt='Логотип' />\r\n        Гражданин поэт\r\n        </a>\r\n        <ul className='header__user-navigation'>\r\n          { !props.loggedIn && <li className='header__user-navigation-item' onClick={setLoginState}><a className='header__login-link' href='#'>Вход</a></li>}\r\n          { !props.loggedIn && <li className='header__user-navigation-item' onClick={setRegState}><a className='header__signin-link' href='#'>Регистрация</a></li>}\r\n          { props.loggedIn && <p className='header__user-data'>{props.user.username}</p>}\r\n          { props.loggedIn && <li className='header__user-navigation-item'><a className='header__logout-link' onClick={props.logout} aria-label='Выход'></a></li>}\r\n        </ul>\r\n        {props.user.userToken && <p>Привет, {props.user.userName}</p>}\r\n        <UserPopup state={userState} setUserState={setUserState} setLoginState={setLoginState} clearRegState={clearRegState} setUser={props.setUser}/>\r\n      </div>\r\n    </header>\r\n  )\r\n}\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport './Button.css';\r\n\r\n\r\nconst Button = (props) => {\r\n\r\n  return (\r\n    <button className='button' onClick={props.onPress}>{props.placeholder}</button>\r\n  )\r\n}\r\n\r\nexport default Button;\r\n","export const mainButtonsData = {\r\n  showTasks: 'Мои заявки',\r\n  showMainPage: 'На главную',\r\n  createTask: 'Создать заявку'\r\n}","export default __webpack_public_path__ + \"static/media/main__bgi.29824270.jpg\";","import {useState, useEffect} from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport useTaskFetch from '../../hooks/useTaskFetch';\r\nimport Button from '../Button/Button';\r\nimport {mainButtonsData} from '../../constants/mainButtonsData';\r\nimport {urlData} from '../../constants/urlData';\r\nimport './Main.css';\r\nimport Main__img from '../../images/main__bgi.jpg';\r\n\r\nconst Buttons = (props) => {\r\n  const userName = props.user.userName;\r\n  const userPhone = props.user.userPhone;\r\n  const userEmail = props.user.userEmail;\r\n  const userToken = props.user.userToken;\r\n\r\n  const userData = {userName, userPhone, userEmail, userToken};\r\n\r\n  const {\r\n    tasksGet,\r\n    tasksGetByClient,\r\n    tasksGetByWorker,\r\n    taskCreate,\r\n    taskUpdate,\r\n    taskDelete\r\n  } = useTaskFetch(urlData.local, userData);\r\n\r\n  // state of link status and page appearance\r\n  const [pageMode, setPageMode] = useState('main');\r\n\r\n  // set page mode\r\n  // useEffect(() => {\r\n  //   props.loggedIn && setPageMode('main')\r\n  // }, [props.loggedIn])\r\n\r\n  // const getClientTasks = () => {\r\n  //   tasksGetByClient()\r\n  //   .then((res) => {\r\n  //     props.setTasks(res);\r\n  //   })\r\n  //   .catch(err => {\r\n  //     err.json()\r\n  //     .then(err => console.log(err));\r\n  //   })\r\n  // }\r\n\r\n  const showTasks = () => {\r\n    setPageMode('tasks');\r\n  }\r\n\r\n  const hideTasks = () => {\r\n    setPageMode('main');\r\n  }\r\n\r\n\r\n  return (\r\n    <section className='main'>\r\n        <h1 className='main__title'>Гражданин, найди мастера!</h1>\r\n        <img className='main__img' src={Main__img} alt='Найти мастера' />\r\n        <div className='main__buttons-container'>\r\n          {props.loggedIn && pageMode ==='main' && <Link className='main__navlink' to='/my-tasks' onClick={showTasks}>{mainButtonsData.showTasks}</Link>}\r\n          {props.loggedIn && pageMode ==='tasks' && <Link className='main__navlink' to='/' onClick={hideTasks}>{mainButtonsData.showMainPage}</Link>}\r\n          {props.loggedIn && <Button placeholder={mainButtonsData.createTask} onPress={props.showTaskForm}/>}\r\n          {!props.loggedIn && <p className='main__login-note'>Войдите или зарегистрируйтесь</p>}\r\n        </div>\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default Buttons;\r\n","import React from 'react';\r\nimport './About.css';\r\n\r\nconst About = () => {\r\n\r\n  return (\r\n    <section className='about'>\r\n        <h2 className='about__title'>Как это работает</h2>\r\n        <ol className='about__info'>\r\n          <li className='about__item'>\r\n            <h3 className='about__item-title'>1</h3>\r\n            <p className='about__item-text'>Зарегистрируйтесь и оформите заявку на нужную работу</p>\r\n          </li>\r\n          <li className='about__item'>\r\n            <h3 className='about__item-title'>2</h3>\r\n            <p className='about__item-text'>Дождитесь связи с мастером</p>\r\n          </li>\r\n          <li className='about__item'>\r\n            <h3 className='about__item-title'>3</h3>\r\n            <p className='about__item-text'>Оцените выполненную мастером работу</p>\r\n          </li>\r\n        </ol>\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default About;\r\n","import {React} from 'react';\r\nimport './Poem.css';\r\n\r\nconst Poem = () => {\r\n\r\n  return (\r\n    <section className='poem'>\r\n      <h2 className='poem__title'>Стихи дня</h2>\r\n      <h3 className='poem__subtitle'>Владимир Маяковский</h3>\r\n      <blockquote className='poem__quote'><span className='poem__quote-quotes'>\r\n        <p className='poem__quote-text'>\r\n        Чувства в кулак, волю в узду!,<br />\r\n        Рабочий, работай!, —<br />\r\n        Не охай!,<br />\r\n        Не ахай!</p></span>\r\n      </blockquote>\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default Poem;\r\n","import cn from 'classnames';\r\nimport './Arrow.css';\r\n\r\nconst Arrow = (props) => {\r\n\r\n  return (\r\n    <button className={cn('arrow', {\r\n      'arrow_left': props.direction === 'left',\r\n      'arrow_right': props.direction === 'right',\r\n    })} \r\n    onClick={props.onArrowClick}\r\n    />\r\n  )\r\n}\r\n\r\nexport default Arrow;","export default __webpack_public_path__ + \"static/media/review-avatar.02c8b300.jpg\";","import {useState} from 'react';\r\nimport cn from 'classnames';\r\nimport './Review.css'\r\nimport avatarPath from '../../../images/review-avatar.jpg';\r\n\r\nconst Review = (props) => {\r\n  const rating = props.data.rating;\r\n\r\n\r\n  return (\r\n    <li className='review__container'>\r\n      <img className='review__image' src={avatarPath} ali='avatar-path' />\r\n      <h2 className='review__header'>{props.data.description}</h2>\r\n      <p className='review__text'>{props.data.feedback ? props.data.feedback : 'Пока нет отзыва, но скоро он точно появится, вот тогда мы и попляшем :-)'}</p>\r\n      <p className='review__text-writer'>{props.data.client_name}</p>\r\n      <ul className='review__rating-container'>\r\n        <li id='1' className={cn('review__rating-item', {'review__rating-item_active': rating >=1})} />\r\n        <li id='1' className={cn('review__rating-item', {'review__rating-item_active': rating >=2})} />\r\n        <li id='1' className={cn('review__rating-item', {'review__rating-item_active': rating >=3})} />\r\n        <li id='1' className={cn('review__rating-item', {'review__rating-item_active': rating >=4})} />\r\n      </ul>\r\n    </li>\r\n  )\r\n}\r\n\r\nexport default Review;\r\n","import {useState, useEffect} from 'react';\r\nimport Arrow from './Arrow/Arrow';\r\nimport Review from './Review/Review';\r\nimport useTaskFetch from '../../hooks/useTaskFetch';\r\nimport {urlData} from '../../constants/urlData';\r\nimport './Reviews.css';\r\n\r\nconst Reviews = (props) => {\r\n  const [dataList, setDataList] = useState([]);\r\n  const [dataSearcnValue, setDataSearchValue] = useState(0);\r\n\r\n  // constants\r\n  const userData = props.user;\r\n  const workData = undefined;\r\n  const workerData = undefined;\r\n\r\n  // hooks\r\n  const {\r\n    tasksGet,\r\n    tasksGetByClient,\r\n    tasksGetByWorker,\r\n    taskCreate,\r\n    taskUpdate,\r\n    taskDelete\r\n  } = useTaskFetch(urlData.network, props.token, workData, userData, workerData)\r\n\r\n  // collect reviews\r\n  useEffect(() => {\r\n    tasksGet()\r\n    .then(res => setDataList(res))\r\n    .catch(err => console.log(err));\r\n  }, [])\r\n\r\n  const searchRight = () => {\r\n    if (dataSearcnValue === (dataList.length - 2)) return;\r\n    setDataSearchValue(dataSearcnValue + 1);\r\n  }\r\n\r\n  const searchLeft = () => {\r\n    if (dataSearcnValue === 0) return;\r\n    setDataSearchValue(dataSearcnValue - 1);\r\n  }\r\n\r\n  return (\r\n    <section className='reviews'>\r\n      <h2 className='reviews__title'>Отзывы</h2>\r\n      <div className='reviews__container'>\r\n        {(!dataList || dataList.length === 0) && <p className='reviews__note'>Пока нет ревью</p>}\r\n        {dataList.length !== 0 && dataSearcnValue !== 0 && <Arrow direction= 'left' onArrowClick={searchLeft} />}\r\n        {dataList.length !== 0 &&\r\n          <ul className='reviews__list'>\r\n            {dataList.slice(dataSearcnValue, dataSearcnValue + 2).map((i, num) => {\r\n              return (\r\n                <Review key={num} data={i} />\r\n              )\r\n            } )}\r\n          </ul>\r\n        }\r\n        {dataList.length !== 0 && dataSearcnValue !== (dataList.length - 2) && <Arrow direction='right' onArrowClick={searchRight} />}\r\n      </div>\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default Reviews;\r\n","import React from 'react';\r\nimport './Footer.css';\r\n\r\nconst Footer = () => {\r\n\r\n  return (\r\n    <footer className='footer'>\r\n      <p className='footer__title'>ООО “Гражданин Поэт” 2025</p>\r\n    </footer>\r\n  )\r\n}\r\n\r\nexport default Footer;\r\n","import './TaskFormSelect.css'\r\n\r\nconst TaskFormSelect = ({name, label, optionList, selectOption}) => {\r\n\r\n  // console.log('optionlist - '+optionList)\r\n\r\n  return (\r\n    <select className='select' name={name} label={label} onChange={selectOption}>\r\n      {optionList.map((item, num) => {\r\n        return (\r\n          <option key={num} className='select__option' value={num}>{item}</option>\r\n        )\r\n      })}\r\n    </select>\r\n  )\r\n}\r\n\r\nexport default TaskFormSelect;","import cn from 'classnames';\r\nimport './AlertPopup.css';\r\n\r\nconst AlertPopup = (props) => {\r\n\r\n  return (\r\n    <div className={cn('alert-popup__wrapper', {'alert-popup__wrapper_visible': props.visibility})}>\r\n      <section className='alert-popup'>\r\n        <p className='alert-popup__title'>{props.title}</p>\r\n        <div className='alert-popup__button-wrapper'>\r\n          <button className='alert-popup__button alert-popup__button_yes-button' onClick={props.onYesClick}>Да</button>\r\n          <button className='alert-popup__button alert-popup__button_no-button' onClick={props.onNoClick}>Нет</button>\r\n        </div>\r\n      </section>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AlertPopup;","export const taskFormData = {\r\n  title: 'Заявка на ремонт',\r\n  workType: 'Мне нужно',\r\n  workSubtype: 'Подробнее, что нужно',\r\n  workDescription: 'В нескольких словах, что именно нужно',\r\n  name: 'Имя заявителя',\r\n  phone: 'Телефон заявителя',\r\n  email: 'e-mail заявителя'\r\n}\r\n\r\nexport const taskFormPlaceholders = {\r\n  workDescription: 'Опишите работу',\r\n  clientName: 'Введите свое имя',\r\n  clientPhone: 'Введите телефон',\r\n  clientEmail: 'Введите email',\r\n  clientFeedback: 'Оставьте отзыв после выполнения работы'\r\n}\r\n\r\nexport const taskButtonPlaceholders = {\r\n  confirmed: 'В работе',\r\n  notConfirmed: 'Ожидает мастера',\r\n  finished: 'Выполнена',\r\n  notFinished: 'Не выполнена'\r\n}\r\n\r\nexport const taskFormLabels = {\r\n  workType: 'Услуга',\r\n  workSubtype: 'Подкатегория услуги',\r\n}\r\n\r\nexport const alertPopupData = {\r\n  dataCardDelete: 'Вы действительно хотите удалить заявку?',\r\n  dataFormClose: 'Вы действительно хотите отменить оформление заявки?'\r\n}\r\n\r\nexport const taskFormTypeList = [\r\n  'Электрика',\r\n  'Сантехника',\r\n  'Отделочные работы',\r\n  'Мебель, двери, окна',\r\n  'Компьютерная помощь',\r\n  'Уборка',\r\n]\r\n\r\nexport const taskFormSubtypeList = [\r\n  [\r\n    'Установка или замена розеток',\r\n    'Ремонт электропроводки',\r\n    'Замена оборудования',\r\n    'Ремонт электроприборов'\r\n  ],\r\n  [\r\n    'Ремонт сантехнических приборов',\r\n    'Установка или замена сантехнических приборов',\r\n    'Устранение засоров и прочистка фильтров',\r\n    'Ремонт или замена трубопроводов и арматуры',\r\n    'Ремонт или замена отопительных приборов'\r\n  ],\r\n  [\r\n    'Поклейка обоев',\r\n    'Покраска стен и потолка',\r\n    'Укладка плитки',\r\n    'Комплексная подготовка и отделка помещений'\r\n  ],\r\n  [\r\n    'Сборка мебели',\r\n    'Установка дверей',\r\n    'Установка окон',\r\n    'Остекление балконов',\r\n    'Навешивание полок и фурнитуры'\r\n  ],\r\n  [\r\n    'Помощь в покупке компьютера',\r\n    'Установка и удаление программ',\r\n    'Ремонт и замена оборудования',\r\n    'Подключение и настройка интернета'\r\n  ],\r\n  [\r\n    'Комплексная уборка помещения',\r\n    'Мытье окон',\r\n    'Прачечная'\r\n  ],\r\n]\r\n\r\nexport const buttonData = {\r\n  save: 'Сохранить',\r\n  delete: 'Удалить',\r\n  submit: 'Отправить'\r\n}\r\n","import {useState, useEffect} from 'react';\r\nimport {useHistory} from 'react-router-dom';\r\nimport cn from 'classnames';\r\nimport TaskFormSelect from './TaskFormSelect/TaskFormSelect';\r\nimport CloseButton from '../CloseButton/CloseButton';\r\nimport AlertPopup from '../AlertPopup/AlertPopup';\r\nimport useTaskFetch from '../../hooks/useTaskFetch';\r\nimport {taskFormData, alertPopupData, taskFormPlaceholders,  taskFormLabels, taskFormTypeList, taskFormSubtypeList, buttonData} from '../../constants/formData';\r\nimport {urlData} from '../../constants/urlData';\r\n\r\nimport './TaskForm.css';\r\n\r\nconst TaskForm = (props) => {\r\n  // select states\r\n  const [alertVisibility, SetAlertVisibility] = useState(false);\r\n  const [type, setWorkType] = useState(0);\r\n  const [subtype, setWorkSubtype] = useState(0);\r\n  const [description, setWorkDescription] = useState(0);\r\n  // collect user data\r\n  const userData = props.user;\r\n  // create common data\r\n  const workData = {type, subtype, description};\r\n  const workerData = undefined;\r\n\r\n  // history\r\n  const history = useHistory();\r\n\r\n  // use fetch hooks\r\n  const {\r\n    tasksGet,\r\n    tasksGetByClient,\r\n    tasksGetByWorker,\r\n    taskCreate,\r\n    taskUpdate,\r\n    taskDelete\r\n  } = useTaskFetch(urlData.network, props.token, workData, userData, workerData)\r\n\r\n\r\n  // set work type\r\n  const setType = (e) => {\r\n    // console.log('e.target - ' + e.target.value)\r\n    setWorkType(e.target.value);\r\n    setWorkSubtype(0);\r\n  }\r\n\r\n  // set work subtype\r\n  const setSubtype = (e) => {\r\n    // console.log('e.subtarget - ' + e.target.value)\r\n    setWorkSubtype(e.target.value);\r\n  }\r\n\r\n  // set work description\r\n  const setDescription = (e) => {\r\n    setWorkDescription(e.target.value);\r\n  }\r\n\r\n  // open alert popup\r\n  const alertOpen = () => {\r\n    SetAlertVisibility(true);\r\n  }\r\n  \r\n  // close alert popup with yes option\r\n  const alertCloseYesOption = (e) => {\r\n    e.preventDefault();\r\n    SetAlertVisibility(false);\r\n      props.formClose();\r\n  }\r\n\r\n  // close alert popup with yes option\r\n  const alertCloseNoOption = (e) => {\r\n    e.preventDefault();\r\n    SetAlertVisibility(false);\r\n  }\r\n\r\n  // closing by clicking on wrapper\r\n  const closeByWrapper = (e) => {\r\n    !e.target.closest('.task-form') && alertOpen();\r\n  }\r\n\r\n    // create new task\r\n    const createTask = () => {\r\n      taskCreate()\r\n      .then(res => {\r\n        console.log(res);\r\n      })\r\n      .catch(err => {\r\n        err.json()\r\n        .then(err => console.log(err));\r\n      })\r\n    }\r\n\r\n    // click to send\r\n    const formSubmit = (e) => {\r\n      e.preventDefault();\r\n      // console.log('token - ' + props.token);\r\n      createTask();\r\n      history.replace('/my-tasks');\r\n      props.formClose();\r\n    }\r\n\r\n\r\n  // console.log(selectedWorkType);\r\n  // console.log(selectedWorkSubtype);\r\n  // console.log('break');\r\n\r\n\r\n  return (\r\n    <div className={cn('task-form-wrapper', {'task-form-wrapper_visible': props.visibility})} onClick={closeByWrapper}>\r\n      <form className='task-form'>\r\n        <h2 className='task-form__title'>{taskFormData.title}</h2>\r\n        <ul className='task-form__list'>\r\n          <li className='task-form__list-item'>\r\n            <p className='task-form__field-note'>{taskFormData.workType}</p>\r\n            <TaskFormSelect name='work-type' label={taskFormLabels.workType} optionList={taskFormTypeList} selectOption={setType} />\r\n          </li>\r\n          <li className='task-form__list-item'>\r\n            <p className='task-form__field-note'>{taskFormData.workSubtype}</p>\r\n            <TaskFormSelect name='work-subtype' label={taskFormLabels.workSubtype} optionList={taskFormSubtypeList[type]} selectOption={setSubtype} />\r\n          </li>\r\n          <li className='task-form__list-item'>\r\n            <p className='task-form__field-note'>{taskFormData.workDescription}</p>\r\n            <textarea name='description' rows='4' className='task-form__field-item' placeholder={taskFormPlaceholders.workDescription} onChange={setDescription}></textarea>\r\n          </li>\r\n        </ul>\r\n        <p className='task-form__field-note'>Ваши имя, телефон и email будут указаны в заявке</p>\r\n        <button className='task-form__submit-button' onClick={formSubmit}>{buttonData.submit}</button>\r\n        <CloseButton onPress={alertOpen} />\r\n        <AlertPopup visibility={alertVisibility} title={alertPopupData.dataFormClose} onYesClick={alertCloseYesOption} onNoClick={alertCloseNoOption} />\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default TaskForm;","export const tasksData = {\r\n  title: 'Мои заявки',\r\n  buttonName: 'Фильтр',\r\n  emptyNote: 'У вас пока нет заявок',\r\n}\r\n\r\nexport const taskStatus = {\r\n  send: 'Размещена',\r\n  confirmed: 'Принята',\r\n  finished: 'Выполнена',\r\n}","export default __webpack_public_path__ + \"static/media/about_bgi.6cb1ec04.svg\";","import React from 'react';\r\nimport {taskFormSubtypeList} from '../../constants/formData';\r\nimport {taskStatus} from '../../constants/tasksData';\r\nimport bgImg from '../../images/about_bgi.svg';\r\nimport './Mytask.css';\r\n\r\n\r\nconst Mytask = (props) => {\r\n  const status = props.task.accepted && props.task.completed ? \r\n  taskStatus.finished : \r\n  props.task.accepted ? taskStatus.confirmed : \r\n  taskStatus.send;\r\n\r\n  const taskSubtypeList = taskFormSubtypeList[props.task.type];\r\n  const taskSubtype = taskSubtypeList[props.task.subtype];\r\n  const taskCreatedTime = props.task.created_at.slice(0, 10);\r\n\r\n  return (\r\n    <li className='mytasks__item' id={props.number} onClick={props.onTaskShow}>\r\n      <p className='mytasks__item-worktitle'>Вид работы</p>\r\n      <h3 className='mytasks__name'>{taskSubtype}</h3>\r\n      <p className='mytasks__item-title'>Дата создания</p>\r\n      <time className='mytasks__date'>{taskCreatedTime}</time>\r\n      <p className='mytasks__item-title'>Описание работы</p>\r\n      <time className='mytasks__description'>{props.task.description}</time>\r\n      <div className='mytasks__status-wrapper'>\r\n        <p className='mytasks__status'>Статус</p>\r\n        <p className='mytasks__status mytasks__status_type'>{status}</p>\r\n      </div>\r\n      <img className='mytasks__label' src={bgImg} alt='label' />\r\n    </li>\r\n  )\r\n}\r\n\r\nexport default Mytask;\r\n","const useQuoteFetch = (url, keyword) => {\r\n\r\n  const quoteSearch = () => {\r\n    return fetch (`${url}?q=${keyword}&onlyLines=50`, {\r\n      redirect: 'follow',\r\n      method: 'GET',\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json',\r\n    }})\r\n    .then(res => {\r\n      return( res.ok ? res.json() : Promise.reject(res));\r\n    })\r\n    .then(data => {\r\n      if (!data || data.length === 0) return;\r\n      if (data.length === 1) return (data[0].fields.text);\r\n      return data[Math.round(Math.random() * (data.length - 1))].fields.text;\r\n    })\r\n    .catch(err => console.log(err));\r\n  }\r\n\r\n  return {quoteSearch};\r\n}\r\n\r\nexport default useQuoteFetch;","export const ratingValue = [\r\n  'Пока нет отзывов о работе',\r\n  [\r\n    'Ужасно',\r\n    'Кошмарно',\r\n    'Плохо'\r\n  ],\r\n  [\r\n    'Хорошо',\r\n    'Прилежно',\r\n    'Неплохо'\r\n  ],\r\n  [\r\n    'Здорово',\r\n    'Отлично'\r\n  ],\r\n  [\r\n    'Прекрасно',\r\n    'Великолепно'\r\n  ]\r\n]","export default __webpack_public_path__ + \"static/media/popup-label.cfa01128.svg\";","import {useState, useEffect} from 'react';\r\nimport cn from 'classnames';\r\nimport CloseButton from '../CloseButton/CloseButton';\r\nimport AlertPopup from '../AlertPopup/AlertPopup';\r\nimport useTaskFetch from '../../hooks/useTaskFetch';\r\nimport useQuoteFetch from '../../hooks/useQuoteFetch';\r\nimport {urlData} from '../../constants/urlData';\r\nimport {ratingValue} from '../../constants/ratingValue';\r\nimport {taskButtonPlaceholders, buttonData, alertPopupData, taskFormSubtypeList} from '../../constants/formData';\r\nimport popupLabel from '../../images/popup-label.svg';\r\nimport './TaskCard.css'\r\n\r\nconst TaskCard = (props) => {\r\n  // set work status\r\n  const [workConfirmation, setWorkConfirmation] = useState('not-confirmed');\r\n  const [alertVisibility, SetAlertVisibility] = useState(false);\r\n  const [feedbackValue, setFeedbackValue] = useState('');\r\n  const [rating, setRating] = useState(0);\r\n  const [quote, setQuote] = useState('');\r\n\r\n  // constants\r\n  const taskCreatedTime = props.currentTask.created_at.slice(0, 10);\r\n  const workSubTypeList = taskFormSubtypeList[props.currentTask.type];\r\n  const workData = props.currentTask;\r\n  const worker = undefined;\r\n\r\n  // hooks\r\n  // task hook\r\n  const {\r\n    taskUpdate,\r\n    taskDelete\r\n  } = useTaskFetch(urlData.network, props.token, workData, props.user, worker);\r\n\r\n  // qoute hook\r\n  const {quoteSearch} = useQuoteFetch(urlData.quoteUrl, feedbackValue);\r\n\r\n  // set initial rating\r\n  useEffect(() => {\r\n    setRating(props.currentTask.rating);\r\n  }, [props.currentTask])\r\n\r\n  //set feedback value\r\n  useEffect(() => {\r\n    const keywordList = ratingValue[rating];\r\n    const keyword = rating == 0 ? ratingValue[0] :  keywordList[Math.round(Math.random() * (keywordList.length - 1))];\r\n    setFeedbackValue(keyword);\r\n    console.log('feedbackval - ' + feedbackValue);\r\n  }, [rating])\r\n\r\n  // set quote\r\n  useEffect(() => {\r\n    if (rating == 0) {\r\n      setQuote(feedbackValue);\r\n    }\r\n    quoteSearch()\r\n    .then(data => {\r\n      console.log('data - ' + data);\r\n      if (!data) return;\r\n      setQuote(data);\r\n    })\r\n    console.log('quote - ' + quote);\r\n  }, [feedbackValue])\r\n\r\n  // work status setter\r\n  const setWorkStatus = () => {\r\n    setWorkConfirmation(workConfirmation === 'not-confirmed' ? 'confirmed' : workConfirmation === 'confirmed' ? 'done' : 'not-confirmed');\r\n  }\r\n\r\n  // closing by clicking on wrapper\r\n  const closeByWrapper = (e) => {\r\n    e.preventDefault();\r\n    !e.target.closest('.task-card') && props.onClose();\r\n  }\r\n\r\n  // open alert popup\r\n  const alertOpen = () => {\r\n    SetAlertVisibility(true);\r\n  }\r\n\r\n  // close alert popup\r\n  const alertClose = (e) => {\r\n    e.preventDefault();\r\n    SetAlertVisibility(false);\r\n  }\r\n\r\n  const setFeedback = (e) => {\r\n    setFeedbackValue(e.target.value);\r\n  }\r\n\r\n  const changeRating = (e) => {\r\n    if (e.target.id == rating) {\r\n      setRating(e.target.id - 1);\r\n    } else setRating(e.target.id);\r\n  }\r\n\r\n  const updateTask = (e) => {\r\n    e.preventDefault();\r\n    workData.feedback = quote;\r\n    workData.rating = rating;\r\n    if (workConfirmation === 'not-confirmed') {\r\n      workData.accepted = false;\r\n      workData.completed = false;\r\n    } else if (workConfirmation === 'confirmed') {\r\n      workData.accepted = true;\r\n      workData.completed = false;\r\n    }else if (workConfirmation === 'done') {\r\n      workData.accepted = true;\r\n      workData.completed = true;\r\n    };\r\n    taskUpdate()\r\n    .then(res => console.log(res))\r\n    .catch(err => console.log(err));\r\n    props.onClose();\r\n  }\r\n\r\n  const deleteTask = (e) => {\r\n    e.preventDefault();\r\n    taskDelete()\r\n    .then(res => console.log(res))\r\n    .catch(err => console.log(err));\r\n    SetAlertVisibility(false);\r\n    props.onClose();\r\n  }\r\n\r\n  return (\r\n    <div className={cn('task-card__wrapper', {'task-card__wrapper_visible': props.visibility})} onClick={closeByWrapper}>\r\n      <section className='task-card'>\r\n        <h2 className='task-card__title'>{workSubTypeList[props.currentTask.subtype]  }</h2>\r\n        <p className='task-card__create-data'>{taskCreatedTime}</p>\r\n        <p className='task-card__description'>{props.currentTask.description}</p>\r\n        <button className='task-card__confirm-button' onClick={setWorkStatus}>{\r\n          workConfirmation === 'not-confirmed' ? taskButtonPlaceholders.notConfirmed : \r\n          workConfirmation === 'confirmed' ? taskButtonPlaceholders.confirmed : taskButtonPlaceholders.finished\r\n          }</button>\r\n        <ul className='task-card__rating-container'>\r\n          <li id='1' className={cn('task-card__rating-item', {'task-card__rating-item_active': rating >= 1})} onClick={changeRating} />\r\n          <li id='2' className={cn('task-card__rating-item', {'task-card__rating-item_active': rating >= 2})} onClick={changeRating} />\r\n          <li id='3' className={cn('task-card__rating-item', {'task-card__rating-item_active': rating >= 3})} onClick={changeRating} />\r\n          <li id='4' className={cn('task-card__rating-item', {'task-card__rating-item_active': rating == 4})} onClick={changeRating} />\r\n        </ul>\r\n        <div className='task-card__button-wrapper'>\r\n          <button className='task-card__button task-card__button_save-button' onClick={updateTask}>{buttonData.save}</button>\r\n          <button className='task-card__button task-card__button_delete-button' onClick={alertOpen} >{buttonData.delete}</button>\r\n        </div>\r\n        <CloseButton onPress={props.onClose} />\r\n        <AlertPopup visibility={alertVisibility} title={alertPopupData.dataCardDelete} onYesClick={deleteTask} onNoClick={alertClose} />\r\n        <img className='task-card__label' src={popupLabel} alt='task-card-label' />\r\n      </section>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default TaskCard;","import {useState, useEffect} from 'react';\r\nimport Mytask from '../Mytask/Mytask';\r\nimport TaskCard from '../TaskCard/TaskCard';\r\nimport useTaskFetch from '../../hooks/useTaskFetch';\r\nimport {tasksData} from '../../constants/tasksData';\r\nimport {urlData} from '../../constants/urlData';\r\nimport './Mytasks.css';\r\n\r\nconst Mytasks = (props) => {\r\n  const [taskList, setTaskList] = useState([]);\r\n  const [taskCardShow, setTaskCardShow] = useState(false);\r\n  const [currentTask, setCurTask] = useState([]);\r\n  // get user token\r\n  // temp data\r\n  const workData = undefined;\r\n  const worker = undefined;\r\n\r\n  const {tasksGetByClient} = useTaskFetch(urlData.network, props.token, workData, props.user, worker);\r\n\r\n  useEffect(() => {\r\n    !props.token && !props.user.username && setTaskList([]);\r\n    tasksGetByClient()\r\n    .then(res => {\r\n      setTaskList(res);\r\n    })\r\n    console.log('upd')\r\n  }, [])\r\n\r\n  const showTaskCard = (e) => {\r\n    console.log(e.target.id);\r\n    setCurTask(taskList[e.target.id]);\r\n    setTaskCardShow(true);\r\n    // console.log('currentTask - ' + currentTask.client_name);\r\n  }\r\n\r\n  const hideTaskCard = () => {\r\n    setTaskCardShow(false);\r\n  }\r\n\r\n\r\n  return (\r\n    <section className='mytasks'>\r\n      <div className='mytasks__container'>\r\n        <h2 className='mytasks__title'>{tasksData.title}</h2>\r\n      </div>\r\n      <ul className='mytasks__list'>\r\n        {taskList.length === 0 ?\r\n          <p className='mytasks__empty-note'>{tasksData.emptyNote}</p> :\r\n          taskList.map((item, num) => {\r\n            return (\r\n              <Mytask key={num} number={num} onTaskShow={showTaskCard} task={item}/>\r\n            )\r\n          })\r\n        }\r\n      </ul>\r\n      {currentTask.length !== 0 &&\r\n        <TaskCard visibility={taskCardShow} currentTask={currentTask} onClose={hideTaskCard} token={props.token} user={props.user} />\r\n      }\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default Mytasks;\r\n","import { Route, Redirect } from 'react-router-dom';\r\n\r\nconst ProtectedRoute = ({component: Component, ...props}) => {\r\n  return (\r\n    <Route>\r\n      {\r\n        () => props.loggedIn ? <Component {...props} /> : <Redirect to='./' />\r\n      }\r\n    </Route>\r\n  )\r\n}\r\n\r\nexport default ProtectedRoute;","import {useState, useEffect} from 'react';\r\nimport { Route, Switch, Redirect } from 'react-router-dom';\r\n// hooks\r\nimport useTaskFetch from '../hooks/useTaskFetch';\r\n// components\r\nimport Header from './Header/Header';\r\nimport Main from './Main/Main';\r\nimport About from './About/About';\r\nimport Poem from './Poem/Poem';\r\nimport Reviews from './Reviews/Reviews';\r\nimport Footer from './Footer/Footer';\r\nimport TaskForm from './TaskForm/TaskForm';\r\n// import TaskCard from './TaskCard/TaskCard';\r\nimport Mytasks from './Mytasks/Mytasks';\r\nimport ProtectedRoute from './ProtectedRoute/ProtectedRoute';\r\n// constants\r\nimport {urlData} from '../constants/urlData';\r\n// css\r\nimport './App.css';\r\n\r\nfunction App() {\r\n  // select states\r\n  const [taskShow, setTaskShow] = useState(false);\r\n  // const [taskCardShow, setTaskCardShow] = useState(false);\r\n  const [user, setUser] = useState({\r\n    id: undefined,\r\n    username: undefined,\r\n    userphone: undefined,\r\n    email: undefined,\r\n  });\r\n  const [loggedIn, setLoggedIn] = useState(false);\r\n  const [currentTask, setCurrentTask] = useState(undefined);\r\n\r\n  // token\r\n  const token = JSON.parse(localStorage.getItem('jwt'));\r\n  const workData = undefined;\r\n  const worker = undefined;\r\n\r\n  // task fetch api\r\n  const {\r\n    tasksGet,\r\n    tasksGetByClient,\r\n    tasksGetByWorker,\r\n    taskCreate,\r\n    taskUpdate,\r\n    taskDelete\r\n  } = useTaskFetch (urlData.network, token, workData, user, worker);\r\n\r\n  // console.log('user - ' + user.userName)\r\n\r\n    // set task list\r\n    // useEffect(() => {\r\n    //   !token && !user.userName && setTaskList([]);\r\n    //   tasksGetByClient()\r\n    //   .then(res => {\r\n    //     setTaskList(res);\r\n    //   })\r\n    // }, [user, token])\r\n\r\n  // show task popup\r\n  const showTaskPopup = () => {\r\n    setTaskShow(true)\r\n  }\r\n\r\n  // hide task popup\r\n  const hideTaskPopup = () => {\r\n    setTaskShow(false)\r\n  }\r\n\r\n  // fetch user\r\n  const setCurrentUser = (res) => {\r\n    localStorage.setItem('jwt', JSON.stringify(res.jwt))\r\n    setUser({\r\n      id: res.user.id,\r\n      username: res.user.username,\r\n      userphone: res.user.userphone,\r\n      email: res.user.email,\r\n    });\r\n    setLoggedIn(true);\r\n  }\r\n\r\n  const logout = (res) => {\r\n    localStorage.removeItem('jwt')\r\n    setUser({\r\n      id: undefined,\r\n      username: undefined,\r\n      userphone: undefined,\r\n      email: undefined,\r\n    });\r\n    setLoggedIn(false);\r\n  }\r\n\r\n  console.log(localStorage.getItem('jwt'))\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Header setUser={setCurrentUser} user={user} loggedIn={loggedIn} logout={logout}/>\r\n      <Main showTaskForm={showTaskPopup} hideTaskForm={hideTaskPopup} user={user} loggedIn={loggedIn} />\r\n      <Switch>\r\n        <Route exact path='/'>\r\n          <About />\r\n          <Poem />\r\n          <Reviews />\r\n        </Route>\r\n        <ProtectedRoute path='/my-tasks' \r\n          loggedIn={loggedIn} \r\n          component={Mytasks} \r\n          // onTaskShow={showTaskCardPopup} \r\n          // tasks={taskList} \r\n          user={user} \r\n          token={token} />\r\n        {/* <Route path='/my-tasks'>\r\n          <Mytasks onTaskShow={showTaskCardPopup} tasks={taskList}/>\r\n        </Route> */}\r\n      </Switch>\r\n      <Footer />\r\n      <TaskForm visibility={taskShow} formClose={hideTaskPopup} user={user} token={token} />\r\n      {/* <TaskCard visibility={taskCardShow} formClose={hideTaskCardPopup} /> */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport './index.css';\r\nimport App from './components/App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <BrowserRouter>\r\n      <App />\r\n    </BrowserRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}