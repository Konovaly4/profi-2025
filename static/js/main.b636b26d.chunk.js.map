{"version":3,"sources":["components/CloseButton/CloseButton.jsx","constants/userPopupData.js","components/UserPopup/UserPopup.jsx","components/Header/Header.jsx","components/Button/Button.jsx","constants/mainButtonsData.js","components/Main/Main.jsx","components/About/About.jsx","components/Poem/Poem.jsx","components/Reviews/Reviews.jsx","components/Footer/Footer.jsx","components/TaskForm/TaskFormSelect/TaskFormSelect.jsx","components/AlertPopup/AlertPopup.jsx","constants/formData.js","components/TaskForm/TaskForm.jsx","components/TaskCard/TaskCard.jsx","components/Mytask/Mytask.jsx","components/Mytasks/Mytasks.jsx","components/App.js","reportWebVitals.js","index.js"],"names":["CloseButton","props","className","onClick","onPress","regPopupData","UserPopup","useState","visibility","setVisibility","useEffect","state","cn","e","target","closest","clearRegState","type","name","placeholder","preventDefault","setLoginState","Header","userState","setUserState","href","src","alt","class","Button","mainButtonsData","Buttons","showTaskForm","About","Poem","Reviews","Footer","TaskFormSelect","label","optionList","selectOption","onChange","map","item","num","value","AlertPopup","title","onYesClick","onNoClick","taskFormData","taskFormPlaceholders","taskButtonPlaceholders","taskFormLabels","alertPopupData","taskFormTypeList","taskFormSubtypeList","buttonData","TaskForm","workType","setWorkType","workSubtype","setWorkSubtype","alertVisibility","SetAlertVisibility","selectedWorkType","selectedWorkSubtype","alertOpen","alertClose","formClose","console","log","rows","required","minLength","TaskCard","workConfirmation","setWorkConfirmation","Mytask","onTaskShow","datetime","Mytasks","App","taskShow","setTaskShow","taskCardShow","setTaskCardShow","hideTaskPopup","hideTaskForm","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b636b26d.chunk.js","sourcesContent":["import './CloseButton.css';\r\n\r\nconst CloseButton = (props) => {\r\n  return (\r\n    <button className='close-button' onClick={props.onPress} />\r\n  )\r\n}\r\n\r\nexport default CloseButton;","export const regPopupData = {\r\n  regTitle: 'Зарегистрироваться',\r\n  loginTitle: 'Войти',\r\n  name: 'Введите свое имя',\r\n  phone: 'Запишите свой телефон',\r\n  email: 'Вспомните свой email',\r\n  password: 'Придумайте пароль',\r\n  regButton: 'Зарегистрироваться',\r\n  loginButton: 'Войти'\r\n}\r\n","import {useState, useEffect} from 'react';\r\nimport cn from 'classnames';\r\nimport CloseButton from '../CloseButton/CloseButton';\r\nimport {regPopupData} from '../../constants/userPopupData';\r\nimport './UserPopup.css';\r\n\r\nconst UserPopup = (props) => {\r\n  const [visibility, setVisibility] = useState(false);\r\n\r\n  // popup open\r\n  useEffect(() => {\r\n    props.state !== '' ? setVisibility(true) : setVisibility(false);\r\n  }, [props.state])\r\n\r\n  // popup close by click on wrapper\r\n  const closeByWrapper = (e) => {\r\n    !e.target.closest('.user-popup') && props.clearRegState();\r\n  }\r\n\r\n  // start registration\r\n  const registrate = (e) => {\r\n    e.preventDefault();\r\n    props.clearRegState();\r\n  }\r\n\r\n  // start login\r\n  const login = (e) => {\r\n    e.preventDefault();\r\n    props.clearRegState();\r\n  }\r\n\r\n\r\n\r\n  return (\r\n    <div className={cn('user-popup__wrapper', {'user-popup__wrapper_visible': visibility})} onClick={closeByWrapper }>\r\n      <form className='user-popup'>\r\n        <h2 className='user-popup__title'>{props.state === 'registration' ? regPopupData.regTitle :regPopupData.loginTitle}</h2>\r\n        {props.state === 'registration' && <input className='user-popup__input' type='text' name='name' placeholder={regPopupData.name}></input>}\r\n        {props.state === 'registration' && <input className='user-popup__input' type='text' name='phone' placeholder={regPopupData.phone}></input>}\r\n        <input className='user-popup__input' type='email' name='email' placeholder={regPopupData.email}></input>\r\n        <input className='user-popup__input' type='text' name='password' placeholder={regPopupData.password}></input>\r\n        <div className='user-popup__button-wrapper'>\r\n          {props.state === 'registration' && <button className='user-popup__reg-button' onClick={registrate}>{regPopupData.regButton}</button>}\r\n          <button className='user-popup__reg-button' onClick = {\r\n            props.state === 'registration' ? props.setLoginState : login\r\n          }>{regPopupData.loginButton}</button>\r\n        </div>\r\n        <CloseButton onPress={props.clearRegState} />\r\n      </form>\r\n    </div>\r\n\r\n  )\r\n}\r\n\r\nexport default UserPopup;\r\n","import {useState} from 'react';\r\nimport UserPopup from '../UserPopup/UserPopup';\r\nimport './Header.css';\r\n\r\nconst Header = () => {\r\n  // collecting states\r\n  const [userState, setUserState] = useState('');\r\n\r\n  // set reg state\r\n  const setRegState = (e) => {\r\n    e.preventDefault();\r\n    setUserState('registration');\r\n  }\r\n\r\n  // set reg state\r\n  const setLoginState = () => {\r\n    setUserState('login');\r\n  }\r\n\r\n  // clear reg state\r\n  const clearRegState = () => { \r\n    setUserState('');\r\n  }\r\n\r\n  return (\r\n    <header className='header'>\r\n      <div className='header__container'>\r\n        <a className='header__link' href='#'>\r\n        <img className='header__img' src='#' alt='logo' />\r\n        </a>\r\n        <ul className='user-navigation'>\r\n          <li className='user-navigation__item' onClick={setLoginState}><a class='login-link' href='#'>Вход</a></li>\r\n          <li className='user-navigation__item' onClick={setRegState}><a class='signin-link' href='#'>Регистрация</a></li>\r\n        </ul>\r\n        <UserPopup state={userState} setUserState={setUserState} setLoginState={setLoginState} clearRegState={clearRegState}/>\r\n      </div>\r\n    </header>\r\n  )\r\n}\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport './Button.css';\r\n\r\n\r\nconst Button = (props) => {\r\n\r\n  return (\r\n    <button className='button' onClick={props.onPress}>{props.placeholder}</button>\r\n  )\r\n}\r\n\r\nexport default Button;\r\n","export const mainButtonsData = {\r\n  showTasks: 'Мои заявки',\r\n  createTask: 'Создать заявку'\r\n}","import React from 'react';\r\nimport Button from '../Button/Button';\r\nimport {mainButtonsData} from '../../constants/mainButtonsData';\r\nimport './Main.css';\r\n\r\nconst Buttons = (props) => {\r\n\r\n  return (\r\n    <section className='main'>\r\n        <h2 className='main__title'>Найди Мастера - 2025</h2>\r\n        <div className='main__buttons-container'>\r\n          <Button placeholder={mainButtonsData.showTasks}/>\r\n          <Button placeholder={mainButtonsData.createTask} onPress={props.showTaskForm}/>\r\n        </div>\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default Buttons;\r\n","import React from 'react';\r\nimport './About.css';\r\n\r\nconst About = () => {\r\n\r\n  return (\r\n    <section className='about'>\r\n        <h2 className='about__title'>Как это работает</h2>\r\n        <article className='about__info'>Тут будет наглядная инструкция на тему \"Как оставить заявку чтобы ее нашел мастер\"</article>\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default About;\r\n","import React from 'react';\r\nimport './Poem.css';\r\n\r\nconst Poem = () => {\r\n\r\n  return (\r\n    <section className='poem'>\r\n        <article className='poem__content'>Тут будет стих, вещающий о смысле всех работ</article>\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default Poem;\r\n","import React from 'react';\r\nimport './Reviews.css';\r\n\r\nconst Reviews = () => {\r\n\r\n  return (\r\n    <section className='reviews'>\r\n      <h2 className='reviews__title'>Отзывы</h2>\r\n      <ul className='reviews__list'>\r\n        <li className='reviews__item'>\r\n          <p className='reviews__content'>Здесь будет отзыв о работах</p>\r\n        </li>\r\n        <li className='reviews__item'>\r\n          <p className='reviews__content'>Здесь будет отзыв о работах</p>\r\n        </li>\r\n        <li className='reviews__item'>\r\n          <p className='reviews__content'>Здесь будет отзыв о работах</p>\r\n        </li>\r\n      </ul>\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default Reviews;\r\n","import React from 'react';\r\nimport './Footer.css';\r\n\r\nconst Footer = () => {\r\n\r\n  return (\r\n    <footer className='footer'>\r\n      <p className='footer__title'>Тут будет футер (над наполнением работаем :-) Под футером - дополнительные блоки, функционал их появления допилим</p>\r\n    </footer>\r\n  )\r\n}\r\n\r\nexport default Footer;\r\n","import './TaskFormSelect.css'\r\n\r\nconst TaskFormSelect = ({name, label, optionList, selectOption}) => {\r\n\r\n  // console.log('optionlist - '+optionList)\r\n\r\n  return (\r\n    <select className='select' name={name} label={label} onChange={selectOption}>\r\n      {optionList.map((item, num) => {\r\n        return (\r\n          <option key={num} className='select__option' value={num}>{item}</option>\r\n        )\r\n      })}\r\n    </select>\r\n  )\r\n}\r\n\r\nexport default TaskFormSelect;","import cn from 'classnames';\r\nimport './AlertPopup.css';\r\n\r\nconst AlertPopup = (props) => {\r\n\r\n  return (\r\n    <div className={cn('alert-popup__wrapper', {'alert-popup__wrapper_visible': props.visibility})}>\r\n      <section className='alert-popup'>\r\n        <p className='alert-popup__title'>{props.title}</p>\r\n        <div className='alert-popup__button-wrapper'>\r\n          <button className='alert-popup__button alert-popup__button_yes-button' onClick={props.onYesClick}>Да</button>\r\n          <button className='alert-popup__button alert-popup__button_no-button' onClick={props.onNoClick}>Нет</button>\r\n        </div>\r\n      </section>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AlertPopup;","export const myTasksData = [\r\n'Поменять электропроводку',\r\n'Убрать квартиру',\r\n'Покрасить стены',\r\n'Поменять кран',\r\n]\r\n\r\nexport const taskFormData = {\r\n  title: 'Заявка на ремонт',\r\n  workType: 'Мне нужно',\r\n  workSubtype: 'Подробнее, что нужно',\r\n  workDescription: 'В нескольких словах, что именно нужно',\r\n  name: 'Имя заявителя',\r\n  phone: 'Телефон заявителя',\r\n  email: 'e-mail заявителя'\r\n}\r\n\r\nexport const taskFormPlaceholders = {\r\n  workDescription: 'Опишите работу',\r\n  clientName: 'Введите свое имя',\r\n  clientPhone: 'Введите телефон',\r\n  clientEmail: 'Введите email',\r\n  clientFeedback: 'Оставьте отзыв после выполнения работы'\r\n}\r\n\r\nexport const taskButtonPlaceholders = {\r\n  confirmed: 'В работе',\r\n  notConfirmed: 'Ожидает мастера',\r\n  finished: 'Выполнена',\r\n  notFinished: 'Не выполнена'\r\n}\r\n\r\nexport const taskFormLabels = {\r\n  workType: 'Услуга',\r\n  workSubtype: 'Подкатегория услуги',\r\n}\r\n\r\nexport const alertPopupData = {\r\n  dataCardDelete: 'Вы действительно хотите удалить заявку?',\r\n  dataFormClose: 'Вы действительно хотите отменить оформление заявки?'\r\n}\r\n\r\nexport const taskFormTypeList = [\r\n  'Электрика',\r\n  'Сантехника',\r\n  'Отделочные работы',\r\n  'Мебель, двери, окна',\r\n  'Компьютерная помощь',\r\n  'Уборка',\r\n]\r\n\r\nexport const taskFormSubtypeList = [\r\n  [\r\n    'Установка или замена розеток',\r\n    'Ремонт электропроводки',\r\n    'Замена оборудования',\r\n    'Ремонт электроприборов'\r\n  ],\r\n  [\r\n    'Ремонт сантехнических приборов',\r\n    'Установка или замена сантехнических приборов',\r\n    'Устранение засоров и прочистка фильтров',\r\n    'Ремонт или замена трубопроводов и арматуры',\r\n    'Ремонт или замена отопительных приборов'\r\n  ],\r\n  [\r\n    'Поклейка обоев',\r\n    'Покраска стен и потолка',\r\n    'Укладка плитки',\r\n    'Комплексная подготовка и отделка помещений'\r\n  ],\r\n  [\r\n    'Сборка мебели',\r\n    'Установка дверей',\r\n    'Установка окон',\r\n    'Остекление балконов',\r\n    'Навешивание полок и фурнитуры'\r\n  ],\r\n  [\r\n    'Помощь в покупке компьютера',\r\n    'Установка и удаление программ',\r\n    'Ремонт и замена оборудования',\r\n    'Подключение и настройка интернета'\r\n  ],\r\n  [\r\n    'Комплексная уборка помещения',\r\n    'Мытье окон',\r\n    'Прачечная'\r\n  ],\r\n]\r\n\r\nexport const buttonData = {\r\n  save: 'Сохранить',\r\n  delete: 'Удалить',\r\n  submit: 'Отправить'\r\n}\r\n","import {useState, useEffect} from 'react';\r\nimport cn from 'classnames';\r\nimport TaskFormSelect from './TaskFormSelect/TaskFormSelect';\r\nimport CloseButton from '../CloseButton/CloseButton';\r\nimport AlertPopup from '../AlertPopup/AlertPopup';\r\nimport useTaskFetch from '../../hooks/useTaskFetch';\r\nimport {taskFormData, alertPopupData, taskFormPlaceholders,  taskFormLabels, taskFormTypeList, taskFormSubtypeList, buttonData} from '../../constants/formData';\r\n\r\nimport './TaskForm.css';\r\n\r\nconst TaskForm = (props) => {\r\n  // select states\r\n  const [workType, setWorkType] = useState(0);\r\n  const [workSubtype, setWorkSubtype] = useState(0);\r\n  const [alertVisibility, SetAlertVisibility] = useState(false);\r\n\r\n  // set work type\r\n  const setType = (e) => {\r\n    // console.log('e.target - ' + e.target.value)\r\n    setWorkType(e.target.value);\r\n    setWorkSubtype(0);\r\n  }\r\n\r\n  // set work subtype\r\n  const setSubtype = (e) => {\r\n    // console.log('e.subtarget - ' + e.target.value)\r\n    setWorkSubtype(e.target.value);\r\n  }\r\n\r\n  // collect data to fetch\r\n  let selectedWorkType = taskFormTypeList[workType];\r\n  let selectedWorkSubtype = taskFormSubtypeList[workType][workSubtype];\r\n\r\n  // open alert popup\r\n  const alertOpen = () => {\r\n    SetAlertVisibility(true);\r\n  }\r\n  \r\n  // close alert popup\r\n  const alertClose = () => {\r\n    SetAlertVisibility(false);\r\n      props.formClose();\r\n  }\r\n\r\n  // closing by clicking on wrapper\r\n  const closeByWrapper = (e) => {\r\n    !e.target.closest('.task-form') && alertOpen();\r\n  }\r\n\r\n\r\n  console.log(selectedWorkType);\r\n  console.log(selectedWorkSubtype);\r\n  console.log('break');\r\n\r\n\r\n  return (\r\n    <div className={cn('task-form-wrapper', {'task-form-wrapper_visible': props.visibility})} onClick={closeByWrapper}>\r\n      <section className='task-form'>\r\n        <h2 className='task-form__title'>{taskFormData.title}</h2>\r\n        <ul className='task-form__list'>\r\n          <li className='task-form__list-item'>\r\n            <p className='task-form__field-note'>{taskFormData.workType}</p>\r\n            <TaskFormSelect name='work-type' label={taskFormLabels.workType} optionList={taskFormTypeList} selectOption={setType} />\r\n          </li>\r\n          <li className='task-form__list-item'>\r\n            <p className='task-form__field-note'>{taskFormData.workSubtype}</p>\r\n            <TaskFormSelect name='work-subtype' label={taskFormLabels.workSubtype} optionList={taskFormSubtypeList[workType]} selectOption={setSubtype} />\r\n          </li>\r\n          <li className='task-form__list-item'>\r\n            <p className='task-form__field-note'>{taskFormData.workDescription}</p>\r\n            <textarea name='description' rows='4' className='task-form__field-item' placeholder={taskFormPlaceholders.workDescription}></textarea>\r\n          </li>\r\n          <li className='task-form__list-item'>\r\n            <p className='task-form__field-note'>{taskFormData.name}</p>\r\n            <input type='text' required minLength='2' className='task-form__field-item' placeholder={taskFormPlaceholders.clientName}></input>\r\n          </li>\r\n          <li className='task-form__list-item'>\r\n            <p className='task-form__field-note'>{taskFormData.phone}</p>\r\n            <input type='text' required minLength='2' className='task-form__field-item' placeholder={taskFormPlaceholders.clientPhone}></input>\r\n          </li>\r\n          <li className='task-form__list-item'>\r\n            <p className='task-form__field-note'>{taskFormData.email}</p>\r\n            <input type='text' required minLength='2' className='task-form__field-item' placeholder={taskFormPlaceholders.clientEmail}></input>\r\n          </li>\r\n        </ul>\r\n        <button className='task-form__submit-button'>{buttonData.submit}</button>\r\n        <CloseButton onPress={alertOpen} />\r\n        <AlertPopup visibility={alertVisibility} title={alertPopupData.dataFormClose} onYesClick={alertClose} onNoClick={alertClose} />\r\n      </section>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default TaskForm;","import {useState} from 'react';\r\nimport cn from 'classnames';\r\nimport CloseButton from '../CloseButton/CloseButton';\r\nimport AlertPopup from '../AlertPopup/AlertPopup';\r\nimport {taskFormPlaceholders, taskButtonPlaceholders, buttonData, alertPopupData} from '../../constants/formData';\r\nimport './TaskCard.css'\r\n\r\nconst TaskCard = (props) => {\r\n  // set work status\r\n  const [workConfirmation, setWorkConfirmation] = useState('not-confirmed');\r\n  const [alertVisibility, SetAlertVisibility] = useState(false);\r\n\r\n  // work status setter\r\n  const setWorkStatus = () => {\r\n    setWorkConfirmation(workConfirmation === 'not-confirmed' ? 'confirmed' : workConfirmation === 'confirmed' ? 'done' : 'not-confirmed');\r\n  }\r\n\r\n  // closing by clicking on wrapper\r\n  const closeByWrapper = (e) => {\r\n    !e.target.closest('.task-card') && props.formClose();\r\n  }\r\n\r\n  // open alert popup\r\n  const alertOpen = () => {\r\n    SetAlertVisibility(true);\r\n  }\r\n\r\n  // close alert popup\r\n  const alertClose = () => {\r\n    SetAlertVisibility(false);\r\n    props.formClose();\r\n  }\r\n\r\n  return (\r\n    <div className={cn('task-card__wrapper', {'task-card__wrapper_visible': props.visibility})} onClick={closeByWrapper}>\r\n      <section className='task-card'>\r\n        <h2 className='task-card__title'>Подтип работы</h2>\r\n        <p className='task-card__create-data'>Дата создания</p>\r\n        <textarea className='task-card__description' rows='4' placeholder={taskFormPlaceholders.workDescription}></textarea>\r\n        <button className={cn('task-card__confirm-button', {\r\n          'task-card__confirm-button_not-confirmed': workConfirmation === 'not-confirmed',\r\n          'task-card__confirm-button_confirmed': workConfirmation === 'confirmed',\r\n          'task-card__confirm-button_done': workConfirmation === 'done'\r\n        })} onClick={setWorkStatus}>{\r\n          workConfirmation === 'not-confirmed' ? taskButtonPlaceholders.notConfirmed : \r\n          workConfirmation === 'confirmed' ? taskButtonPlaceholders.confirmed : taskButtonPlaceholders.finished\r\n          }</button>\r\n        <textarea className='task-card__feedback' rows='6' placeholder={taskFormPlaceholders.clientFeedback}></textarea>\r\n        <div className='task-card__button-wrapper'>\r\n          <button className='task-card__button task-card__button_save-button'>{buttonData.save}</button>\r\n          <button className='task-card__button task-card__button_delete-button' onClick={alertOpen} >{buttonData.delete}</button>\r\n        </div>\r\n        <CloseButton onPress={props.formClose} />\r\n        <AlertPopup visibility={alertVisibility} title={alertPopupData.dataCardDelete} onYesClick={alertClose} onNoClick={alertClose} />\r\n      </section>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default TaskCard;","import React from 'react';\r\nimport './Mytask.css';\r\n\r\n\r\nconst Mytask = (props) => {\r\n\r\n  return (\r\n    <li className='mytasks__item' onClick={props.onTaskShow}>\r\n      <time className='mytasks__date' datetime=\"2020-12-25\">25.12.2020</time>\r\n      <p className='mytasks__status'>Статус</p>\r\n      <h3 className='mytasks__name'>Поменять электропроводку</h3>\r\n      <p className='mytasks__status-type'>В обработке</p>\r\n    </li>\r\n  )\r\n}\r\n\r\nexport default Mytask;\r\n","import React from 'react';\r\nimport {myTasksData} from '../../constants/formData';\r\nimport Mytask from '../Mytask/Mytask';\r\nimport './Mytasks.css';\r\n\r\nconst Mytasks = (props) => {\r\n\r\n  return (\r\n    <section className='mytasks'>\r\n      <div className='mytasks__container'>\r\n        <h2 className='mytasks__title'>Мои заявки</h2>\r\n        <button className='mytasks__filter-button'>Фильтр</button>\r\n      </div>\r\n      <ul className='mytasks__list'>\r\n          <Mytask onTaskShow={props.onTaskShow}/>\r\n          <Mytask onTaskShow={props.onTaskShow}/>\r\n          <Mytask onTaskShow={props.onTaskShow}/>\r\n          <Mytask onTaskShow={props.onTaskShow}/>\r\n        </ul>\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default Mytasks;\r\n","import {useState} from 'react';\r\nimport Header from './Header/Header';\r\nimport Main from './Main/Main';\r\nimport About from './About/About';\r\nimport Poem from './Poem/Poem';\r\nimport Reviews from './Reviews/Reviews';\r\nimport Footer from './Footer/Footer';\r\nimport TaskForm from './TaskForm/TaskForm';\r\nimport TaskCard from './TaskCard/TaskCard';\r\nimport Mytasks from './Mytasks/Mytasks';\r\nimport './App.css';\r\n\r\nfunction App() {\r\n  // select states\r\n  const [taskShow, setTaskShow] = useState(false);\r\n  const [taskCardShow, setTaskCardShow] = useState(false);\r\n\r\n  // show task popup\r\n  const showTaskPopup = () => {\r\n    setTaskShow(true)\r\n  }\r\n\r\n  // hide task popup\r\n  const hideTaskPopup = () => {\r\n    setTaskShow(false)\r\n  }\r\n\r\n  // show task card popup\r\n  const showTaskCardPopup = () => {\r\n    setTaskCardShow(true)\r\n  }\r\n\r\n  // hide task popup\r\n  const hideTaskCardPopup = () => {\r\n    setTaskCardShow(false)\r\n  }\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Header />\r\n      <Main showTaskForm={showTaskPopup} hideTaskForm={hideTaskPopup} />\r\n      <About />\r\n      <Poem />\r\n      <Reviews />\r\n      <Footer />\r\n      <Mytasks onTaskShow={showTaskCardPopup} />\r\n      <TaskForm visibility={taskShow} formClose={hideTaskPopup} />\r\n      <TaskCard visibility={taskCardShow} formClose={hideTaskCardPopup} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './components/App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}